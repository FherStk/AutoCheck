### YamlMime:ManagedReference
items:
- uid: AutomatedAssignmentValidator.Core.Script`1
  commentId: T:AutomatedAssignmentValidator.Core.Script`1
  id: Script`1
  parent: AutomatedAssignmentValidator.Core
  children:
  - AutomatedAssignmentValidator.Core.Script`1.#ctor(System.String[])
  - AutomatedAssignmentValidator.Core.Script`1.Batch
  - AutomatedAssignmentValidator.Core.Script`1.CancelQuestion
  - AutomatedAssignmentValidator.Core.Script`1.Clean
  - AutomatedAssignmentValidator.Core.Script`1.CloseQuestion(System.String)
  - AutomatedAssignmentValidator.Core.Script`1.CpThresh
  - AutomatedAssignmentValidator.Core.Script`1.DefaultArguments
  - AutomatedAssignmentValidator.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  - AutomatedAssignmentValidator.Core.Script`1.IsQuestionOpen
  - AutomatedAssignmentValidator.Core.Script`1.OpenQuestion(System.String,System.Single)
  - AutomatedAssignmentValidator.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  - AutomatedAssignmentValidator.Core.Script`1.Path
  - AutomatedAssignmentValidator.Core.Script`1.PrintScore
  - AutomatedAssignmentValidator.Core.Script`1.Run
  - AutomatedAssignmentValidator.Core.Script`1.Score
  langs:
  - csharp
  - vb
  name: Script<T>
  nameWithType: Script<T>
  fullName: AutomatedAssignmentValidator.Core.Script<T>
  type: Class
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Script
    path: ../core/Script.cs
    startLine: 7
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: >-
      public abstract class Script<T>

          where T : CopyDetector, new()
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class Script(Of T As {CopyDetector, New})
  inheritance:
  - System.Object
  derivedClasses:
  - AutomatedAssignmentValidator.Core.ScriptDB`1
  - AutomatedAssignmentValidator.Core.ScriptFiles`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Script(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T)
  name.vb: Script(Of T)
- uid: AutomatedAssignmentValidator.Core.Script`1.Path
  commentId: P:AutomatedAssignmentValidator.Core.Script`1.Path
  id: Path
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Script<T>.Path
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Path
  type: Property
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Path
    path: ../core/Script.cs
    startLine: 8
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: protected string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property Path As String
  overload: AutomatedAssignmentValidator.Core.Script`1.Path*
  nameWithType.vb: Script(Of T).Path
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Path
- uid: AutomatedAssignmentValidator.Core.Script`1.CpThresh
  commentId: P:AutomatedAssignmentValidator.Core.Script`1.CpThresh
  id: CpThresh
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: CpThresh
  nameWithType: Script<T>.CpThresh
  fullName: AutomatedAssignmentValidator.Core.Script<T>.CpThresh
  type: Property
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CpThresh
    path: ../core/Script.cs
    startLine: 9
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: protected float CpThresh { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected Property CpThresh As Single
  overload: AutomatedAssignmentValidator.Core.Script`1.CpThresh*
  nameWithType.vb: Script(Of T).CpThresh
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).CpThresh
- uid: AutomatedAssignmentValidator.Core.Script`1.Score
  commentId: P:AutomatedAssignmentValidator.Core.Script`1.Score
  id: Score
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: Score
  nameWithType: Script<T>.Score
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Score
  type: Property
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Score
    path: ../core/Script.cs
    startLine: 14
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: public float Score { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Score As Single
  overload: AutomatedAssignmentValidator.Core.Script`1.Score*
  nameWithType.vb: Script(Of T).Score
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Score
- uid: AutomatedAssignmentValidator.Core.Script`1.IsQuestionOpen
  commentId: P:AutomatedAssignmentValidator.Core.Script`1.IsQuestionOpen
  id: IsQuestionOpen
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: IsQuestionOpen
  nameWithType: Script<T>.IsQuestionOpen
  fullName: AutomatedAssignmentValidator.Core.Script<T>.IsQuestionOpen
  type: Property
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: IsQuestionOpen
    path: ../core/Script.cs
    startLine: 15
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: public bool IsQuestionOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsQuestionOpen As Boolean
  overload: AutomatedAssignmentValidator.Core.Script`1.IsQuestionOpen*
  nameWithType.vb: Script(Of T).IsQuestionOpen
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).IsQuestionOpen
- uid: AutomatedAssignmentValidator.Core.Script`1.#ctor(System.String[])
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: Script(String[])
  nameWithType: Script<T>.Script(String[])
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Script(System.String[])
  type: Constructor
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: .ctor
    path: ../core/Script.cs
    startLine: 21
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: public Script(string[] args)
    parameters:
    - id: args
      type: System.String[]
    content.vb: Public Sub New(args As String())
  overload: AutomatedAssignmentValidator.Core.Script`1.#ctor*
  nameWithType.vb: Script(Of T).Script(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Script(System.String())
  name.vb: Script(String())
- uid: AutomatedAssignmentValidator.Core.Script`1.DefaultArguments
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.DefaultArguments
  id: DefaultArguments
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: DefaultArguments()
  nameWithType: Script<T>.DefaultArguments()
  fullName: AutomatedAssignmentValidator.Core.Script<T>.DefaultArguments()
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: DefaultArguments
    path: ../core/Script.cs
    startLine: 25
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: protected virtual void DefaultArguments()
    content.vb: Protected Overridable Sub DefaultArguments
  overload: AutomatedAssignmentValidator.Core.Script`1.DefaultArguments*
  nameWithType.vb: Script(Of T).DefaultArguments()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).DefaultArguments()
- uid: AutomatedAssignmentValidator.Core.Script`1.Batch
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.Batch
  id: Batch
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: Batch()
  nameWithType: Script<T>.Batch()
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Batch()
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Batch
    path: ../core/Script.cs
    startLine: 48
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: public virtual void Batch()
    content.vb: Public Overridable Sub Batch
  overload: AutomatedAssignmentValidator.Core.Script`1.Batch*
  nameWithType.vb: Script(Of T).Batch()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Batch()
- uid: AutomatedAssignmentValidator.Core.Script`1.Run
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.Run
  id: Run
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: Script<T>.Run()
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Run()
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Run
    path: ../core/Script.cs
    startLine: 103
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  summary: "\nThis method contains the main script to run for a single student.\nIt will be automatically invoked, so avoid manual calls and just implement the method within your script.\n"
  example: []
  syntax:
    content: public virtual void Run()
    content.vb: Public Overridable Sub Run
  overload: AutomatedAssignmentValidator.Core.Script`1.Run*
  nameWithType.vb: Script(Of T).Run()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Run()
- uid: AutomatedAssignmentValidator.Core.Script`1.Clean
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.Clean
  id: Clean
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: Clean()
  nameWithType: Script<T>.Clean()
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Clean()
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Clean
    path: ../core/Script.cs
    startLine: 111
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  summary: "\nThis method can be used in order to clean data before running a script for a single student.\nIt will be automatically invoked (only if needed), so avoid manual calls and just implement the method within your script.\n"
  example: []
  syntax:
    content: protected virtual void Clean()
    content.vb: Protected Overridable Sub Clean
  overload: AutomatedAssignmentValidator.Core.Script`1.Clean*
  nameWithType.vb: Script(Of T).Clean()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Clean()
- uid: AutomatedAssignmentValidator.Core.Script`1.OpenQuestion(System.String,System.Single)
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.OpenQuestion(System.String,System.Single)
  id: OpenQuestion(System.String,System.Single)
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: OpenQuestion(String, Single)
  nameWithType: Script<T>.OpenQuestion(String, Single)
  fullName: AutomatedAssignmentValidator.Core.Script<T>.OpenQuestion(System.String, System.Single)
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: OpenQuestion
    path: ../core/Script.cs
    startLine: 125
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  summary: "\nOpens a new question, so all the computed score within &quot;EvalQuestion&quot; method will belong to this one.\nWarning: It will cancell any previous question if it&apos;s open, so its computed score will be lost.\n"
  example: []
  syntax:
    content: protected void OpenQuestion(string caption, float score = 0F)
    parameters:
    - id: caption
      type: System.String
      description: ''
    - id: score
      type: System.Single
      description: ''
    content.vb: Protected Sub OpenQuestion(caption As String, score As Single = 0F)
  overload: AutomatedAssignmentValidator.Core.Script`1.OpenQuestion*
  nameWithType.vb: Script(Of T).OpenQuestion(String, Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).OpenQuestion(System.String, System.Single)
- uid: AutomatedAssignmentValidator.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  id: OpenQuestion(System.String,System.String,System.Single)
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: OpenQuestion(String, String, Single)
  nameWithType: Script<T>.OpenQuestion(String, String, Single)
  fullName: AutomatedAssignmentValidator.Core.Script<T>.OpenQuestion(System.String, System.String, System.Single)
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: OpenQuestion
    path: ../core/Script.cs
    startLine: 134
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  summary: "\nOpens a new question, so all the computed score within &quot;EvalQuestion&quot; method will belong to this one.\nWarning: It will cancell any previous question if it&apos;s open, so its computed score will be lost.\n"
  example: []
  syntax:
    content: protected void OpenQuestion(string caption, string description, float score = 0F)
    parameters:
    - id: caption
      type: System.String
      description: ''
    - id: description
      type: System.String
    - id: score
      type: System.Single
      description: ''
    content.vb: Protected Sub OpenQuestion(caption As String, description As String, score As Single = 0F)
  overload: AutomatedAssignmentValidator.Core.Script`1.OpenQuestion*
  nameWithType.vb: Script(Of T).OpenQuestion(String, String, Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).OpenQuestion(System.String, System.String, System.Single)
- uid: AutomatedAssignmentValidator.Core.Script`1.CancelQuestion
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.CancelQuestion
  id: CancelQuestion
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: CancelQuestion()
  nameWithType: Script<T>.CancelQuestion()
  fullName: AutomatedAssignmentValidator.Core.Script<T>.CancelQuestion()
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CancelQuestion
    path: ../core/Script.cs
    startLine: 148
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: protected void CancelQuestion()
    content.vb: Protected Sub CancelQuestion
  overload: AutomatedAssignmentValidator.Core.Script`1.CancelQuestion*
  nameWithType.vb: Script(Of T).CancelQuestion()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).CancelQuestion()
- uid: AutomatedAssignmentValidator.Core.Script`1.CloseQuestion(System.String)
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.CloseQuestion(System.String)
  id: CloseQuestion(System.String)
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: CloseQuestion(String)
  nameWithType: Script<T>.CloseQuestion(String)
  fullName: AutomatedAssignmentValidator.Core.Script<T>.CloseQuestion(System.String)
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CloseQuestion
    path: ../core/Script.cs
    startLine: 155
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  summary: "\nCloses the currently open question.\n"
  example: []
  syntax:
    content: protected void CloseQuestion(string caption = null)
    parameters:
    - id: caption
      type: System.String
      description: ''
    content.vb: Protected Sub CloseQuestion(caption As String = Nothing)
  overload: AutomatedAssignmentValidator.Core.Script`1.CloseQuestion*
  nameWithType.vb: Script(Of T).CloseQuestion(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).CloseQuestion(System.String)
- uid: AutomatedAssignmentValidator.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  id: EvalQuestion(System.Collections.Generic.List{System.String})
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: EvalQuestion(List<String>)
  nameWithType: Script<T>.EvalQuestion(List<String>)
  fullName: AutomatedAssignmentValidator.Core.Script<T>.EvalQuestion(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: EvalQuestion
    path: ../core/Script.cs
    startLine: 171
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: protected void EvalQuestion(List<string> errors)
    parameters:
    - id: errors
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Sub EvalQuestion(errors As List(Of String))
  overload: AutomatedAssignmentValidator.Core.Script`1.EvalQuestion*
  nameWithType.vb: Script(Of T).EvalQuestion(List(Of String))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).EvalQuestion(System.Collections.Generic.List(Of System.String))
  name.vb: EvalQuestion(List(Of String))
- uid: AutomatedAssignmentValidator.Core.Script`1.PrintScore
  commentId: M:AutomatedAssignmentValidator.Core.Script`1.PrintScore
  id: PrintScore
  parent: AutomatedAssignmentValidator.Core.Script`1
  langs:
  - csharp
  - vb
  name: PrintScore()
  nameWithType: Script<T>.PrintScore()
  fullName: AutomatedAssignmentValidator.Core.Script<T>.PrintScore()
  type: Method
  source:
    remote:
      path: core/Script.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: PrintScore
    path: ../core/Script.cs
    startLine: 177
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Core
  syntax:
    content: protected void PrintScore()
    content.vb: Protected Sub PrintScore
  overload: AutomatedAssignmentValidator.Core.Script`1.PrintScore*
  nameWithType.vb: Script(Of T).PrintScore()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).PrintScore()
references:
- uid: AutomatedAssignmentValidator.Core
  commentId: N:AutomatedAssignmentValidator.Core
  name: AutomatedAssignmentValidator.Core
  nameWithType: AutomatedAssignmentValidator.Core
  fullName: AutomatedAssignmentValidator.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutomatedAssignmentValidator.Core.Script`1.Path*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.Path
  name: Path
  nameWithType: Script<T>.Path
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Path
  nameWithType.vb: Script(Of T).Path
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutomatedAssignmentValidator.Core.Script`1.CpThresh*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.CpThresh
  name: CpThresh
  nameWithType: Script<T>.CpThresh
  fullName: AutomatedAssignmentValidator.Core.Script<T>.CpThresh
  nameWithType.vb: Script(Of T).CpThresh
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).CpThresh
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: AutomatedAssignmentValidator.Core.Script`1.Score*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.Score
  name: Score
  nameWithType: Script<T>.Score
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Score
  nameWithType.vb: Script(Of T).Score
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Score
- uid: AutomatedAssignmentValidator.Core.Script`1.IsQuestionOpen*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.IsQuestionOpen
  name: IsQuestionOpen
  nameWithType: Script<T>.IsQuestionOpen
  fullName: AutomatedAssignmentValidator.Core.Script<T>.IsQuestionOpen
  nameWithType.vb: Script(Of T).IsQuestionOpen
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).IsQuestionOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AutomatedAssignmentValidator.Core.Script`1.#ctor*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.#ctor
  name: Script
  nameWithType: Script<T>.Script
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Script
  nameWithType.vb: Script(Of T).Script
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Script
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutomatedAssignmentValidator.Core.Script`1.DefaultArguments*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.DefaultArguments
  name: DefaultArguments
  nameWithType: Script<T>.DefaultArguments
  fullName: AutomatedAssignmentValidator.Core.Script<T>.DefaultArguments
  nameWithType.vb: Script(Of T).DefaultArguments
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).DefaultArguments
- uid: AutomatedAssignmentValidator.Core.Script`1.Batch*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.Batch
  name: Batch
  nameWithType: Script<T>.Batch
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Batch
  nameWithType.vb: Script(Of T).Batch
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Batch
- uid: AutomatedAssignmentValidator.Core.Script`1.Run*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.Run
  name: Run
  nameWithType: Script<T>.Run
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Run
  nameWithType.vb: Script(Of T).Run
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Run
- uid: AutomatedAssignmentValidator.Core.Script`1.Clean*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.Clean
  name: Clean
  nameWithType: Script<T>.Clean
  fullName: AutomatedAssignmentValidator.Core.Script<T>.Clean
  nameWithType.vb: Script(Of T).Clean
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).Clean
- uid: AutomatedAssignmentValidator.Core.Script`1.OpenQuestion*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.OpenQuestion
  name: OpenQuestion
  nameWithType: Script<T>.OpenQuestion
  fullName: AutomatedAssignmentValidator.Core.Script<T>.OpenQuestion
  nameWithType.vb: Script(Of T).OpenQuestion
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).OpenQuestion
- uid: AutomatedAssignmentValidator.Core.Script`1.CancelQuestion*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.CancelQuestion
  name: CancelQuestion
  nameWithType: Script<T>.CancelQuestion
  fullName: AutomatedAssignmentValidator.Core.Script<T>.CancelQuestion
  nameWithType.vb: Script(Of T).CancelQuestion
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).CancelQuestion
- uid: AutomatedAssignmentValidator.Core.Script`1.CloseQuestion*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.CloseQuestion
  name: CloseQuestion
  nameWithType: Script<T>.CloseQuestion
  fullName: AutomatedAssignmentValidator.Core.Script<T>.CloseQuestion
  nameWithType.vb: Script(Of T).CloseQuestion
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).CloseQuestion
- uid: AutomatedAssignmentValidator.Core.Script`1.EvalQuestion*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.EvalQuestion
  name: EvalQuestion
  nameWithType: Script<T>.EvalQuestion
  fullName: AutomatedAssignmentValidator.Core.Script<T>.EvalQuestion
  nameWithType.vb: Script(Of T).EvalQuestion
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).EvalQuestion
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: AutomatedAssignmentValidator.Core.Script`1.PrintScore*
  commentId: Overload:AutomatedAssignmentValidator.Core.Script`1.PrintScore
  name: PrintScore
  nameWithType: Script<T>.PrintScore
  fullName: AutomatedAssignmentValidator.Core.Script<T>.PrintScore
  nameWithType.vb: Script(Of T).PrintScore
  fullName.vb: AutomatedAssignmentValidator.Core.Script(Of T).PrintScore
