### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Connectors.Html
  commentId: T:AutoCheck.Core.Connectors.Html
  id: Html
  parent: AutoCheck.Core.Connectors
  children:
  - AutoCheck.Core.Connectors.Html.#ctor(System.String,System.String)
  - AutoCheck.Core.Connectors.Html.ContentLength(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.ContentLength(System.String)
  - AutoCheck.Core.Connectors.Html.CountNodes(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.CountNodes(System.String)
  - AutoCheck.Core.Connectors.Html.CountRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.CountRelatedLabels(System.String)
  - AutoCheck.Core.Connectors.Html.CountSiblings(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.CountSiblings(System.String)
  - AutoCheck.Core.Connectors.Html.Dispose
  - AutoCheck.Core.Connectors.Html.GetRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.GetRelatedLabels(System.String)
  - AutoCheck.Core.Connectors.Html.GroupSiblings(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.GroupSiblings(System.String)
  - AutoCheck.Core.Connectors.Html.HtmlDoc
  - AutoCheck.Core.Connectors.Html.Raw
  - AutoCheck.Core.Connectors.Html.SelectNodes(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.SelectNodes(System.String)
  - AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C
  - AutoCheck.Core.Connectors.Html.ValidateTable(HtmlAgilityPack.HtmlNode,System.String)
  - AutoCheck.Core.Connectors.Html.ValidateTable(System.String)
  langs:
  - csharp
  - vb
  name: Html
  nameWithType: Html
  fullName: AutoCheck.Core.Connectors.Html
  type: Class
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: Html
    path: ../core/connectors/Html.cs
    startLine: 36
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nAllows in/out operations and/or data validations with web files (html, css, etc.).\n"
  example: []
  syntax:
    content: 'public class Html : Base, IDisposable'
    content.vb: >-
      Public Class Html
          Inherits Base
          Implements IDisposable
  inheritance:
  - System.Object
  - AutoCheck.Core.Connectors.Base
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Connectors.Html.HtmlDoc
  commentId: P:AutoCheck.Core.Connectors.Html.HtmlDoc
  id: HtmlDoc
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: HtmlDoc
  nameWithType: Html.HtmlDoc
  fullName: AutoCheck.Core.Connectors.Html.HtmlDoc
  type: Property
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: HtmlDoc
    path: ../core/connectors/Html.cs
    startLine: 41
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThe HTML document content.\n"
  example: []
  syntax:
    content: public HtmlDocument HtmlDoc { get; }
    parameters: []
    return:
      type: HtmlAgilityPack.HtmlDocument
      description: ''
    content.vb: Public ReadOnly Property HtmlDoc As HtmlDocument
  overload: AutoCheck.Core.Connectors.Html.HtmlDoc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Connectors.Html.Raw
  commentId: P:AutoCheck.Core.Connectors.Html.Raw
  id: Raw
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: Raw
  nameWithType: Html.Raw
  fullName: AutoCheck.Core.Connectors.Html.Raw
  type: Property
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: Raw
    path: ../core/connectors/Html.cs
    startLine: 47
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThe original HTML file content (unparsed).\n"
  example: []
  syntax:
    content: public string Raw { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public ReadOnly Property Raw As String
  overload: AutoCheck.Core.Connectors.Html.Raw*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Connectors.Html.#ctor(System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: Html(String, String)
  nameWithType: Html.Html(String, String)
  fullName: AutoCheck.Core.Connectors.Html.Html(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/connectors/Html.cs
    startLine: 54
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCreates a new connector instance.\n"
  example: []
  syntax:
    content: public Html(string folder, string file)
    parameters:
    - id: folder
      type: System.String
      description: The folder containing the web files.
    - id: file
      type: System.String
      description: HTML file name.
    content.vb: Public Sub New(folder As String, file As String)
  overload: AutoCheck.Core.Connectors.Html.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.Dispose
  commentId: M:AutoCheck.Core.Connectors.Html.Dispose
  id: Dispose
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Html.Dispose()
  fullName: AutoCheck.Core.Connectors.Html.Dispose()
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: Dispose
    path: ../core/connectors/Html.cs
    startLine: 71
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nDisposes the object releasing its unmanaged properties.\n"
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: AutoCheck.Core.Connectors.Base.Dispose
  overload: AutoCheck.Core.Connectors.Html.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C
  commentId: M:AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C
  id: ValidateHTML5AgainstW3C
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: ValidateHTML5AgainstW3C()
  nameWithType: Html.ValidateHTML5AgainstW3C()
  fullName: AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C()
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: ValidateHTML5AgainstW3C
    path: ../core/connectors/Html.cs
    startLine: 78
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nValidates the currently loaded HTML document against the W3C public API. \nThrows an exception if the document is invalid.\n"
  example: []
  syntax:
    content: public void ValidateHTML5AgainstW3C()
    content.vb: Public Sub ValidateHTML5AgainstW3C
  overload: AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.SelectNodes(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.SelectNodes(System.String)
  id: SelectNodes(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: SelectNodes(String)
  nameWithType: Html.SelectNodes(String)
  fullName: AutoCheck.Core.Connectors.Html.SelectNodes(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: SelectNodes
    path: ../core/connectors/Html.cs
    startLine: 125
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nRequests for a set of nodes.\n"
  example: []
  syntax:
    content: public List<HtmlNode> SelectNodes(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}
      description: A list of nodes.
    content.vb: Public Function SelectNodes(xpath As String) As List(Of HtmlNode)
  overload: AutoCheck.Core.Connectors.Html.SelectNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.SelectNodes(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.SelectNodes(HtmlAgilityPack.HtmlNode,System.String)
  id: SelectNodes(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: SelectNodes(HtmlNode, String)
  nameWithType: Html.SelectNodes(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.SelectNodes(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: SelectNodes
    path: ../core/connectors/Html.cs
    startLine: 135
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nRequests for a set of nodes.\n"
  example: []
  syntax:
    content: public List<HtmlNode> SelectNodes(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}
      description: A list of nodes.
    content.vb: Public Function SelectNodes(root As HtmlNode, xpath As String) As List(Of HtmlNode)
  overload: AutoCheck.Core.Connectors.Html.SelectNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.CountNodes(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.CountNodes(System.String)
  id: CountNodes(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: CountNodes(String)
  nameWithType: Html.CountNodes(String)
  fullName: AutoCheck.Core.Connectors.Html.CountNodes(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountNodes
    path: ../core/connectors/Html.cs
    startLine: 145
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCount how many nodes of this kind are within the document.\n"
  example: []
  syntax:
    content: public int CountNodes(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32
      description: Amount of nodes.
    content.vb: Public Function CountNodes(xpath As String) As Integer
  overload: AutoCheck.Core.Connectors.Html.CountNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.CountNodes(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.CountNodes(HtmlAgilityPack.HtmlNode,System.String)
  id: CountNodes(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: CountNodes(HtmlNode, String)
  nameWithType: Html.CountNodes(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.CountNodes(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountNodes
    path: ../core/connectors/Html.cs
    startLine: 155
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCount how many nodes of this kind are within the document, ideal for count groups of radio buttons or checkboxes.\n"
  example: []
  syntax:
    content: public int CountNodes(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32
      description: Amount of nodes.
    content.vb: Public Function CountNodes(root As HtmlNode, xpath As String) As Integer
  overload: AutoCheck.Core.Connectors.Html.CountNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.GroupSiblings(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.GroupSiblings(System.String)
  id: GroupSiblings(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: GroupSiblings(String)
  nameWithType: Html.GroupSiblings(String)
  fullName: AutoCheck.Core.Connectors.Html.GroupSiblings(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: GroupSiblings
    path: ../core/connectors/Html.cs
    startLine: 168
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGet a set of siblings, grouped by father.\n"
  example: []
  syntax:
    content: public HtmlNode[][] GroupSiblings(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: HtmlAgilityPack.HtmlNode[][]
      description: A list of node groups.
    content.vb: Public Function GroupSiblings(xpath As String) As HtmlNode()()
  overload: AutoCheck.Core.Connectors.Html.GroupSiblings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.GroupSiblings(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.GroupSiblings(HtmlAgilityPack.HtmlNode,System.String)
  id: GroupSiblings(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: GroupSiblings(HtmlNode, String)
  nameWithType: Html.GroupSiblings(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.GroupSiblings(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: GroupSiblings
    path: ../core/connectors/Html.cs
    startLine: 178
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGet a set of siblings, grouped by father.\n"
  example: []
  syntax:
    content: public HtmlNode[][] GroupSiblings(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: HtmlAgilityPack.HtmlNode[][]
      description: A list of node groups.
    content.vb: Public Function GroupSiblings(root As HtmlNode, xpath As String) As HtmlNode()()
  overload: AutoCheck.Core.Connectors.Html.GroupSiblings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.CountSiblings(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.CountSiblings(System.String)
  id: CountSiblings(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: CountSiblings(String)
  nameWithType: Html.CountSiblings(String)
  fullName: AutoCheck.Core.Connectors.Html.CountSiblings(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountSiblings
    path: ../core/connectors/Html.cs
    startLine: 194
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCount how many nodes are siblings, grouped by father.\n"
  example: []
  syntax:
    content: public int[] CountSiblings(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32[]
      description: Each group means how many nodes are siblings between each other.
    content.vb: Public Function CountSiblings(xpath As String) As Integer()
  overload: AutoCheck.Core.Connectors.Html.CountSiblings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.CountSiblings(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.CountSiblings(HtmlAgilityPack.HtmlNode,System.String)
  id: CountSiblings(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: CountSiblings(HtmlNode, String)
  nameWithType: Html.CountSiblings(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.CountSiblings(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountSiblings
    path: ../core/connectors/Html.cs
    startLine: 204
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCount how many nodes are siblings, grouped by father.\n"
  example: []
  syntax:
    content: public int[] CountSiblings(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32[]
      description: Each group means how many nodes are siblings between each other.
    content.vb: Public Function CountSiblings(root As HtmlNode, xpath As String) As Integer()
  overload: AutoCheck.Core.Connectors.Html.CountSiblings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.ContentLength(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.ContentLength(System.String)
  id: ContentLength(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: ContentLength(String)
  nameWithType: Html.ContentLength(String)
  fullName: AutoCheck.Core.Connectors.Html.ContentLength(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: ContentLength
    path: ../core/connectors/Html.cs
    startLine: 213
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThe length of a node content, sum of all of them if there&apos;s more than one.\n"
  example: []
  syntax:
    content: public int ContentLength(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32
      description: Node content&apos;s length.
    content.vb: Public Function ContentLength(xpath As String) As Integer
  overload: AutoCheck.Core.Connectors.Html.ContentLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.ContentLength(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.ContentLength(HtmlAgilityPack.HtmlNode,System.String)
  id: ContentLength(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: ContentLength(HtmlNode, String)
  nameWithType: Html.ContentLength(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.ContentLength(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: ContentLength
    path: ../core/connectors/Html.cs
    startLine: 223
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThe length of a node content, sum of all of them i there&apos;s more than one.\n"
  example: []
  syntax:
    content: public int ContentLength(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32
      description: Node content&apos;s length.
    content.vb: Public Function ContentLength(root As HtmlNode, xpath As String) As Integer
  overload: AutoCheck.Core.Connectors.Html.ContentLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.GetRelatedLabels(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.GetRelatedLabels(System.String)
  id: GetRelatedLabels(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: GetRelatedLabels(String)
  nameWithType: Html.GetRelatedLabels(String)
  fullName: AutoCheck.Core.Connectors.Html.GetRelatedLabels(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: GetRelatedLabels
    path: ../core/connectors/Html.cs
    startLine: 236
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the label nodes related to the xpath resulting nodes.\n"
  example: []
  syntax:
    content: public Dictionary<HtmlNode, HtmlNode[]> GetRelatedLabels(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}
      description: Dictonary with key-pair values, where the key is the main field node, and the value is a set of its related label nodes.
    content.vb: Public Function GetRelatedLabels(xpath As String) As Dictionary(Of HtmlNode, HtmlNode())
  overload: AutoCheck.Core.Connectors.Html.GetRelatedLabels*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.GetRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.GetRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  id: GetRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: GetRelatedLabels(HtmlNode, String)
  nameWithType: Html.GetRelatedLabels(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.GetRelatedLabels(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: GetRelatedLabels
    path: ../core/connectors/Html.cs
    startLine: 246
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the label nodes related to the xpath resulting nodes.\n"
  example: []
  syntax:
    content: public Dictionary<HtmlNode, HtmlNode[]> GetRelatedLabels(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}
      description: Dictonary with key-pair values, where the key is the main field node, and the value is a set of its related label nodes.
    content.vb: Public Function GetRelatedLabels(root As HtmlNode, xpath As String) As Dictionary(Of HtmlNode, HtmlNode())
  overload: AutoCheck.Core.Connectors.Html.GetRelatedLabels*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.CountRelatedLabels(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.CountRelatedLabels(System.String)
  id: CountRelatedLabels(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: CountRelatedLabels(String)
  nameWithType: Html.CountRelatedLabels(String)
  fullName: AutoCheck.Core.Connectors.Html.CountRelatedLabels(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountRelatedLabels
    path: ../core/connectors/Html.cs
    startLine: 268
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the amount of label nodes related to the xpath resulting nodes.\n"
  example: []
  syntax:
    content: public int CountRelatedLabels(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32
      description: Dictonary with key-pair values, where the key is the main field node, and the value is a set of its related label nodes.
    content.vb: Public Function CountRelatedLabels(xpath As String) As Integer
  overload: AutoCheck.Core.Connectors.Html.CountRelatedLabels*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.CountRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.CountRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  id: CountRelatedLabels(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: CountRelatedLabels(HtmlNode, String)
  nameWithType: Html.CountRelatedLabels(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.CountRelatedLabels(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountRelatedLabels
    path: ../core/connectors/Html.cs
    startLine: 278
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the amount of label nodes related to the xpath resulting nodes.\n"
  example: []
  syntax:
    content: public int CountRelatedLabels(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    return:
      type: System.Int32
      description: Dictonary with key-pair values, where the key is the main field node, and the value is a set of its related label nodes.
    content.vb: Public Function CountRelatedLabels(root As HtmlNode, xpath As String) As Integer
  overload: AutoCheck.Core.Connectors.Html.CountRelatedLabels*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.ValidateTable(System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.ValidateTable(System.String)
  id: ValidateTable(System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: ValidateTable(String)
  nameWithType: Html.ValidateTable(String)
  fullName: AutoCheck.Core.Connectors.Html.ValidateTable(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: ValidateTable
    path: ../core/connectors/Html.cs
    startLine: 287
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nChecks if a table&apos;s amount of columns is consistent within all its rows.\nThrows an exception if it&apos;s inconsistent.\n"
  example: []
  syntax:
    content: public void ValidateTable(string xpath)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    content.vb: Public Sub ValidateTable(xpath As String)
  overload: AutoCheck.Core.Connectors.Html.ValidateTable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Html.ValidateTable(HtmlAgilityPack.HtmlNode,System.String)
  commentId: M:AutoCheck.Core.Connectors.Html.ValidateTable(HtmlAgilityPack.HtmlNode,System.String)
  id: ValidateTable(HtmlAgilityPack.HtmlNode,System.String)
  parent: AutoCheck.Core.Connectors.Html
  langs:
  - csharp
  - vb
  name: ValidateTable(HtmlNode, String)
  nameWithType: Html.ValidateTable(HtmlNode, String)
  fullName: AutoCheck.Core.Connectors.Html.ValidateTable(HtmlAgilityPack.HtmlNode, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Html.cs
      branch: UnixPath
      repo: https://github.com/FherStk/AutoCheck.git
    id: ValidateTable
    path: ../core/connectors/Html.cs
    startLine: 297
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nChecks if a table&apos;s amount of columns is consistent within all its rows.\nThrows an exception if it&apos;s inconsistent.\n"
  example: []
  syntax:
    content: public void ValidateTable(HtmlNode root, string xpath)
    parameters:
    - id: root
      type: HtmlAgilityPack.HtmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    content.vb: Public Sub ValidateTable(root As HtmlNode, xpath As String)
  overload: AutoCheck.Core.Connectors.Html.ValidateTable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Core.Connectors
  commentId: N:AutoCheck.Core.Connectors
  name: AutoCheck.Core.Connectors
  nameWithType: AutoCheck.Core.Connectors
  fullName: AutoCheck.Core.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Connectors.Base
  commentId: T:AutoCheck.Core.Connectors.Base
  parent: AutoCheck.Core.Connectors
  name: Base
  nameWithType: Base
  fullName: AutoCheck.Core.Connectors.Base
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core.Connectors.Html.HtmlDoc*
  commentId: Overload:AutoCheck.Core.Connectors.Html.HtmlDoc
  name: HtmlDoc
  nameWithType: Html.HtmlDoc
  fullName: AutoCheck.Core.Connectors.Html.HtmlDoc
- uid: HtmlAgilityPack.HtmlDocument
  commentId: T:HtmlAgilityPack.HtmlDocument
  parent: HtmlAgilityPack
  isExternal: true
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: HtmlAgilityPack.HtmlDocument
- uid: HtmlAgilityPack
  commentId: N:HtmlAgilityPack
  isExternal: true
  name: HtmlAgilityPack
  nameWithType: HtmlAgilityPack
  fullName: HtmlAgilityPack
- uid: AutoCheck.Core.Connectors.Html.Raw*
  commentId: Overload:AutoCheck.Core.Connectors.Html.Raw
  name: Raw
  nameWithType: Html.Raw
  fullName: AutoCheck.Core.Connectors.Html.Raw
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoCheck.Core.Connectors.Html.#ctor*
  commentId: Overload:AutoCheck.Core.Connectors.Html.#ctor
  name: Html
  nameWithType: Html.Html
  fullName: AutoCheck.Core.Connectors.Html.Html
- uid: AutoCheck.Core.Connectors.Base.Dispose
  commentId: M:AutoCheck.Core.Connectors.Base.Dispose
  parent: AutoCheck.Core.Connectors.Base
  name: Dispose()
  nameWithType: Base.Dispose()
  fullName: AutoCheck.Core.Connectors.Base.Dispose()
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.Html.Dispose*
  commentId: Overload:AutoCheck.Core.Connectors.Html.Dispose
  name: Dispose
  nameWithType: Html.Dispose
  fullName: AutoCheck.Core.Connectors.Html.Dispose
- uid: AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C*
  commentId: Overload:AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C
  name: ValidateHTML5AgainstW3C
  nameWithType: Html.ValidateHTML5AgainstW3C
  fullName: AutoCheck.Core.Connectors.Html.ValidateHTML5AgainstW3C
- uid: AutoCheck.Core.Connectors.Html.SelectNodes*
  commentId: Overload:AutoCheck.Core.Connectors.Html.SelectNodes
  name: SelectNodes
  nameWithType: Html.SelectNodes
  fullName: AutoCheck.Core.Connectors.Html.SelectNodes
- uid: System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}
  commentId: T:System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HtmlNode>
  nameWithType: List<HtmlNode>
  fullName: System.Collections.Generic.List<HtmlAgilityPack.HtmlNode>
  nameWithType.vb: List(Of HtmlNode)
  fullName.vb: System.Collections.Generic.List(Of HtmlAgilityPack.HtmlNode)
  name.vb: List(Of HtmlNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: HtmlAgilityPack.HtmlNode
  commentId: T:HtmlAgilityPack.HtmlNode
  parent: HtmlAgilityPack
  isExternal: true
  name: HtmlNode
  nameWithType: HtmlNode
  fullName: HtmlAgilityPack.HtmlNode
- uid: AutoCheck.Core.Connectors.Html.CountNodes*
  commentId: Overload:AutoCheck.Core.Connectors.Html.CountNodes
  name: CountNodes
  nameWithType: Html.CountNodes
  fullName: AutoCheck.Core.Connectors.Html.CountNodes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AutoCheck.Core.Connectors.Html.GroupSiblings*
  commentId: Overload:AutoCheck.Core.Connectors.Html.GroupSiblings
  name: GroupSiblings
  nameWithType: Html.GroupSiblings
  fullName: AutoCheck.Core.Connectors.Html.GroupSiblings
- uid: HtmlAgilityPack.HtmlNode[][]
  isExternal: true
  name: HtmlNode[][]
  nameWithType: HtmlNode[][]
  fullName: HtmlAgilityPack.HtmlNode[][]
  nameWithType.vb: HtmlNode()()
  fullName.vb: HtmlAgilityPack.HtmlNode()()
  name.vb: HtmlNode()()
  spec.csharp:
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutoCheck.Core.Connectors.Html.CountSiblings*
  commentId: Overload:AutoCheck.Core.Connectors.Html.CountSiblings
  name: CountSiblings
  nameWithType: Html.CountSiblings
  fullName: AutoCheck.Core.Connectors.Html.CountSiblings
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutoCheck.Core.Connectors.Html.ContentLength*
  commentId: Overload:AutoCheck.Core.Connectors.Html.ContentLength
  name: ContentLength
  nameWithType: Html.ContentLength
  fullName: AutoCheck.Core.Connectors.Html.ContentLength
- uid: AutoCheck.Core.Connectors.Html.GetRelatedLabels*
  commentId: Overload:AutoCheck.Core.Connectors.Html.GetRelatedLabels
  name: GetRelatedLabels
  nameWithType: Html.GetRelatedLabels
  fullName: AutoCheck.Core.Connectors.Html.GetRelatedLabels
- uid: System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}
  commentId: T:System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<HtmlNode, HtmlNode[]>
  nameWithType: Dictionary<HtmlNode, HtmlNode[]>
  fullName: System.Collections.Generic.Dictionary<HtmlAgilityPack.HtmlNode, HtmlAgilityPack.HtmlNode[]>
  nameWithType.vb: Dictionary(Of HtmlNode, HtmlNode())
  fullName.vb: System.Collections.Generic.Dictionary(Of HtmlAgilityPack.HtmlNode, HtmlAgilityPack.HtmlNode())
  name.vb: Dictionary(Of HtmlNode, HtmlNode())
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: HtmlAgilityPack.HtmlNode
    name: HtmlNode
    nameWithType: HtmlNode
    fullName: HtmlAgilityPack.HtmlNode
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.Html.CountRelatedLabels*
  commentId: Overload:AutoCheck.Core.Connectors.Html.CountRelatedLabels
  name: CountRelatedLabels
  nameWithType: Html.CountRelatedLabels
  fullName: AutoCheck.Core.Connectors.Html.CountRelatedLabels
- uid: AutoCheck.Core.Connectors.Html.ValidateTable*
  commentId: Overload:AutoCheck.Core.Connectors.Html.ValidateTable
  name: ValidateTable
  nameWithType: Html.ValidateTable
  fullName: AutoCheck.Core.Connectors.Html.ValidateTable
