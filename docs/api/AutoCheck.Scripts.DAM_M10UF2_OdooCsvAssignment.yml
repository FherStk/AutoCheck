### YamlMime:ManagedReference
items:
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment
  commentId: T:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment
  id: DAM_M10UF2_OdooCsvAssignment
  parent: AutoCheck.Scripts
  children:
  - AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor(System.String[])
  - AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments
  - AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run
  langs:
  - csharp
  - vb
  name: DAM_M10UF2_OdooCsvAssignment
  nameWithType: DAM_M10UF2_OdooCsvAssignment
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment
  type: Class
  source:
    remote:
      path: scripts/DAM_M10UF2_OdooCsvAssignment.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: DAM_M10UF2_OdooCsvAssignment
    path: ../scripts/DAM_M10UF2_OdooCsvAssignment.cs
    startLine: 4
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: 'public class DAM_M10UF2_OdooCsvAssignment : ScriptDB<None>'
    content.vb: >-
      Public Class DAM_M10UF2_OdooCsvAssignment

          Inherits ScriptDB(Of None)
  inheritance:
  - System.Object
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  inheritedMembers:
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Host
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DataBase
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Username
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Password
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Student
  - AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Clean
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Path
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CpThresh
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.MaxScore
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Score
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.IsQuestionOpen
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Batch
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.Single)
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CancelQuestion
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CloseQuestion(System.String)
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})
  - AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.PrintScore
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor(System.String[])
  commentId: M:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment
  langs:
  - csharp
  - vb
  name: DAM_M10UF2_OdooCsvAssignment(String[])
  nameWithType: DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment(String[])
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment(System.String[])
  type: Constructor
  source:
    remote:
      path: scripts/DAM_M10UF2_OdooCsvAssignment.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../scripts/DAM_M10UF2_OdooCsvAssignment.cs
    startLine: 5
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: public DAM_M10UF2_OdooCsvAssignment(string[] args)
    parameters:
    - id: args
      type: System.String[]
    content.vb: Public Sub New(args As String())
  overload: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor*
  nameWithType.vb: DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment(System.String())
  name.vb: DAM_M10UF2_OdooCsvAssignment(String())
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments
  commentId: M:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments
  id: DefaultArguments
  parent: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment
  langs:
  - csharp
  - vb
  name: DefaultArguments()
  nameWithType: DAM_M10UF2_OdooCsvAssignment.DefaultArguments()
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments()
  type: Method
  source:
    remote:
      path: scripts/DAM_M10UF2_OdooCsvAssignment.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: DefaultArguments
    path: ../scripts/DAM_M10UF2_OdooCsvAssignment.cs
    startLine: 8
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: protected override void DefaultArguments()
    content.vb: Protected Overrides Sub DefaultArguments
  overridden: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DefaultArguments
  overload: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run
  commentId: M:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run
  id: Run
  parent: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: DAM_M10UF2_OdooCsvAssignment.Run()
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run()
  type: Method
  source:
    remote:
      path: scripts/DAM_M10UF2_OdooCsvAssignment.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: Run
    path: ../scripts/DAM_M10UF2_OdooCsvAssignment.cs
    startLine: 13
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: public override void Run()
    content.vb: Public Overrides Sub Run
  overridden: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Run
  overload: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AutoCheck.Scripts
  commentId: N:AutoCheck.Scripts
  name: AutoCheck.Scripts
  nameWithType: AutoCheck.Scripts
  fullName: AutoCheck.Scripts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  commentId: T:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  parent: AutoCheck.Core
  definition: AutoCheck.Core.Script`1
  name: Script<None>
  nameWithType: Script<None>
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>
  nameWithType.vb: Script(Of None)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None)
  name.vb: Script(Of None)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.CopyDetectors.None
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.CopyDetectors.None
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  commentId: T:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  parent: AutoCheck.Core
  definition: AutoCheck.Core.ScriptDB`1
  name: ScriptDB<None>
  nameWithType: ScriptDB<None>
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>
  nameWithType.vb: ScriptDB(Of None)
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None)
  name.vb: ScriptDB(Of None)
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1
    name: ScriptDB
    nameWithType: ScriptDB
    fullName: AutoCheck.Core.ScriptDB
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.CopyDetectors.None
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1
    name: ScriptDB
    nameWithType: ScriptDB
    fullName: AutoCheck.Core.ScriptDB
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.CopyDetectors.None
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Host
  commentId: P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Host
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.Host
  name: Host
  nameWithType: ScriptDB<None>.Host
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Host
  nameWithType.vb: ScriptDB(Of None).Host
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Host
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DataBase
  commentId: P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DataBase
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.DataBase
  name: DataBase
  nameWithType: ScriptDB<None>.DataBase
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.DataBase
  nameWithType.vb: ScriptDB(Of None).DataBase
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).DataBase
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Username
  commentId: P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Username
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.Username
  name: Username
  nameWithType: ScriptDB<None>.Username
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Username
  nameWithType.vb: ScriptDB(Of None).Username
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Username
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Password
  commentId: P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Password
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.Password
  name: Password
  nameWithType: ScriptDB<None>.Password
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Password
  nameWithType.vb: ScriptDB(Of None).Password
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Password
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Student
  commentId: P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Student
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.Student
  name: Student
  nameWithType: ScriptDB<None>.Student
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Student
  nameWithType.vb: ScriptDB(Of None).Student
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Student
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Clean
  commentId: M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Clean
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.Clean
  name: Clean()
  nameWithType: ScriptDB<None>.Clean()
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Clean()
  nameWithType.vb: ScriptDB(Of None).Clean()
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Clean()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1.Clean
    name: Clean
    nameWithType: ScriptDB<None>.Clean
    fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Clean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1.Clean
    name: Clean
    nameWithType: ScriptDB(Of None).Clean
    fullName: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Clean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Path
  commentId: P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Path
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.Path
  name: Path
  nameWithType: Script<None>.Path
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Path
  nameWithType.vb: Script(Of None).Path
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Path
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CpThresh
  commentId: P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CpThresh
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.CpThresh
  name: CpThresh
  nameWithType: Script<None>.CpThresh
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CpThresh
  nameWithType.vb: Script(Of None).CpThresh
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CpThresh
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.MaxScore
  commentId: P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.MaxScore
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.MaxScore
  name: MaxScore
  nameWithType: Script<None>.MaxScore
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.MaxScore
  nameWithType.vb: Script(Of None).MaxScore
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).MaxScore
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Score
  commentId: P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Score
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.Score
  name: Score
  nameWithType: Script<None>.Score
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Score
  nameWithType.vb: Script(Of None).Score
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Score
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.IsQuestionOpen
  commentId: P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.IsQuestionOpen
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.IsQuestionOpen
  name: IsQuestionOpen
  nameWithType: Script<None>.IsQuestionOpen
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.IsQuestionOpen
  nameWithType.vb: Script(Of None).IsQuestionOpen
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).IsQuestionOpen
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Batch
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Batch
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.Batch
  name: Batch()
  nameWithType: Script<None>.Batch()
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Batch()
  nameWithType.vb: Script(Of None).Batch()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Batch()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script<None>.Batch
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script(Of None).Batch
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.Single)
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.Single)
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
  name: OpenQuestion(String, Single)
  nameWithType: Script<None>.OpenQuestion(String, Single)
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.OpenQuestion(System.String, System.Single)
  nameWithType.vb: Script(Of None).OpenQuestion(String, Single)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).OpenQuestion(System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<None>.OpenQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of None).OpenQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  name: OpenQuestion(String, String, Single)
  nameWithType: Script<None>.OpenQuestion(String, String, Single)
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.OpenQuestion(System.String, System.String, System.Single)
  nameWithType.vb: Script(Of None).OpenQuestion(String, String, Single)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).OpenQuestion(System.String, System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<None>.OpenQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of None).OpenQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CancelQuestion
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CancelQuestion
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.CancelQuestion
  name: CancelQuestion()
  nameWithType: Script<None>.CancelQuestion()
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CancelQuestion()
  nameWithType.vb: Script(Of None).CancelQuestion()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CancelQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script<None>.CancelQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script(Of None).CancelQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CloseQuestion(System.String)
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CloseQuestion(System.String)
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.CloseQuestion(System.String)
  name: CloseQuestion(String)
  nameWithType: Script<None>.CloseQuestion(String)
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CloseQuestion(System.String)
  nameWithType.vb: Script(Of None).CloseQuestion(String)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CloseQuestion(System.String)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script<None>.CloseQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script(Of None).CloseQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.EvalQuestion
  name: EvalQuestion()
  nameWithType: Script<None>.EvalQuestion()
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.EvalQuestion()
  nameWithType.vb: Script(Of None).EvalQuestion()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).EvalQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script<None>.EvalQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script(Of None).EvalQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  name: EvalQuestion(List<String>)
  nameWithType: Script<None>.EvalQuestion(List<String>)
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.EvalQuestion(System.Collections.Generic.List<System.String>)
  nameWithType.vb: Script(Of None).EvalQuestion(List(Of String))
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).EvalQuestion(System.Collections.Generic.List(Of System.String))
  name.vb: EvalQuestion(List(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script<None>.EvalQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script(Of None).EvalQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.PrintScore
  commentId: M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.PrintScore
  parent: AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.PrintScore
  name: PrintScore()
  nameWithType: Script<None>.PrintScore()
  fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.PrintScore()
  nameWithType.vb: Script(Of None).PrintScore()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).PrintScore()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script<None>.PrintScore
    fullName: AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script(Of None).PrintScore
    fullName: AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core.Script`1
  commentId: T:AutoCheck.Core.Script`1
  name: Script<T>
  nameWithType: Script<T>
  fullName: AutoCheck.Core.Script<T>
  nameWithType.vb: Script(Of T)
  fullName.vb: AutoCheck.Core.Script(Of T)
  name.vb: Script(Of T)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: AutoCheck.Core.ScriptDB`1
  commentId: T:AutoCheck.Core.ScriptDB`1
  name: ScriptDB<T>
  nameWithType: ScriptDB<T>
  fullName: AutoCheck.Core.ScriptDB<T>
  nameWithType.vb: ScriptDB(Of T)
  fullName.vb: AutoCheck.Core.ScriptDB(Of T)
  name.vb: ScriptDB(Of T)
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1
    name: ScriptDB
    nameWithType: ScriptDB
    fullName: AutoCheck.Core.ScriptDB
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1
    name: ScriptDB
    nameWithType: ScriptDB
    fullName: AutoCheck.Core.ScriptDB
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptDB`1.Host
  commentId: P:AutoCheck.Core.ScriptDB`1.Host
  name: Host
  nameWithType: ScriptDB<T>.Host
  fullName: AutoCheck.Core.ScriptDB<T>.Host
  nameWithType.vb: ScriptDB(Of T).Host
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).Host
- uid: AutoCheck.Core.ScriptDB`1.DataBase
  commentId: P:AutoCheck.Core.ScriptDB`1.DataBase
  name: DataBase
  nameWithType: ScriptDB<T>.DataBase
  fullName: AutoCheck.Core.ScriptDB<T>.DataBase
  nameWithType.vb: ScriptDB(Of T).DataBase
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).DataBase
- uid: AutoCheck.Core.ScriptDB`1.Username
  commentId: P:AutoCheck.Core.ScriptDB`1.Username
  name: Username
  nameWithType: ScriptDB<T>.Username
  fullName: AutoCheck.Core.ScriptDB<T>.Username
  nameWithType.vb: ScriptDB(Of T).Username
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).Username
- uid: AutoCheck.Core.ScriptDB`1.Password
  commentId: P:AutoCheck.Core.ScriptDB`1.Password
  name: Password
  nameWithType: ScriptDB<T>.Password
  fullName: AutoCheck.Core.ScriptDB<T>.Password
  nameWithType.vb: ScriptDB(Of T).Password
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).Password
- uid: AutoCheck.Core.ScriptDB`1.Student
  commentId: P:AutoCheck.Core.ScriptDB`1.Student
  name: Student
  nameWithType: ScriptDB<T>.Student
  fullName: AutoCheck.Core.ScriptDB<T>.Student
  nameWithType.vb: ScriptDB(Of T).Student
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).Student
- uid: AutoCheck.Core.ScriptDB`1.Clean
  commentId: M:AutoCheck.Core.ScriptDB`1.Clean
  name: Clean()
  nameWithType: ScriptDB<T>.Clean()
  fullName: AutoCheck.Core.ScriptDB<T>.Clean()
  nameWithType.vb: ScriptDB(Of T).Clean()
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).Clean()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1.Clean
    name: Clean
    nameWithType: ScriptDB<T>.Clean
    fullName: AutoCheck.Core.ScriptDB<T>.Clean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1.Clean
    name: Clean
    nameWithType: ScriptDB(Of T).Clean
    fullName: AutoCheck.Core.ScriptDB(Of T).Clean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.Path
  commentId: P:AutoCheck.Core.Script`1.Path
  name: Path
  nameWithType: Script<T>.Path
  fullName: AutoCheck.Core.Script<T>.Path
  nameWithType.vb: Script(Of T).Path
  fullName.vb: AutoCheck.Core.Script(Of T).Path
- uid: AutoCheck.Core.Script`1.CpThresh
  commentId: P:AutoCheck.Core.Script`1.CpThresh
  name: CpThresh
  nameWithType: Script<T>.CpThresh
  fullName: AutoCheck.Core.Script<T>.CpThresh
  nameWithType.vb: Script(Of T).CpThresh
  fullName.vb: AutoCheck.Core.Script(Of T).CpThresh
- uid: AutoCheck.Core.Script`1.MaxScore
  commentId: P:AutoCheck.Core.Script`1.MaxScore
  name: MaxScore
  nameWithType: Script<T>.MaxScore
  fullName: AutoCheck.Core.Script<T>.MaxScore
  nameWithType.vb: Script(Of T).MaxScore
  fullName.vb: AutoCheck.Core.Script(Of T).MaxScore
- uid: AutoCheck.Core.Script`1.Score
  commentId: P:AutoCheck.Core.Script`1.Score
  name: Score
  nameWithType: Script<T>.Score
  fullName: AutoCheck.Core.Script<T>.Score
  nameWithType.vb: Script(Of T).Score
  fullName.vb: AutoCheck.Core.Script(Of T).Score
- uid: AutoCheck.Core.Script`1.IsQuestionOpen
  commentId: P:AutoCheck.Core.Script`1.IsQuestionOpen
  name: IsQuestionOpen
  nameWithType: Script<T>.IsQuestionOpen
  fullName: AutoCheck.Core.Script<T>.IsQuestionOpen
  nameWithType.vb: Script(Of T).IsQuestionOpen
  fullName.vb: AutoCheck.Core.Script(Of T).IsQuestionOpen
- uid: AutoCheck.Core.Script`1.Batch
  commentId: M:AutoCheck.Core.Script`1.Batch
  name: Batch()
  nameWithType: Script<T>.Batch()
  fullName: AutoCheck.Core.Script<T>.Batch()
  nameWithType.vb: Script(Of T).Batch()
  fullName.vb: AutoCheck.Core.Script(Of T).Batch()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script<T>.Batch
    fullName: AutoCheck.Core.Script<T>.Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script(Of T).Batch
    fullName: AutoCheck.Core.Script(Of T).Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
  commentId: M:AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
  isExternal: true
  name: OpenQuestion(String, Single)
  nameWithType: Script<T>.OpenQuestion(String, Single)
  fullName: AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.Single)
  nameWithType.vb: Script(Of T).OpenQuestion(String, Single)
  fullName.vb: AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<T>.OpenQuestion
    fullName: AutoCheck.Core.Script<T>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of T).OpenQuestion
    fullName: AutoCheck.Core.Script(Of T).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  commentId: M:AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  isExternal: true
  name: OpenQuestion(String, String, Single)
  nameWithType: Script<T>.OpenQuestion(String, String, Single)
  fullName: AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.String, System.Single)
  nameWithType.vb: Script(Of T).OpenQuestion(String, String, Single)
  fullName.vb: AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<T>.OpenQuestion
    fullName: AutoCheck.Core.Script<T>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of T).OpenQuestion
    fullName: AutoCheck.Core.Script(Of T).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.CancelQuestion
  commentId: M:AutoCheck.Core.Script`1.CancelQuestion
  name: CancelQuestion()
  nameWithType: Script<T>.CancelQuestion()
  fullName: AutoCheck.Core.Script<T>.CancelQuestion()
  nameWithType.vb: Script(Of T).CancelQuestion()
  fullName.vb: AutoCheck.Core.Script(Of T).CancelQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script<T>.CancelQuestion
    fullName: AutoCheck.Core.Script<T>.CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script(Of T).CancelQuestion
    fullName: AutoCheck.Core.Script(Of T).CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
  commentId: M:AutoCheck.Core.Script`1.CloseQuestion(System.String)
  isExternal: true
  name: CloseQuestion(String)
  nameWithType: Script<T>.CloseQuestion(String)
  fullName: AutoCheck.Core.Script<T>.CloseQuestion(System.String)
  nameWithType.vb: Script(Of T).CloseQuestion(String)
  fullName.vb: AutoCheck.Core.Script(Of T).CloseQuestion(System.String)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script<T>.CloseQuestion
    fullName: AutoCheck.Core.Script<T>.CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script(Of T).CloseQuestion
    fullName: AutoCheck.Core.Script(Of T).CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.EvalQuestion
  commentId: M:AutoCheck.Core.Script`1.EvalQuestion
  name: EvalQuestion()
  nameWithType: Script<T>.EvalQuestion()
  fullName: AutoCheck.Core.Script<T>.EvalQuestion()
  nameWithType.vb: Script(Of T).EvalQuestion()
  fullName.vb: AutoCheck.Core.Script(Of T).EvalQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script<T>.EvalQuestion
    fullName: AutoCheck.Core.Script<T>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script(Of T).EvalQuestion
    fullName: AutoCheck.Core.Script(Of T).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  commentId: M:AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  isExternal: true
  name: EvalQuestion(List<String>)
  nameWithType: Script<T>.EvalQuestion(List<String>)
  fullName: AutoCheck.Core.Script<T>.EvalQuestion(System.Collections.Generic.List<System.String>)
  nameWithType.vb: Script(Of T).EvalQuestion(List(Of String))
  fullName.vb: AutoCheck.Core.Script(Of T).EvalQuestion(System.Collections.Generic.List(Of System.String))
  name.vb: EvalQuestion(List(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script<T>.EvalQuestion
    fullName: AutoCheck.Core.Script<T>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script(Of T).EvalQuestion
    fullName: AutoCheck.Core.Script(Of T).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.PrintScore
  commentId: M:AutoCheck.Core.Script`1.PrintScore
  name: PrintScore()
  nameWithType: Script<T>.PrintScore()
  fullName: AutoCheck.Core.Script<T>.PrintScore()
  nameWithType.vb: Script(Of T).PrintScore()
  fullName.vb: AutoCheck.Core.Script(Of T).PrintScore()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script<T>.PrintScore
    fullName: AutoCheck.Core.Script<T>.PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script(Of T).PrintScore
    fullName: AutoCheck.Core.Script(Of T).PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor*
  commentId: Overload:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor
  name: DAM_M10UF2_OdooCsvAssignment
  nameWithType: DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DefaultArguments
  commentId: M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DefaultArguments
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.DefaultArguments
  name: DefaultArguments()
  nameWithType: ScriptDB<None>.DefaultArguments()
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.DefaultArguments()
  nameWithType.vb: ScriptDB(Of None).DefaultArguments()
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).DefaultArguments()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptDB<None>.DefaultArguments
    fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptDB(Of None).DefaultArguments
    fullName: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments*
  commentId: Overload:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments
  name: DefaultArguments
  nameWithType: DAM_M10UF2_OdooCsvAssignment.DefaultArguments
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments
- uid: AutoCheck.Core.ScriptDB`1.DefaultArguments
  commentId: M:AutoCheck.Core.ScriptDB`1.DefaultArguments
  name: DefaultArguments()
  nameWithType: ScriptDB<T>.DefaultArguments()
  fullName: AutoCheck.Core.ScriptDB<T>.DefaultArguments()
  nameWithType.vb: ScriptDB(Of T).DefaultArguments()
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).DefaultArguments()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptDB<T>.DefaultArguments
    fullName: AutoCheck.Core.ScriptDB<T>.DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptDB(Of T).DefaultArguments
    fullName: AutoCheck.Core.ScriptDB(Of T).DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Run
  commentId: M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Run
  parent: AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptDB`1.Run
  name: Run()
  nameWithType: ScriptDB<None>.Run()
  fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Run()
  nameWithType.vb: ScriptDB(Of None).Run()
  fullName.vb: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Run()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1.Run
    name: Run
    nameWithType: ScriptDB<None>.Run
    fullName: AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1.Run
    name: Run
    nameWithType: ScriptDB(Of None).Run
    fullName: AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run*
  commentId: Overload:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run
  name: Run
  nameWithType: DAM_M10UF2_OdooCsvAssignment.Run
  fullName: AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run
- uid: AutoCheck.Core.ScriptDB`1.Run
  commentId: M:AutoCheck.Core.ScriptDB`1.Run
  name: Run()
  nameWithType: ScriptDB<T>.Run()
  fullName: AutoCheck.Core.ScriptDB<T>.Run()
  nameWithType.vb: ScriptDB(Of T).Run()
  fullName.vb: AutoCheck.Core.ScriptDB(Of T).Run()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptDB`1.Run
    name: Run
    nameWithType: ScriptDB<T>.Run
    fullName: AutoCheck.Core.ScriptDB<T>.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptDB`1.Run
    name: Run
    nameWithType: ScriptDB(Of T).Run
    fullName: AutoCheck.Core.ScriptDB(Of T).Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
