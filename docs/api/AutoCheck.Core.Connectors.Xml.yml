### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Connectors.Xml
  commentId: T:AutoCheck.Core.Connectors.Xml
  id: Xml
  parent: AutoCheck.Core.Connectors
  children:
  - AutoCheck.Core.Connectors.Xml.#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,ValidationType)
  - AutoCheck.Core.Connectors.Xml.#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.String,ValidationType)
  - AutoCheck.Core.Connectors.Xml.#ctor(System.String,ValidationType)
  - AutoCheck.Core.Connectors.Xml.Comments
  - AutoCheck.Core.Connectors.Xml.CountNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  - AutoCheck.Core.Connectors.Xml.CountNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  - AutoCheck.Core.Connectors.Xml.Dispose
  - AutoCheck.Core.Connectors.Xml.Equals(AutoCheck.Core.Connectors.Xml,System.Boolean)
  - AutoCheck.Core.Connectors.Xml.Equals(XmlDocument,System.Boolean)
  - AutoCheck.Core.Connectors.Xml.Raw
  - AutoCheck.Core.Connectors.Xml.SelectNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  - AutoCheck.Core.Connectors.Xml.SelectNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  - AutoCheck.Core.Connectors.Xml.XmlDoc
  langs:
  - csharp
  - vb
  name: Xml
  nameWithType: Xml
  fullName: AutoCheck.Core.Connectors.Xml
  type: Class
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Xml
    path: ../core/connectors/Xml.cs
    startLine: 34
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nAllows in/out operations and/or data validations with XML files.\n"
  example: []
  syntax:
    content: 'public class Xml : Base'
    content.vb: >-
      Public Class Xml
          Inherits Base
  inheritance:
  - System.Object
  - AutoCheck.Core.Connectors.Base
  derivedClasses:
  - AutoCheck.Core.Connectors.Rss
  inheritedMembers:
  - AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  extensionMethods:
  - AutoCheck.Core.Connectors.Xml.ObjectExtensions.DeepClone``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Connectors.Xml.Comments
  commentId: P:AutoCheck.Core.Connectors.Xml.Comments
  id: Comments
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Comments
  nameWithType: Xml.Comments
  fullName: AutoCheck.Core.Connectors.Xml.Comments
  type: Property
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Comments
    path: ../core/connectors/Xml.cs
    startLine: 44
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  syntax:
    content: public string[] Comments { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property Comments As String()
  overload: AutoCheck.Core.Connectors.Xml.Comments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Connectors.Xml.XmlDoc
  commentId: P:AutoCheck.Core.Connectors.Xml.XmlDoc
  id: XmlDoc
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: XmlDoc
  nameWithType: Xml.XmlDoc
  fullName: AutoCheck.Core.Connectors.Xml.XmlDoc
  type: Property
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: XmlDoc
    path: ../core/connectors/Xml.cs
    startLine: 50
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThe XML document content.\n"
  example: []
  syntax:
    content: public XmlDocument XmlDoc { get; }
    parameters: []
    return:
      type: XmlDocument
      description: ''
    content.vb: Public ReadOnly Property XmlDoc As XmlDocument
  overload: AutoCheck.Core.Connectors.Xml.XmlDoc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Connectors.Xml.Raw
  commentId: P:AutoCheck.Core.Connectors.Xml.Raw
  id: Raw
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Raw
  nameWithType: Xml.Raw
  fullName: AutoCheck.Core.Connectors.Xml.Raw
  type: Property
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Raw
    path: ../core/connectors/Xml.cs
    startLine: 56
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThe original XML file content (unparsed).\n"
  example: []
  syntax:
    content: public string Raw { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public ReadOnly Property Raw As String
  overload: AutoCheck.Core.Connectors.Xml.Raw*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Connectors.Xml.#ctor(System.String,ValidationType)
  commentId: M:AutoCheck.Core.Connectors.Xml.#ctor(System.String,ValidationType)
  id: '#ctor(System.String,ValidationType)'
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Xml(String, ValidationType)
  nameWithType: Xml.Xml(String, ValidationType)
  fullName: AutoCheck.Core.Connectors.Xml.Xml(System.String, ValidationType)
  type: Constructor
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/connectors/Xml.cs
    startLine: 63
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCreates a new connector instance.\n"
  example: []
  syntax:
    content: public Xml(string filePath, ValidationType validation = null)
    parameters:
    - id: filePath
      type: System.String
      description: XML file path.
    - id: validation
      type: ValidationType
      description: Validation type.
    content.vb: Public Sub New(filePath As String, validation As ValidationType = Nothing)
  overload: AutoCheck.Core.Connectors.Xml.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,ValidationType)
  commentId: M:AutoCheck.Core.Connectors.Xml.#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,ValidationType)
  id: '#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,ValidationType)'
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Xml(Utils.OS, String, String, String, Int32, String, ValidationType)
  nameWithType: Xml.Xml(Utils.OS, String, String, String, Int32, String, ValidationType)
  fullName: AutoCheck.Core.Connectors.Xml.Xml(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, ValidationType)
  type: Constructor
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/connectors/Xml.cs
    startLine: 77
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  syntax:
    content: public Xml(Utils.OS remoteOS, string host, string username, string password, int port, string filePath, ValidationType validation = null)
    parameters:
    - id: remoteOS
      type: AutoCheck.Core.Utils.OS
    - id: host
      type: System.String
    - id: username
      type: System.String
    - id: password
      type: System.String
    - id: port
      type: System.Int32
    - id: filePath
      type: System.String
    - id: validation
      type: ValidationType
    content.vb: Public Sub New(remoteOS As Utils.OS, host As String, username As String, password As String, port As Integer, filePath As String, validation As ValidationType = Nothing)
  overload: AutoCheck.Core.Connectors.Xml.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.String,ValidationType)
  commentId: M:AutoCheck.Core.Connectors.Xml.#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.String,ValidationType)
  id: '#ctor(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.String,ValidationType)'
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Xml(Utils.OS, String, String, String, String, ValidationType)
  nameWithType: Xml.Xml(Utils.OS, String, String, String, String, ValidationType)
  fullName: AutoCheck.Core.Connectors.Xml.Xml(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.String, ValidationType)
  type: Constructor
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/connectors/Xml.cs
    startLine: 92
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  syntax:
    content: public Xml(Utils.OS remoteOS, string host, string username, string password, string filePath, ValidationType validation = null)
    parameters:
    - id: remoteOS
      type: AutoCheck.Core.Utils.OS
    - id: host
      type: System.String
    - id: username
      type: System.String
    - id: password
      type: System.String
    - id: filePath
      type: System.String
    - id: validation
      type: ValidationType
    content.vb: Public Sub New(remoteOS As Utils.OS, host As String, username As String, password As String, filePath As String, validation As ValidationType = Nothing)
  overload: AutoCheck.Core.Connectors.Xml.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.Dispose
  commentId: M:AutoCheck.Core.Connectors.Xml.Dispose
  id: Dispose
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Xml.Dispose()
  fullName: AutoCheck.Core.Connectors.Xml.Dispose()
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Dispose
    path: ../core/connectors/Xml.cs
    startLine: 99
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nDisposes the object releasing its unmanaged properties.\n"
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: AutoCheck.Core.Connectors.Base.Dispose
  overload: AutoCheck.Core.Connectors.Xml.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AutoCheck.Core.Connectors.Xml.SelectNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  commentId: M:AutoCheck.Core.Connectors.Xml.SelectNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  id: SelectNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: SelectNodes(String, Xml.XmlNodeType)
  nameWithType: Xml.SelectNodes(String, Xml.XmlNodeType)
  fullName: AutoCheck.Core.Connectors.Xml.SelectNodes(System.String, AutoCheck.Core.Connectors.Xml.XmlNodeType)
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: SelectNodes
    path: ../core/connectors/Xml.cs
    startLine: 107
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nRequests for a set of nodes.\n"
  example: []
  syntax:
    content: public List<XPathNavigator> SelectNodes(string xpath, Xml.XmlNodeType type = Xml.XmlNodeType.ALL)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    - id: type
      type: AutoCheck.Core.Connectors.Xml.XmlNodeType
    return:
      type: List{XPathNavigator}
      description: A list of nodes.
    content.vb: Public Function SelectNodes(xpath As String, type As Xml.XmlNodeType = Xml.XmlNodeType.ALL) As List(Of XPathNavigator)
  overload: AutoCheck.Core.Connectors.Xml.SelectNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.SelectNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  commentId: M:AutoCheck.Core.Connectors.Xml.SelectNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  id: SelectNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: SelectNodes(XmlNode, String, Xml.XmlNodeType)
  nameWithType: Xml.SelectNodes(XmlNode, String, Xml.XmlNodeType)
  fullName: AutoCheck.Core.Connectors.Xml.SelectNodes(XmlNode, System.String, AutoCheck.Core.Connectors.Xml.XmlNodeType)
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: SelectNodes
    path: ../core/connectors/Xml.cs
    startLine: 117
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nRequests for a set of nodes.\n"
  example: []
  syntax:
    content: public List<XPathNavigator> SelectNodes(XmlNode root, string xpath, Xml.XmlNodeType type = Xml.XmlNodeType.ALL)
    parameters:
    - id: root
      type: XmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    - id: type
      type: AutoCheck.Core.Connectors.Xml.XmlNodeType
    return:
      type: List{XPathNavigator}
      description: A list of nodes.
    content.vb: Public Function SelectNodes(root As XmlNode, xpath As String, type As Xml.XmlNodeType = Xml.XmlNodeType.ALL) As List(Of XPathNavigator)
  overload: AutoCheck.Core.Connectors.Xml.SelectNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.CountNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  commentId: M:AutoCheck.Core.Connectors.Xml.CountNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  id: CountNodes(System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: CountNodes(String, Xml.XmlNodeType)
  nameWithType: Xml.CountNodes(String, Xml.XmlNodeType)
  fullName: AutoCheck.Core.Connectors.Xml.CountNodes(System.String, AutoCheck.Core.Connectors.Xml.XmlNodeType)
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountNodes
    path: ../core/connectors/Xml.cs
    startLine: 174
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nRequests for the amount of nodes.\n"
  example: []
  syntax:
    content: public int CountNodes(string xpath, Xml.XmlNodeType type = Xml.XmlNodeType.ALL)
    parameters:
    - id: xpath
      type: System.String
      description: XPath expression.
    - id: type
      type: AutoCheck.Core.Connectors.Xml.XmlNodeType
    return:
      type: System.Int32
      description: The amount of nodes.
    content.vb: Public Function CountNodes(xpath As String, type As Xml.XmlNodeType = Xml.XmlNodeType.ALL) As Integer
  overload: AutoCheck.Core.Connectors.Xml.CountNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.CountNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  commentId: M:AutoCheck.Core.Connectors.Xml.CountNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  id: CountNodes(XmlNode,System.String,AutoCheck.Core.Connectors.Xml.XmlNodeType)
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: CountNodes(XmlNode, String, Xml.XmlNodeType)
  nameWithType: Xml.CountNodes(XmlNode, String, Xml.XmlNodeType)
  fullName: AutoCheck.Core.Connectors.Xml.CountNodes(XmlNode, System.String, AutoCheck.Core.Connectors.Xml.XmlNodeType)
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CountNodes
    path: ../core/connectors/Xml.cs
    startLine: 184
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nRequests for the amount of nodes.\n"
  example: []
  syntax:
    content: public int CountNodes(XmlNode root, string xpath, Xml.XmlNodeType type = Xml.XmlNodeType.ALL)
    parameters:
    - id: root
      type: XmlNode
      description: Root node from where the XPath expression will be evaluated.
    - id: xpath
      type: System.String
      description: XPath expression.
    - id: type
      type: AutoCheck.Core.Connectors.Xml.XmlNodeType
    return:
      type: System.Int32
      description: The amount of nodes.
    content.vb: Public Function CountNodes(root As XmlNode, xpath As String, type As Xml.XmlNodeType = Xml.XmlNodeType.ALL) As Integer
  overload: AutoCheck.Core.Connectors.Xml.CountNodes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.Equals(XmlDocument,System.Boolean)
  commentId: M:AutoCheck.Core.Connectors.Xml.Equals(XmlDocument,System.Boolean)
  id: Equals(XmlDocument,System.Boolean)
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Equals(XmlDocument, Boolean)
  nameWithType: Xml.Equals(XmlDocument, Boolean)
  fullName: AutoCheck.Core.Connectors.Xml.Equals(XmlDocument, System.Boolean)
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Equals
    path: ../core/connectors/Xml.cs
    startLine: 193
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Equals(XmlDocument xmlDoc, bool ignoreSchema = true)
    parameters:
    - id: xmlDoc
      type: XmlDocument
      description: ''
    - id: ignoreSchema
      type: System.Boolean
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(xmlDoc As XmlDocument, ignoreSchema As Boolean = True) As Boolean
  overload: AutoCheck.Core.Connectors.Xml.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Xml.Equals(AutoCheck.Core.Connectors.Xml,System.Boolean)
  commentId: M:AutoCheck.Core.Connectors.Xml.Equals(AutoCheck.Core.Connectors.Xml,System.Boolean)
  id: Equals(AutoCheck.Core.Connectors.Xml,System.Boolean)
  parent: AutoCheck.Core.Connectors.Xml
  langs:
  - csharp
  - vb
  name: Equals(Xml, Boolean)
  nameWithType: Xml.Equals(Xml, Boolean)
  fullName: AutoCheck.Core.Connectors.Xml.Equals(AutoCheck.Core.Connectors.Xml, System.Boolean)
  type: Method
  source:
    remote:
      path: core/connectors/Xml.cs
      branch: v2.18.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Equals
    path: ../core/connectors/Xml.cs
    startLine: 202
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Equals(Xml xmlConn, bool ignoreSchema = true)
    parameters:
    - id: xmlConn
      type: AutoCheck.Core.Connectors.Xml
    - id: ignoreSchema
      type: System.Boolean
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(xmlConn As Xml, ignoreSchema As Boolean = True) As Boolean
  overload: AutoCheck.Core.Connectors.Xml.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Core.Connectors
  commentId: N:AutoCheck.Core.Connectors
  name: AutoCheck.Core.Connectors
  nameWithType: AutoCheck.Core.Connectors
  fullName: AutoCheck.Core.Connectors
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Connectors.Base
  commentId: T:AutoCheck.Core.Connectors.Base
  parent: AutoCheck.Core.Connectors
  name: Base
  nameWithType: Base
  fullName: AutoCheck.Core.Connectors.Base
- uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  commentId: M:AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  parent: AutoCheck.Core.Connectors.Base
  isExternal: true
  name: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  nameWithType: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action<System.String>)
  nameWithType.vb: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  fullName.vb: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action(Of System.String))
  name.vb: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
    name: ProcessRemoteFile
    nameWithType: Base.ProcessRemoteFile
    fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoCheck.Core.Utils.OS
    name: Utils.OS
    nameWithType: Utils.OS
    fullName: AutoCheck.Core.Utils.OS
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
    name: ProcessRemoteFile
    nameWithType: Base.ProcessRemoteFile
    fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoCheck.Core.Utils.OS
    name: Utils.OS
    nameWithType: Utils.OS
    fullName: AutoCheck.Core.Utils.OS
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.Xml.ObjectExtensions.DeepClone``1
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  parent: ObjectExtensions
  definition: ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<Xml>()
  nameWithType: ObjectExtensions.DeepClone<Xml>()
  fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.Xml>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of Xml)()
  fullName.vb: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.Xml)()
  name.vb: DeepClone(Of Xml)()
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone<Xml>
    nameWithType: ObjectExtensions.DeepClone<Xml>
    fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.Xml>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone(Of Xml)
    nameWithType: ObjectExtensions.DeepClone(Of Xml)
    fullName: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.Xml)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions.DeepClone``1(``0)
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions
  commentId: T:ObjectExtensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: ObjectExtensions
- uid: AutoCheck.Core.Connectors.Xml.Comments*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.Comments
  name: Comments
  nameWithType: Xml.Comments
  fullName: AutoCheck.Core.Connectors.Xml.Comments
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutoCheck.Core.Connectors.Xml.XmlDoc*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.XmlDoc
  name: XmlDoc
  nameWithType: Xml.XmlDoc
  fullName: AutoCheck.Core.Connectors.Xml.XmlDoc
- uid: XmlDocument
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: XmlDocument
- uid: AutoCheck.Core.Connectors.Xml.Raw*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.Raw
  name: Raw
  nameWithType: Xml.Raw
  fullName: AutoCheck.Core.Connectors.Xml.Raw
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoCheck.Core.Connectors.Xml.#ctor*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.#ctor
  name: Xml
  nameWithType: Xml.Xml
  fullName: AutoCheck.Core.Connectors.Xml.Xml
- uid: ValidationType
  isExternal: true
  name: ValidationType
  nameWithType: ValidationType
  fullName: ValidationType
- uid: AutoCheck.Core.Utils.OS
  commentId: T:AutoCheck.Core.Utils.OS
  parent: AutoCheck.Core
  name: Utils.OS
  nameWithType: Utils.OS
  fullName: AutoCheck.Core.Utils.OS
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: AutoCheck.Core.Connectors.Base.Dispose
  commentId: M:AutoCheck.Core.Connectors.Base.Dispose
  parent: AutoCheck.Core.Connectors.Base
  name: Dispose()
  nameWithType: Base.Dispose()
  fullName: AutoCheck.Core.Connectors.Base.Dispose()
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.Xml.Dispose*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.Dispose
  name: Dispose
  nameWithType: Xml.Dispose
  fullName: AutoCheck.Core.Connectors.Xml.Dispose
- uid: AutoCheck.Core.Connectors.Xml.SelectNodes*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.SelectNodes
  name: SelectNodes
  nameWithType: Xml.SelectNodes
  fullName: AutoCheck.Core.Connectors.Xml.SelectNodes
- uid: AutoCheck.Core.Connectors.Xml.XmlNodeType
  commentId: T:AutoCheck.Core.Connectors.Xml.XmlNodeType
  parent: AutoCheck.Core.Connectors
  name: Xml.XmlNodeType
  nameWithType: Xml.XmlNodeType
  fullName: AutoCheck.Core.Connectors.Xml.XmlNodeType
- uid: List{XPathNavigator}
  commentId: '!:List{XPathNavigator}'
  definition: List`1
  name: List<XPathNavigator>
  nameWithType: List<XPathNavigator>
  fullName: List<XPathNavigator>
  nameWithType.vb: List(Of XPathNavigator)
  fullName.vb: List(Of XPathNavigator)
  name.vb: List(Of XPathNavigator)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: XPathNavigator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: XmlNode
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: XmlNode
- uid: AutoCheck.Core.Connectors.Xml.CountNodes*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.CountNodes
  name: CountNodes
  nameWithType: Xml.CountNodes
  fullName: AutoCheck.Core.Connectors.Xml.CountNodes
- uid: AutoCheck.Core.Connectors.Xml.Equals*
  commentId: Overload:AutoCheck.Core.Connectors.Xml.Equals
  name: Equals
  nameWithType: Xml.Equals
  fullName: AutoCheck.Core.Connectors.Xml.Equals
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AutoCheck.Core.Connectors.Xml
  commentId: T:AutoCheck.Core.Connectors.Xml
  parent: AutoCheck.Core.Connectors
  name: Xml
  nameWithType: Xml
  fullName: AutoCheck.Core.Connectors.Xml
