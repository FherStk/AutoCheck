### YamlMime:ManagedReference
items:
- uid: AutoCheck.Scripts.GENERIC_GoogleDriveImporter
  commentId: T:AutoCheck.Scripts.GENERIC_GoogleDriveImporter
  id: GENERIC_GoogleDriveImporter
  parent: AutoCheck.Scripts
  children:
  - AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})
  - AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run
  langs:
  - csharp
  - vb
  name: GENERIC_GoogleDriveImporter
  nameWithType: GENERIC_GoogleDriveImporter
  fullName: AutoCheck.Scripts.GENERIC_GoogleDriveImporter
  type: Class
  source:
    remote:
      path: src/scripts/GENERIC_GoogleDriveImporter.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: GENERIC_GoogleDriveImporter
    path: ../src/scripts/GENERIC_GoogleDriveImporter.cs
    startLine: 23
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: 'public class GENERIC_GoogleDriveImporter : ScriptGDrive<None>'
    content.vb: >-
      Public Class GENERIC_GoogleDriveImporter

          Inherits ScriptGDrive(Of None)
  inheritance:
  - System.Object
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  - AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}
  - AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  inheritedMembers:
  - AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.Secret
  - AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.Username
  - AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.GDriveFolder
  - AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.DefaultArguments
  - AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.SetUp
  - AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}.Student
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Path
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CpThresh
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.MaxScore
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Score
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.IsQuestionOpen
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Batch
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.OpenQuestion(System.String,System.Single)
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CancelQuestion
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CloseQuestion(System.String)
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.EvalQuestion
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})
  - AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.PrintScore
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: AutoCheck.Scripts.GENERIC_GoogleDriveImporter
  langs:
  - csharp
  - vb
  name: GENERIC_GoogleDriveImporter(Dictionary<String, String>)
  nameWithType: GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter(Dictionary<String, String>)
  fullName: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter(System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/scripts/GENERIC_GoogleDriveImporter.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../src/scripts/GENERIC_GoogleDriveImporter.cs
    startLine: 24
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: public GENERIC_GoogleDriveImporter(Dictionary<string, string> args)
    parameters:
    - id: args
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Sub New(args As Dictionary(Of String, String))
  overload: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor*
  nameWithType.vb: GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter(Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter(System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GENERIC_GoogleDriveImporter(Dictionary(Of String, String))
- uid: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run
  commentId: M:AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run
  id: Run
  parent: AutoCheck.Scripts.GENERIC_GoogleDriveImporter
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: GENERIC_GoogleDriveImporter.Run()
  fullName: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run()
  type: Method
  source:
    remote:
      path: src/scripts/GENERIC_GoogleDriveImporter.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: Run
    path: ../src/scripts/GENERIC_GoogleDriveImporter.cs
    startLine: 27
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Scripts
  syntax:
    content: public override void Run()
    content.vb: Public Overrides Sub Run
  overridden: AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}.Run
  overload: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AutoCheck.Scripts
  commentId: N:AutoCheck.Scripts
  name: AutoCheck.Scripts
  nameWithType: AutoCheck.Scripts
  fullName: AutoCheck.Scripts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  commentId: T:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  parent: AutoCheck.Core
  definition: AutoCheck.Core.Script`1
  name: Script<None>
  nameWithType: Script<None>
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>
  nameWithType.vb: Script(Of None)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None)
  name.vb: Script(Of None)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.Core.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.Core.CopyDetectors.None
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.Core.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.Core.CopyDetectors.None
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}
  commentId: T:AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}
  parent: AutoCheck.Core
  definition: AutoCheck.Core.ScriptFiles`1
  name: ScriptFiles<None>
  nameWithType: ScriptFiles<None>
  fullName: AutoCheck.Core.ScriptFiles<AutoCheck.Core.CopyDetectors.None>
  nameWithType.vb: ScriptFiles(Of None)
  fullName.vb: AutoCheck.Core.ScriptFiles(Of AutoCheck.Core.CopyDetectors.None)
  name.vb: ScriptFiles(Of None)
  spec.csharp:
  - uid: AutoCheck.Core.ScriptFiles`1
    name: ScriptFiles
    nameWithType: ScriptFiles
    fullName: AutoCheck.Core.ScriptFiles
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.Core.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.Core.CopyDetectors.None
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.ScriptFiles`1
    name: ScriptFiles
    nameWithType: ScriptFiles
    fullName: AutoCheck.Core.ScriptFiles
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.Core.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.Core.CopyDetectors.None
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  commentId: T:AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  parent: AutoCheck.Core
  definition: AutoCheck.Core.ScriptGDrive`1
  name: ScriptGDrive<None>
  nameWithType: ScriptGDrive<None>
  fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>
  nameWithType.vb: ScriptGDrive(Of None)
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None)
  name.vb: ScriptGDrive(Of None)
  spec.csharp:
  - uid: AutoCheck.Core.ScriptGDrive`1
    name: ScriptGDrive
    nameWithType: ScriptGDrive
    fullName: AutoCheck.Core.ScriptGDrive
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.Core.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.Core.CopyDetectors.None
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.ScriptGDrive`1
    name: ScriptGDrive
    nameWithType: ScriptGDrive
    fullName: AutoCheck.Core.ScriptGDrive
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.Core.CopyDetectors.None
    name: None
    nameWithType: None
    fullName: AutoCheck.Core.CopyDetectors.None
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.Secret
  commentId: P:AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.Secret
  parent: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptGDrive`1.Secret
  name: Secret
  nameWithType: ScriptGDrive<None>.Secret
  fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.Secret
  nameWithType.vb: ScriptGDrive(Of None).Secret
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).Secret
- uid: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.Username
  commentId: P:AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.Username
  parent: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptGDrive`1.Username
  name: Username
  nameWithType: ScriptGDrive<None>.Username
  fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.Username
  nameWithType.vb: ScriptGDrive(Of None).Username
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).Username
- uid: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.GDriveFolder
  commentId: P:AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.GDriveFolder
  parent: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptGDrive`1.GDriveFolder
  name: GDriveFolder
  nameWithType: ScriptGDrive<None>.GDriveFolder
  fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.GDriveFolder
  nameWithType.vb: ScriptGDrive(Of None).GDriveFolder
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).GDriveFolder
- uid: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.DefaultArguments
  commentId: M:AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.DefaultArguments
  parent: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptGDrive`1.DefaultArguments
  name: DefaultArguments()
  nameWithType: ScriptGDrive<None>.DefaultArguments()
  fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.DefaultArguments()
  nameWithType.vb: ScriptGDrive(Of None).DefaultArguments()
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).DefaultArguments()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptGDrive`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptGDrive<None>.DefaultArguments
    fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptGDrive`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptGDrive(Of None).DefaultArguments
    fullName: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.SetUp
  commentId: M:AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}.SetUp
  parent: AutoCheck.Core.ScriptGDrive{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptGDrive`1.SetUp
  name: SetUp()
  nameWithType: ScriptGDrive<None>.SetUp()
  fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.SetUp()
  nameWithType.vb: ScriptGDrive(Of None).SetUp()
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).SetUp()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptGDrive`1.SetUp
    name: SetUp
    nameWithType: ScriptGDrive<None>.SetUp
    fullName: AutoCheck.Core.ScriptGDrive<AutoCheck.Core.CopyDetectors.None>.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptGDrive`1.SetUp
    name: SetUp
    nameWithType: ScriptGDrive(Of None).SetUp
    fullName: AutoCheck.Core.ScriptGDrive(Of AutoCheck.Core.CopyDetectors.None).SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}.Student
  commentId: P:AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}.Student
  parent: AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptFiles`1.Student
  name: Student
  nameWithType: ScriptFiles<None>.Student
  fullName: AutoCheck.Core.ScriptFiles<AutoCheck.Core.CopyDetectors.None>.Student
  nameWithType.vb: ScriptFiles(Of None).Student
  fullName.vb: AutoCheck.Core.ScriptFiles(Of AutoCheck.Core.CopyDetectors.None).Student
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Path
  commentId: P:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Path
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.Path
  name: Path
  nameWithType: Script<None>.Path
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.Path
  nameWithType.vb: Script(Of None).Path
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).Path
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CpThresh
  commentId: P:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CpThresh
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.CpThresh
  name: CpThresh
  nameWithType: Script<None>.CpThresh
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.CpThresh
  nameWithType.vb: Script(Of None).CpThresh
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).CpThresh
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.MaxScore
  commentId: P:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.MaxScore
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.MaxScore
  name: MaxScore
  nameWithType: Script<None>.MaxScore
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.MaxScore
  nameWithType.vb: Script(Of None).MaxScore
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).MaxScore
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Score
  commentId: P:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Score
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.Score
  name: Score
  nameWithType: Script<None>.Score
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.Score
  nameWithType.vb: Script(Of None).Score
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).Score
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.IsQuestionOpen
  commentId: P:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.IsQuestionOpen
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.IsQuestionOpen
  name: IsQuestionOpen
  nameWithType: Script<None>.IsQuestionOpen
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.IsQuestionOpen
  nameWithType.vb: Script(Of None).IsQuestionOpen
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).IsQuestionOpen
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Batch
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.Batch
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.Batch
  name: Batch()
  nameWithType: Script<None>.Batch()
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.Batch()
  nameWithType.vb: Script(Of None).Batch()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).Batch()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script<None>.Batch
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script(Of None).Batch
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.OpenQuestion(System.String,System.Single)
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.OpenQuestion(System.String,System.Single)
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
  name: OpenQuestion(String, Single)
  nameWithType: Script<None>.OpenQuestion(String, Single)
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.OpenQuestion(System.String, System.Single)
  nameWithType.vb: Script(Of None).OpenQuestion(String, Single)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).OpenQuestion(System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<None>.OpenQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of None).OpenQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  name: OpenQuestion(String, String, Single)
  nameWithType: Script<None>.OpenQuestion(String, String, Single)
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.OpenQuestion(System.String, System.String, System.Single)
  nameWithType.vb: Script(Of None).OpenQuestion(String, String, Single)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).OpenQuestion(System.String, System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<None>.OpenQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of None).OpenQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CancelQuestion
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CancelQuestion
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.CancelQuestion
  name: CancelQuestion()
  nameWithType: Script<None>.CancelQuestion()
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.CancelQuestion()
  nameWithType.vb: Script(Of None).CancelQuestion()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).CancelQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script<None>.CancelQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script(Of None).CancelQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CloseQuestion(System.String)
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.CloseQuestion(System.String)
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.CloseQuestion(System.String)
  name: CloseQuestion(String)
  nameWithType: Script<None>.CloseQuestion(String)
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.CloseQuestion(System.String)
  nameWithType.vb: Script(Of None).CloseQuestion(String)
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).CloseQuestion(System.String)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script<None>.CloseQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script(Of None).CloseQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.EvalQuestion
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.EvalQuestion
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.EvalQuestion
  name: EvalQuestion()
  nameWithType: Script<None>.EvalQuestion()
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.EvalQuestion()
  nameWithType.vb: Script(Of None).EvalQuestion()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).EvalQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script<None>.EvalQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script(Of None).EvalQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  name: EvalQuestion(List<String>)
  nameWithType: Script<None>.EvalQuestion(List<String>)
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.EvalQuestion(System.Collections.Generic.List<System.String>)
  nameWithType.vb: Script(Of None).EvalQuestion(List(Of String))
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).EvalQuestion(System.Collections.Generic.List(Of System.String))
  name.vb: EvalQuestion(List(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script<None>.EvalQuestion
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script(Of None).EvalQuestion
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.PrintScore
  commentId: M:AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}.PrintScore
  parent: AutoCheck.Core.Script{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.Script`1.PrintScore
  name: PrintScore()
  nameWithType: Script<None>.PrintScore()
  fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.PrintScore()
  nameWithType.vb: Script(Of None).PrintScore()
  fullName.vb: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).PrintScore()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script<None>.PrintScore
    fullName: AutoCheck.Core.Script<AutoCheck.Core.CopyDetectors.None>.PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script(Of None).PrintScore
    fullName: AutoCheck.Core.Script(Of AutoCheck.Core.CopyDetectors.None).PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core.Script`1
  commentId: T:AutoCheck.Core.Script`1
  name: Script<T>
  nameWithType: Script<T>
  fullName: AutoCheck.Core.Script<T>
  nameWithType.vb: Script(Of T)
  fullName.vb: AutoCheck.Core.Script(Of T)
  name.vb: Script(Of T)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.Script`1
    name: Script
    nameWithType: Script
    fullName: AutoCheck.Core.Script
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: AutoCheck.Core.ScriptFiles`1
  commentId: T:AutoCheck.Core.ScriptFiles`1
  name: ScriptFiles<T>
  nameWithType: ScriptFiles<T>
  fullName: AutoCheck.Core.ScriptFiles<T>
  nameWithType.vb: ScriptFiles(Of T)
  fullName.vb: AutoCheck.Core.ScriptFiles(Of T)
  name.vb: ScriptFiles(Of T)
  spec.csharp:
  - uid: AutoCheck.Core.ScriptFiles`1
    name: ScriptFiles
    nameWithType: ScriptFiles
    fullName: AutoCheck.Core.ScriptFiles
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.ScriptFiles`1
    name: ScriptFiles
    nameWithType: ScriptFiles
    fullName: AutoCheck.Core.ScriptFiles
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptGDrive`1
  commentId: T:AutoCheck.Core.ScriptGDrive`1
  name: ScriptGDrive<T>
  nameWithType: ScriptGDrive<T>
  fullName: AutoCheck.Core.ScriptGDrive<T>
  nameWithType.vb: ScriptGDrive(Of T)
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of T)
  name.vb: ScriptGDrive(Of T)
  spec.csharp:
  - uid: AutoCheck.Core.ScriptGDrive`1
    name: ScriptGDrive
    nameWithType: ScriptGDrive
    fullName: AutoCheck.Core.ScriptGDrive
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AutoCheck.Core.ScriptGDrive`1
    name: ScriptGDrive
    nameWithType: ScriptGDrive
    fullName: AutoCheck.Core.ScriptGDrive
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptGDrive`1.Secret
  commentId: P:AutoCheck.Core.ScriptGDrive`1.Secret
  name: Secret
  nameWithType: ScriptGDrive<T>.Secret
  fullName: AutoCheck.Core.ScriptGDrive<T>.Secret
  nameWithType.vb: ScriptGDrive(Of T).Secret
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of T).Secret
- uid: AutoCheck.Core.ScriptGDrive`1.Username
  commentId: P:AutoCheck.Core.ScriptGDrive`1.Username
  name: Username
  nameWithType: ScriptGDrive<T>.Username
  fullName: AutoCheck.Core.ScriptGDrive<T>.Username
  nameWithType.vb: ScriptGDrive(Of T).Username
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of T).Username
- uid: AutoCheck.Core.ScriptGDrive`1.GDriveFolder
  commentId: P:AutoCheck.Core.ScriptGDrive`1.GDriveFolder
  name: GDriveFolder
  nameWithType: ScriptGDrive<T>.GDriveFolder
  fullName: AutoCheck.Core.ScriptGDrive<T>.GDriveFolder
  nameWithType.vb: ScriptGDrive(Of T).GDriveFolder
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of T).GDriveFolder
- uid: AutoCheck.Core.ScriptGDrive`1.DefaultArguments
  commentId: M:AutoCheck.Core.ScriptGDrive`1.DefaultArguments
  name: DefaultArguments()
  nameWithType: ScriptGDrive<T>.DefaultArguments()
  fullName: AutoCheck.Core.ScriptGDrive<T>.DefaultArguments()
  nameWithType.vb: ScriptGDrive(Of T).DefaultArguments()
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of T).DefaultArguments()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptGDrive`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptGDrive<T>.DefaultArguments
    fullName: AutoCheck.Core.ScriptGDrive<T>.DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptGDrive`1.DefaultArguments
    name: DefaultArguments
    nameWithType: ScriptGDrive(Of T).DefaultArguments
    fullName: AutoCheck.Core.ScriptGDrive(Of T).DefaultArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptGDrive`1.SetUp
  commentId: M:AutoCheck.Core.ScriptGDrive`1.SetUp
  name: SetUp()
  nameWithType: ScriptGDrive<T>.SetUp()
  fullName: AutoCheck.Core.ScriptGDrive<T>.SetUp()
  nameWithType.vb: ScriptGDrive(Of T).SetUp()
  fullName.vb: AutoCheck.Core.ScriptGDrive(Of T).SetUp()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptGDrive`1.SetUp
    name: SetUp
    nameWithType: ScriptGDrive<T>.SetUp
    fullName: AutoCheck.Core.ScriptGDrive<T>.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptGDrive`1.SetUp
    name: SetUp
    nameWithType: ScriptGDrive(Of T).SetUp
    fullName: AutoCheck.Core.ScriptGDrive(Of T).SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.ScriptFiles`1.Student
  commentId: P:AutoCheck.Core.ScriptFiles`1.Student
  name: Student
  nameWithType: ScriptFiles<T>.Student
  fullName: AutoCheck.Core.ScriptFiles<T>.Student
  nameWithType.vb: ScriptFiles(Of T).Student
  fullName.vb: AutoCheck.Core.ScriptFiles(Of T).Student
- uid: AutoCheck.Core.Script`1.Path
  commentId: P:AutoCheck.Core.Script`1.Path
  name: Path
  nameWithType: Script<T>.Path
  fullName: AutoCheck.Core.Script<T>.Path
  nameWithType.vb: Script(Of T).Path
  fullName.vb: AutoCheck.Core.Script(Of T).Path
- uid: AutoCheck.Core.Script`1.CpThresh
  commentId: P:AutoCheck.Core.Script`1.CpThresh
  name: CpThresh
  nameWithType: Script<T>.CpThresh
  fullName: AutoCheck.Core.Script<T>.CpThresh
  nameWithType.vb: Script(Of T).CpThresh
  fullName.vb: AutoCheck.Core.Script(Of T).CpThresh
- uid: AutoCheck.Core.Script`1.MaxScore
  commentId: P:AutoCheck.Core.Script`1.MaxScore
  name: MaxScore
  nameWithType: Script<T>.MaxScore
  fullName: AutoCheck.Core.Script<T>.MaxScore
  nameWithType.vb: Script(Of T).MaxScore
  fullName.vb: AutoCheck.Core.Script(Of T).MaxScore
- uid: AutoCheck.Core.Script`1.Score
  commentId: P:AutoCheck.Core.Script`1.Score
  name: Score
  nameWithType: Script<T>.Score
  fullName: AutoCheck.Core.Script<T>.Score
  nameWithType.vb: Script(Of T).Score
  fullName.vb: AutoCheck.Core.Script(Of T).Score
- uid: AutoCheck.Core.Script`1.IsQuestionOpen
  commentId: P:AutoCheck.Core.Script`1.IsQuestionOpen
  name: IsQuestionOpen
  nameWithType: Script<T>.IsQuestionOpen
  fullName: AutoCheck.Core.Script<T>.IsQuestionOpen
  nameWithType.vb: Script(Of T).IsQuestionOpen
  fullName.vb: AutoCheck.Core.Script(Of T).IsQuestionOpen
- uid: AutoCheck.Core.Script`1.Batch
  commentId: M:AutoCheck.Core.Script`1.Batch
  name: Batch()
  nameWithType: Script<T>.Batch()
  fullName: AutoCheck.Core.Script<T>.Batch()
  nameWithType.vb: Script(Of T).Batch()
  fullName.vb: AutoCheck.Core.Script(Of T).Batch()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script<T>.Batch
    fullName: AutoCheck.Core.Script<T>.Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.Batch
    name: Batch
    nameWithType: Script(Of T).Batch
    fullName: AutoCheck.Core.Script(Of T).Batch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
  commentId: M:AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
  isExternal: true
  name: OpenQuestion(String, Single)
  nameWithType: Script<T>.OpenQuestion(String, Single)
  fullName: AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.Single)
  nameWithType.vb: Script(Of T).OpenQuestion(String, Single)
  fullName.vb: AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<T>.OpenQuestion
    fullName: AutoCheck.Core.Script<T>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of T).OpenQuestion
    fullName: AutoCheck.Core.Script(Of T).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  commentId: M:AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
  isExternal: true
  name: OpenQuestion(String, String, Single)
  nameWithType: Script<T>.OpenQuestion(String, String, Single)
  fullName: AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.String, System.Single)
  nameWithType.vb: Script(Of T).OpenQuestion(String, String, Single)
  fullName.vb: AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.String, System.Single)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script<T>.OpenQuestion
    fullName: AutoCheck.Core.Script<T>.OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)
    name: OpenQuestion
    nameWithType: Script(Of T).OpenQuestion
    fullName: AutoCheck.Core.Script(Of T).OpenQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.CancelQuestion
  commentId: M:AutoCheck.Core.Script`1.CancelQuestion
  name: CancelQuestion()
  nameWithType: Script<T>.CancelQuestion()
  fullName: AutoCheck.Core.Script<T>.CancelQuestion()
  nameWithType.vb: Script(Of T).CancelQuestion()
  fullName.vb: AutoCheck.Core.Script(Of T).CancelQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script<T>.CancelQuestion
    fullName: AutoCheck.Core.Script<T>.CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CancelQuestion
    name: CancelQuestion
    nameWithType: Script(Of T).CancelQuestion
    fullName: AutoCheck.Core.Script(Of T).CancelQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
  commentId: M:AutoCheck.Core.Script`1.CloseQuestion(System.String)
  isExternal: true
  name: CloseQuestion(String)
  nameWithType: Script<T>.CloseQuestion(String)
  fullName: AutoCheck.Core.Script<T>.CloseQuestion(System.String)
  nameWithType.vb: Script(Of T).CloseQuestion(String)
  fullName.vb: AutoCheck.Core.Script(Of T).CloseQuestion(System.String)
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script<T>.CloseQuestion
    fullName: AutoCheck.Core.Script<T>.CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.CloseQuestion(System.String)
    name: CloseQuestion
    nameWithType: Script(Of T).CloseQuestion
    fullName: AutoCheck.Core.Script(Of T).CloseQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.EvalQuestion
  commentId: M:AutoCheck.Core.Script`1.EvalQuestion
  name: EvalQuestion()
  nameWithType: Script<T>.EvalQuestion()
  fullName: AutoCheck.Core.Script<T>.EvalQuestion()
  nameWithType.vb: Script(Of T).EvalQuestion()
  fullName.vb: AutoCheck.Core.Script(Of T).EvalQuestion()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script<T>.EvalQuestion
    fullName: AutoCheck.Core.Script<T>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion
    name: EvalQuestion
    nameWithType: Script(Of T).EvalQuestion
    fullName: AutoCheck.Core.Script(Of T).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  commentId: M:AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
  isExternal: true
  name: EvalQuestion(List<String>)
  nameWithType: Script<T>.EvalQuestion(List<String>)
  fullName: AutoCheck.Core.Script<T>.EvalQuestion(System.Collections.Generic.List<System.String>)
  nameWithType.vb: Script(Of T).EvalQuestion(List(Of String))
  fullName.vb: AutoCheck.Core.Script(Of T).EvalQuestion(System.Collections.Generic.List(Of System.String))
  name.vb: EvalQuestion(List(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script<T>.EvalQuestion
    fullName: AutoCheck.Core.Script<T>.EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})
    name: EvalQuestion
    nameWithType: Script(Of T).EvalQuestion
    fullName: AutoCheck.Core.Script(Of T).EvalQuestion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script`1.PrintScore
  commentId: M:AutoCheck.Core.Script`1.PrintScore
  name: PrintScore()
  nameWithType: Script<T>.PrintScore()
  fullName: AutoCheck.Core.Script<T>.PrintScore()
  nameWithType.vb: Script(Of T).PrintScore()
  fullName.vb: AutoCheck.Core.Script(Of T).PrintScore()
  spec.csharp:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script<T>.PrintScore
    fullName: AutoCheck.Core.Script<T>.PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Script`1.PrintScore
    name: PrintScore
    nameWithType: Script(Of T).PrintScore
    fullName: AutoCheck.Core.Script(Of T).PrintScore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor*
  commentId: Overload:AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor
  name: GENERIC_GoogleDriveImporter
  nameWithType: GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter
  fullName: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}.Run
  commentId: M:AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}.Run
  parent: AutoCheck.Core.ScriptFiles{AutoCheck.Core.CopyDetectors.None}
  definition: AutoCheck.Core.ScriptFiles`1.Run
  name: Run()
  nameWithType: ScriptFiles<None>.Run()
  fullName: AutoCheck.Core.ScriptFiles<AutoCheck.Core.CopyDetectors.None>.Run()
  nameWithType.vb: ScriptFiles(Of None).Run()
  fullName.vb: AutoCheck.Core.ScriptFiles(Of AutoCheck.Core.CopyDetectors.None).Run()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptFiles`1.Run
    name: Run
    nameWithType: ScriptFiles<None>.Run
    fullName: AutoCheck.Core.ScriptFiles<AutoCheck.Core.CopyDetectors.None>.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptFiles`1.Run
    name: Run
    nameWithType: ScriptFiles(Of None).Run
    fullName: AutoCheck.Core.ScriptFiles(Of AutoCheck.Core.CopyDetectors.None).Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run*
  commentId: Overload:AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run
  name: Run
  nameWithType: GENERIC_GoogleDriveImporter.Run
  fullName: AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run
- uid: AutoCheck.Core.ScriptFiles`1.Run
  commentId: M:AutoCheck.Core.ScriptFiles`1.Run
  name: Run()
  nameWithType: ScriptFiles<T>.Run()
  fullName: AutoCheck.Core.ScriptFiles<T>.Run()
  nameWithType.vb: ScriptFiles(Of T).Run()
  fullName.vb: AutoCheck.Core.ScriptFiles(Of T).Run()
  spec.csharp:
  - uid: AutoCheck.Core.ScriptFiles`1.Run
    name: Run
    nameWithType: ScriptFiles<T>.Run
    fullName: AutoCheck.Core.ScriptFiles<T>.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.ScriptFiles`1.Run
    name: Run
    nameWithType: ScriptFiles(Of T).Run
    fullName: AutoCheck.Core.ScriptFiles(Of T).Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
