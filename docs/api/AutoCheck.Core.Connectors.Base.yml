### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Connectors.Base
  commentId: T:AutoCheck.Core.Connectors.Base
  id: Base
  parent: AutoCheck.Core.Connectors
  children:
  - AutoCheck.Core.Connectors.Base.Dispose
  - AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: Base
  fullName: AutoCheck.Core.Connectors.Base
  type: Class
  source:
    remote:
      path: core/connectors/Base.cs
      branch: v2.23.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Base
    path: ../core/connectors/Base.cs
    startLine: 41
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nThis class must be inherited in order to develop a custom connectors.\nThis class is an abstraction layer between a checker (to a lesser extent, a script) in order to perform in/out operations and/or data validations.\n"
  example: []
  syntax:
    content: 'public abstract class Base : IDisposable'
    content.vb: >-
      Public MustInherit Class Base
          Inherits IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - AutoCheck.Core.Connectors.Compressed
  - AutoCheck.Core.Connectors.Css
  - AutoCheck.Core.Connectors.Csv
  - AutoCheck.Core.Connectors.GDrive
  - AutoCheck.Core.Connectors.Html
  - AutoCheck.Core.Connectors.Math
  - AutoCheck.Core.Connectors.PlainText
  - AutoCheck.Core.Connectors.Postgres
  - AutoCheck.Core.Connectors.Shell
  - AutoCheck.Core.Connectors.TextStream
  - AutoCheck.Core.Connectors.Xml
  extensionMethods:
  - AutoCheck.Core.Connectors.Base.ObjectExtensions.DeepClone``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: AutoCheck.Core.Connectors.Base.Dispose
  commentId: M:AutoCheck.Core.Connectors.Base.Dispose
  id: Dispose
  parent: AutoCheck.Core.Connectors.Base
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Base.Dispose()
  fullName: AutoCheck.Core.Connectors.Base.Dispose()
  type: Method
  source:
    remote:
      path: core/connectors/Base.cs
      branch: v2.23.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Dispose
    path: ../core/connectors/Base.cs
    startLine: 45
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nDisposes the object releasing its unmanaged properties.\n"
  example: []
  syntax:
    content: public abstract void Dispose()
    content.vb: Public MustOverride Sub Dispose
  overload: AutoCheck.Core.Connectors.Base.Dispose*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  commentId: M:AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  id: ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  parent: AutoCheck.Core.Connectors.Base
  langs:
  - csharp
  - vb
  name: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  nameWithType: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action<System.String>)
  type: Method
  source:
    remote:
      path: core/connectors/Base.cs
      branch: v2.23.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ProcessRemoteFile
    path: ../core/connectors/Base.cs
    startLine: 51
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nDownloads a remote file into a temp folder, perfoms the action and removes the file.\n"
  example: []
  syntax:
    content: protected void ProcessRemoteFile(Utils.OS remoteOS, string host, string username, string password, int port, string filePath, Action<string> action)
    parameters:
    - id: remoteOS
      type: AutoCheck.Core.Utils.OS
    - id: host
      type: System.String
    - id: username
      type: System.String
    - id: password
      type: System.String
    - id: port
      type: System.Int32
    - id: filePath
      type: System.String
    - id: action
      type: Action{System.String}
      description: The action to run.
    content.vb: Protected Sub ProcessRemoteFile(remoteOS As Utils.OS, host As String, username As String, password As String, port As Integer, filePath As String, action As Action(Of String))
  overload: AutoCheck.Core.Connectors.Base.ProcessRemoteFile*
  nameWithType.vb: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action(Of System.String))
  name.vb: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
references:
- uid: AutoCheck.Core.Connectors
  commentId: N:AutoCheck.Core.Connectors
  name: AutoCheck.Core.Connectors
  nameWithType: AutoCheck.Core.Connectors
  fullName: AutoCheck.Core.Connectors
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Connectors.Base.ObjectExtensions.DeepClone``1
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  parent: ObjectExtensions
  definition: ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<Base>()
  nameWithType: ObjectExtensions.DeepClone<Base>()
  fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.Base>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of Base)()
  fullName.vb: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.Base)()
  name.vb: DeepClone(Of Base)()
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone<Base>
    nameWithType: ObjectExtensions.DeepClone<Base>
    fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.Base>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone(Of Base)
    nameWithType: ObjectExtensions.DeepClone(Of Base)
    fullName: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.Base)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions.DeepClone``1(``0)
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions
  commentId: T:ObjectExtensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: ObjectExtensions
- uid: AutoCheck.Core.Connectors.Base.Dispose*
  commentId: Overload:AutoCheck.Core.Connectors.Base.Dispose
  name: Dispose
  nameWithType: Base.Dispose
  fullName: AutoCheck.Core.Connectors.Base.Dispose
- uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile*
  commentId: Overload:AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  name: ProcessRemoteFile
  nameWithType: Base.ProcessRemoteFile
  fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
- uid: AutoCheck.Core.Utils.OS
  commentId: T:AutoCheck.Core.Utils.OS
  parent: AutoCheck.Core
  name: Utils.OS
  nameWithType: Utils.OS
  fullName: AutoCheck.Core.Utils.OS
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Action{System.String}
  commentId: '!:Action{System.String}'
  definition: Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: Action`1
  commentId: '!:Action`1'
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
