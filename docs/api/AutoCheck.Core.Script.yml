### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Script
  commentId: T:AutoCheck.Core.Script
  id: Script
  parent: AutoCheck.Core
  children:
  - AutoCheck.Core.Script.#ctor
  - AutoCheck.Core.Script.#ctor(System.String)
  - AutoCheck.Core.Script.#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  - AutoCheck.Core.Script.#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  - AutoCheck.Core.Script.#ctor(YamlStream)
  - AutoCheck.Core.Script.#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  - AutoCheck.Core.Script.#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  - AutoCheck.Core.Script.AppFolderName
  - AutoCheck.Core.Script.AppFolderPath
  - AutoCheck.Core.Script.BatchCaption
  - AutoCheck.Core.Script.Concurrent
  - AutoCheck.Core.Script.CurrentFileName
  - AutoCheck.Core.Script.CurrentFilePath
  - AutoCheck.Core.Script.CurrentFolderName
  - AutoCheck.Core.Script.CurrentFolderPath
  - AutoCheck.Core.Script.CurrentHost
  - AutoCheck.Core.Script.CurrentOS
  - AutoCheck.Core.Script.CurrentPassword
  - AutoCheck.Core.Script.CurrentPort
  - AutoCheck.Core.Script.CurrentQuestion
  - AutoCheck.Core.Script.CurrentScore
  - AutoCheck.Core.Script.CurrentTarget
  - AutoCheck.Core.Script.CurrentUser
  - AutoCheck.Core.Script.ExecutionFolderName
  - AutoCheck.Core.Script.ExecutionFolderPath
  - AutoCheck.Core.Script.ForEachChild``1(YamlNode,Action{System.String,``0},System.Boolean)
  - AutoCheck.Core.Script.LoadYamlFile(System.String)
  - AutoCheck.Core.Script.LogFileName
  - AutoCheck.Core.Script.LogFilePath
  - AutoCheck.Core.Script.LogFiles
  - AutoCheck.Core.Script.LogFolderName
  - AutoCheck.Core.Script.LogFolderPath
  - AutoCheck.Core.Script.MaxScore
  - AutoCheck.Core.Script.Now
  - AutoCheck.Core.Script.Output
  - AutoCheck.Core.Script.Result
  - AutoCheck.Core.Script.ScriptCaption
  - AutoCheck.Core.Script.ScriptFileName
  - AutoCheck.Core.Script.ScriptFilePath
  - AutoCheck.Core.Script.ScriptFolderName
  - AutoCheck.Core.Script.ScriptFolderPath
  - AutoCheck.Core.Script.ScriptName
  - AutoCheck.Core.Script.ScriptVersion
  - AutoCheck.Core.Script.SingleCaption
  - AutoCheck.Core.Script.TotalScore
  langs:
  - csharp
  - vb
  name: Script
  nameWithType: Script
  fullName: AutoCheck.Core.Script
  type: Class
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Script
    path: ../core/main/Script.cs
    startLine: 37
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: 'public class Script : object'
    content.vb: >-
      Public Class Script
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - AutoCheck.Core.Script.ObjectExtensions.DeepClone``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Script.ScriptName
  commentId: P:AutoCheck.Core.Script.ScriptName
  id: ScriptName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptName
  nameWithType: Script.ScriptName
  fullName: AutoCheck.Core.Script.ScriptName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptName
    path: ../core/main/Script.cs
    startLine: 79
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script name defined within the YAML file, otherwise the YAML file name.\n"
  example: []
  syntax:
    content: protected string ScriptName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptName As String
  overload: AutoCheck.Core.Script.ScriptName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptVersion
  commentId: P:AutoCheck.Core.Script.ScriptVersion
  id: ScriptVersion
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptVersion
  nameWithType: Script.ScriptVersion
  fullName: AutoCheck.Core.Script.ScriptVersion
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptVersion
    path: ../core/main/Script.cs
    startLine: 92
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script version defined within the YAML file, otherwise the YAML file name.\n"
  example: []
  syntax:
    content: protected string ScriptVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptVersion As String
  overload: AutoCheck.Core.Script.ScriptVersion*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptCaption
  commentId: P:AutoCheck.Core.Script.ScriptCaption
  id: ScriptCaption
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptCaption
  nameWithType: Script.ScriptCaption
  fullName: AutoCheck.Core.Script.ScriptCaption
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptCaption
    path: ../core/main/Script.cs
    startLine: 105
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script caption defined within the YAML file.\n"
  example: []
  syntax:
    content: protected string ScriptCaption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptCaption As String
  overload: AutoCheck.Core.Script.ScriptCaption*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.SingleCaption
  commentId: P:AutoCheck.Core.Script.SingleCaption
  id: SingleCaption
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: SingleCaption
  nameWithType: Script.SingleCaption
  fullName: AutoCheck.Core.Script.SingleCaption
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: SingleCaption
    path: ../core/main/Script.cs
    startLine: 118
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script caption defined within the YAML file.\n"
  example: []
  syntax:
    content: protected string SingleCaption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property SingleCaption As String
  overload: AutoCheck.Core.Script.SingleCaption*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.BatchCaption
  commentId: P:AutoCheck.Core.Script.BatchCaption
  id: BatchCaption
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: BatchCaption
  nameWithType: Script.BatchCaption
  fullName: AutoCheck.Core.Script.BatchCaption
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: BatchCaption
    path: ../core/main/Script.cs
    startLine: 131
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script caption defined within the YAML file.\n"
  example: []
  syntax:
    content: protected string BatchCaption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property BatchCaption As String
  overload: AutoCheck.Core.Script.BatchCaption*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.AppFolderPath
  commentId: P:AutoCheck.Core.Script.AppFolderPath
  id: AppFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: AppFolderPath
  nameWithType: Script.AppFolderPath
  fullName: AutoCheck.Core.Script.AppFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: AppFolderPath
    path: ../core/main/Script.cs
    startLine: 144
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe root app execution folder path.\n"
  example: []
  syntax:
    content: protected string AppFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property AppFolderPath As String
  overload: AutoCheck.Core.Script.AppFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.AppFolderName
  commentId: P:AutoCheck.Core.Script.AppFolderName
  id: AppFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: AppFolderName
  nameWithType: Script.AppFolderName
  fullName: AutoCheck.Core.Script.AppFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: AppFolderName
    path: ../core/main/Script.cs
    startLine: 165
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe root app execution folder name.\n"
  example: []
  syntax:
    content: protected string AppFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property AppFolderName As String
  overload: AutoCheck.Core.Script.AppFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ExecutionFolderPath
  commentId: P:AutoCheck.Core.Script.ExecutionFolderPath
  id: ExecutionFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ExecutionFolderPath
  nameWithType: Script.ExecutionFolderPath
  fullName: AutoCheck.Core.Script.ExecutionFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ExecutionFolderPath
    path: ../core/main/Script.cs
    startLine: 174
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script execution folder path defined within the YAML file, otherwise the YAML file&apos;s folder.\n"
  example: []
  syntax:
    content: protected string ExecutionFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ExecutionFolderPath As String
  overload: AutoCheck.Core.Script.ExecutionFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ExecutionFolderName
  commentId: P:AutoCheck.Core.Script.ExecutionFolderName
  id: ExecutionFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ExecutionFolderName
  nameWithType: Script.ExecutionFolderName
  fullName: AutoCheck.Core.Script.ExecutionFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ExecutionFolderName
    path: ../core/main/Script.cs
    startLine: 188
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script execution folder name defined within the YAML file, otherwise the YAML file&apos;s folder.\n"
  example: []
  syntax:
    content: protected string ExecutionFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ExecutionFolderName As String
  overload: AutoCheck.Core.Script.ExecutionFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptFolderPath
  commentId: P:AutoCheck.Core.Script.ScriptFolderPath
  id: ScriptFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptFolderPath
  nameWithType: Script.ScriptFolderPath
  fullName: AutoCheck.Core.Script.ScriptFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptFolderPath
    path: ../core/main/Script.cs
    startLine: 197
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe script folder path.\n"
  example: []
  syntax:
    content: protected string ScriptFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptFolderPath As String
  overload: AutoCheck.Core.Script.ScriptFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptFolderName
  commentId: P:AutoCheck.Core.Script.ScriptFolderName
  id: ScriptFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptFolderName
  nameWithType: Script.ScriptFolderName
  fullName: AutoCheck.Core.Script.ScriptFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptFolderName
    path: ../core/main/Script.cs
    startLine: 216
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe script folder name.\n"
  example: []
  syntax:
    content: protected string ScriptFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptFolderName As String
  overload: AutoCheck.Core.Script.ScriptFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptFilePath
  commentId: P:AutoCheck.Core.Script.ScriptFilePath
  id: ScriptFilePath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptFilePath
  nameWithType: Script.ScriptFilePath
  fullName: AutoCheck.Core.Script.ScriptFilePath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptFilePath
    path: ../core/main/Script.cs
    startLine: 225
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe script file path.\n"
  example: []
  syntax:
    content: protected string ScriptFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptFilePath As String
  overload: AutoCheck.Core.Script.ScriptFilePath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptFileName
  commentId: P:AutoCheck.Core.Script.ScriptFileName
  id: ScriptFileName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptFileName
  nameWithType: Script.ScriptFileName
  fullName: AutoCheck.Core.Script.ScriptFileName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptFileName
    path: ../core/main/Script.cs
    startLine: 243
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe script file name.\n"
  example: []
  syntax:
    content: protected string ScriptFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptFileName As String
  overload: AutoCheck.Core.Script.ScriptFileName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFolderPath
  commentId: P:AutoCheck.Core.Script.CurrentFolderPath
  id: CurrentFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFolderPath
  nameWithType: Script.CurrentFolderPath
  fullName: AutoCheck.Core.Script.CurrentFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFolderPath
    path: ../core/main/Script.cs
    startLine: 252
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current folder path where the script is targeting right now (local or remote); can change during the execution for batch-typed.\n"
  example: []
  syntax:
    content: protected string CurrentFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFolderPath As String
  overload: AutoCheck.Core.Script.CurrentFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFolderName
  commentId: P:AutoCheck.Core.Script.CurrentFolderName
  id: CurrentFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFolderName
  nameWithType: Script.CurrentFolderName
  fullName: AutoCheck.Core.Script.CurrentFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFolderName
    path: ../core/main/Script.cs
    startLine: 271
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current folder name where the script is targeting right now (local or remote); can change during the execution for batch-typed.\n"
  example: []
  syntax:
    content: protected string CurrentFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFolderName As String
  overload: AutoCheck.Core.Script.CurrentFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFilePath
  commentId: P:AutoCheck.Core.Script.CurrentFilePath
  id: CurrentFilePath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFilePath
  nameWithType: Script.CurrentFilePath
  fullName: AutoCheck.Core.Script.CurrentFilePath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFilePath
    path: ../core/main/Script.cs
    startLine: 280
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current file path where the script is targeting right now (local or remote); can change during the execution for batch-typed.\n"
  example: []
  syntax:
    content: protected string CurrentFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFilePath As String
  overload: AutoCheck.Core.Script.CurrentFilePath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFileName
  commentId: P:AutoCheck.Core.Script.CurrentFileName
  id: CurrentFileName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFileName
  nameWithType: Script.CurrentFileName
  fullName: AutoCheck.Core.Script.CurrentFileName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFileName
    path: ../core/main/Script.cs
    startLine: 298
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current file name where the script is targeting right now (local or remote); can change during the execution for batch-typed.\n"
  example: []
  syntax:
    content: protected string CurrentFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFileName As String
  overload: AutoCheck.Core.Script.CurrentFileName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFolderPath
  commentId: P:AutoCheck.Core.Script.LogFolderPath
  id: LogFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFolderPath
  nameWithType: Script.LogFolderPath
  fullName: AutoCheck.Core.Script.LogFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFolderPath
    path: ../core/main/Script.cs
    startLine: 307
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log folder (the entire path)\n"
  example: []
  syntax:
    content: protected string LogFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFolderPath As String
  overload: AutoCheck.Core.Script.LogFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFolderName
  commentId: P:AutoCheck.Core.Script.LogFolderName
  id: LogFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFolderName
  nameWithType: Script.LogFolderName
  fullName: AutoCheck.Core.Script.LogFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFolderName
    path: ../core/main/Script.cs
    startLine: 327
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log folder (the folder name)\n"
  example: []
  syntax:
    content: protected string LogFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFolderName As String
  overload: AutoCheck.Core.Script.LogFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFilePath
  commentId: P:AutoCheck.Core.Script.LogFilePath
  id: LogFilePath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFilePath
  nameWithType: Script.LogFilePath
  fullName: AutoCheck.Core.Script.LogFilePath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFilePath
    path: ../core/main/Script.cs
    startLine: 337
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log file (the entire path)\n"
  example: []
  syntax:
    content: protected string LogFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFilePath As String
  overload: AutoCheck.Core.Script.LogFilePath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFileName
  commentId: P:AutoCheck.Core.Script.LogFileName
  id: LogFileName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFileName
  nameWithType: Script.LogFileName
  fullName: AutoCheck.Core.Script.LogFileName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFileName
    path: ../core/main/Script.cs
    startLine: 356
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log file (the file name)\n"
  example: []
  syntax:
    content: protected string LogFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFileName As String
  overload: AutoCheck.Core.Script.LogFileName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentTarget
  commentId: P:AutoCheck.Core.Script.CurrentTarget
  id: CurrentTarget
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentTarget
  nameWithType: Script.CurrentTarget
  fullName: AutoCheck.Core.Script.CurrentTarget
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentTarget
    path: ../core/main/Script.cs
    startLine: 366
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nOnly for batch mode: returns the kind of the current batch execution: `none`, `local` or `remote`.\n"
  example: []
  syntax:
    content: protected string CurrentTarget { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentTarget As String
  overload: AutoCheck.Core.Script.CurrentTarget*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentOS
  commentId: P:AutoCheck.Core.Script.CurrentOS
  id: CurrentOS
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentOS
  nameWithType: Script.CurrentOS
  fullName: AutoCheck.Core.Script.CurrentOS
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentOS
    path: ../core/main/Script.cs
    startLine: 379
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current OS family.\n"
  example: []
  syntax:
    content: protected Utils.OS CurrentOS { get; }
    parameters: []
    return:
      type: AutoCheck.Core.Utils.OS
    content.vb: Protected ReadOnly Property CurrentOS As Utils.OS
  overload: AutoCheck.Core.Script.CurrentOS*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentHost
  commentId: P:AutoCheck.Core.Script.CurrentHost
  id: CurrentHost
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentHost
  nameWithType: Script.CurrentHost
  fullName: AutoCheck.Core.Script.CurrentHost
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentHost
    path: ../core/main/Script.cs
    startLine: 392
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe host name or IP address for the current execution.\n"
  example: []
  syntax:
    content: protected string CurrentHost { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentHost As String
  overload: AutoCheck.Core.Script.CurrentHost*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentUser
  commentId: P:AutoCheck.Core.Script.CurrentUser
  id: CurrentUser
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentUser
  nameWithType: Script.CurrentUser
  fullName: AutoCheck.Core.Script.CurrentUser
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentUser
    path: ../core/main/Script.cs
    startLine: 405
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe username for the current execution.\n"
  example: []
  syntax:
    content: protected string CurrentUser { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentUser As String
  overload: AutoCheck.Core.Script.CurrentUser*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentPassword
  commentId: P:AutoCheck.Core.Script.CurrentPassword
  id: CurrentPassword
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentPassword
  nameWithType: Script.CurrentPassword
  fullName: AutoCheck.Core.Script.CurrentPassword
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentPassword
    path: ../core/main/Script.cs
    startLine: 418
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe password for the current execution.\n"
  example: []
  syntax:
    content: protected string CurrentPassword { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentPassword As String
  overload: AutoCheck.Core.Script.CurrentPassword*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentPort
  commentId: P:AutoCheck.Core.Script.CurrentPort
  id: CurrentPort
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentPort
  nameWithType: Script.CurrentPort
  fullName: AutoCheck.Core.Script.CurrentPort
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentPort
    path: ../core/main/Script.cs
    startLine: 431
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe port for the current execution.\n"
  example: []
  syntax:
    content: protected int CurrentPort { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property CurrentPort As Integer
  overload: AutoCheck.Core.Script.CurrentPort*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentQuestion
  commentId: P:AutoCheck.Core.Script.CurrentQuestion
  id: CurrentQuestion
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentQuestion
  nameWithType: Script.CurrentQuestion
  fullName: AutoCheck.Core.Script.CurrentQuestion
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentQuestion
    path: ../core/main/Script.cs
    startLine: 444
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current question (and subquestion) number (1, 2, 2.1, etc.)\n"
  example: []
  syntax:
    content: protected string CurrentQuestion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentQuestion As String
  overload: AutoCheck.Core.Script.CurrentQuestion*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Result
  commentId: P:AutoCheck.Core.Script.Result
  id: Result
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: Script.Result
  fullName: AutoCheck.Core.Script.Result
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Result
    path: ../core/main/Script.cs
    startLine: 458
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nLast executed command&apos;s result.\n"
  example: []
  syntax:
    content: protected string Result { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Protected ReadOnly Property Result As String
  overload: AutoCheck.Core.Script.Result*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Now
  commentId: P:AutoCheck.Core.Script.Now
  id: Now
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: Script.Now
  fullName: AutoCheck.Core.Script.Now
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Now
    path: ../core/main/Script.cs
    startLine: 479
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current datetime.  \n"
  example: []
  syntax:
    content: protected string Now { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Now As String
  overload: AutoCheck.Core.Script.Now*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentScore
  commentId: P:AutoCheck.Core.Script.CurrentScore
  id: CurrentScore
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentScore
  nameWithType: Script.CurrentScore
  fullName: AutoCheck.Core.Script.CurrentScore
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentScore
    path: ../core/main/Script.cs
    startLine: 488
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current question (and subquestion) score\n"
  example: []
  syntax:
    content: protected float CurrentScore { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected ReadOnly Property CurrentScore As Single
  overload: AutoCheck.Core.Script.CurrentScore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.MaxScore
  commentId: P:AutoCheck.Core.Script.MaxScore
  id: MaxScore
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: MaxScore
  nameWithType: Script.MaxScore
  fullName: AutoCheck.Core.Script.MaxScore
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: MaxScore
    path: ../core/main/Script.cs
    startLine: 501
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nMaximum score possible\n"
  example: []
  syntax:
    content: protected float MaxScore { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected ReadOnly Property MaxScore As Single
  overload: AutoCheck.Core.Script.MaxScore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.TotalScore
  commentId: P:AutoCheck.Core.Script.TotalScore
  id: TotalScore
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: TotalScore
  nameWithType: Script.TotalScore
  fullName: AutoCheck.Core.Script.TotalScore
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: TotalScore
    path: ../core/main/Script.cs
    startLine: 514
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe accumulated score (over 10 points), which will be updated on each CloseQuestion() call.\n"
  example: []
  syntax:
    content: protected float TotalScore { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected ReadOnly Property TotalScore As Single
  overload: AutoCheck.Core.Script.TotalScore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Concurrent
  commentId: P:AutoCheck.Core.Script.Concurrent
  id: Concurrent
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Concurrent
  nameWithType: Script.Concurrent
  fullName: AutoCheck.Core.Script.Concurrent
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Concurrent
    path: ../core/main/Script.cs
    startLine: 527
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nBatch mode only: maximum concurrent script execution (0 = MAX).\n"
  example: []
  syntax:
    content: protected int Concurrent { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property Concurrent As Integer
  overload: AutoCheck.Core.Script.Concurrent*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Output
  commentId: P:AutoCheck.Core.Script.Output
  id: Output
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: Script.Output
  fullName: AutoCheck.Core.Script.Output
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Output
    path: ../core/main/Script.cs
    startLine: 541
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nOutput instance used to display messages.\n"
  example: []
  syntax:
    content: public Output Output { get; }
    parameters: []
    return:
      type: AutoCheck.Core.Output
    content.vb: Public ReadOnly Property Output As Output
  overload: AutoCheck.Core.Script.Output*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFiles
  commentId: P:AutoCheck.Core.Script.LogFiles
  id: LogFiles
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFiles
  nameWithType: Script.LogFiles
  fullName: AutoCheck.Core.Script.LogFiles
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFiles
    path: ../core/main/Script.cs
    startLine: 546
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nOutput instance used to display messages.\n"
  example: []
  syntax:
    content: public List<string> LogFiles { get; }
    parameters: []
    return:
      type: List{System.String}
    content.vb: Public ReadOnly Property LogFiles As List(Of String)
  overload: AutoCheck.Core.Script.LogFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Script.#ctor
  commentId: M:AutoCheck.Core.Script.#ctor
  id: '#ctor'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script()
  nameWithType: Script.Script()
  fullName: AutoCheck.Core.Script.Script()
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 591
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: protected Script()
    content.vb: Protected Sub New
  overload: AutoCheck.Core.Script.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: AutoCheck.Core.Script.#ctor(System.String)
  commentId: M:AutoCheck.Core.Script.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(String)
  nameWithType: Script.Script(String)
  fullName: AutoCheck.Core.Script.Script(System.String)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 635
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public Script(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Sub New(path As String)
  overload: AutoCheck.Core.Script.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Script.#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  commentId: M:AutoCheck.Core.Script.#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  id: '#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(String, EventHandler<Script.LogGeneratedEventArgs>)
  nameWithType: Script.Script(String, EventHandler<Script.LogGeneratedEventArgs>)
  fullName: AutoCheck.Core.Script.Script(System.String, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 642
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public Script(string path, EventHandler<Script.LogGeneratedEventArgs> onLogGenerated)
    parameters:
    - id: path
      type: System.String
    - id: onLogGenerated
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
    content.vb: Public Sub New(path As String, onLogGenerated As EventHandler(Of Script.LogGeneratedEventArgs))
  overload: AutoCheck.Core.Script.#ctor*
  nameWithType.vb: Script.Script(String, EventHandler(Of Script.LogGeneratedEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutoCheck.Core.Script.Script(System.String, EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs))
  name.vb: Script(String, EventHandler(Of Script.LogGeneratedEventArgs))
- uid: AutoCheck.Core.Script.#ctor(YamlStream)
  commentId: M:AutoCheck.Core.Script.#ctor(YamlStream)
  id: '#ctor(YamlStream)'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(YamlStream)
  nameWithType: Script.Script(YamlStream)
  fullName: AutoCheck.Core.Script.Script(YamlStream)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 648
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public Script(YamlStream yaml)
    parameters:
    - id: yaml
      type: YamlStream
    content.vb: Public Sub New(yaml As YamlStream)
  overload: AutoCheck.Core.Script.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Script.#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  commentId: M:AutoCheck.Core.Script.#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  id: '#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(YamlStream, EventHandler<Script.LogGeneratedEventArgs>)
  nameWithType: Script.Script(YamlStream, EventHandler<Script.LogGeneratedEventArgs>)
  fullName: AutoCheck.Core.Script.Script(YamlStream, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 655
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public Script(YamlStream yaml, EventHandler<Script.LogGeneratedEventArgs> onLogGenerated)
    parameters:
    - id: yaml
      type: YamlStream
    - id: onLogGenerated
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
    content.vb: Public Sub New(yaml As YamlStream, onLogGenerated As EventHandler(Of Script.LogGeneratedEventArgs))
  overload: AutoCheck.Core.Script.#ctor*
  nameWithType.vb: Script.Script(YamlStream, EventHandler(Of Script.LogGeneratedEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutoCheck.Core.Script.Script(YamlStream, EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs))
  name.vb: Script(YamlStream, EventHandler(Of Script.LogGeneratedEventArgs))
- uid: AutoCheck.Core.Script.#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  commentId: M:AutoCheck.Core.Script.#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  id: '#ctor(YamlStream,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(YamlStream, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>)
  nameWithType: Script.Script(YamlStream, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>)
  fullName: AutoCheck.Core.Script.Script(YamlStream, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 666
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nCreates a new script instance using the given script file.\n"
  example: []
  syntax:
    content: public Script(YamlStream yaml, EventHandler<Script.LogGeneratedEventArgs> onHeaderCompleted, EventHandler<Script.LogGeneratedEventArgs> onSetupCompleted, EventHandler<Script.LogGeneratedEventArgs> onScriptCompleted, EventHandler<Script.LogGeneratedEventArgs> onTeardwonCompleted)
    parameters:
    - id: yaml
      type: YamlStream
      description: An already parsed YAML script.
    - id: onHeaderCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the script has been loaded (before the setup execution).
    - id: onSetupCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the setup has been completed (before any script execution).
    - id: onScriptCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the script has been completed (after the post execution).
    - id: onTeardwonCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the teardown has been completed (after all scripts execution).
    content.vb: Public Sub New(yaml As YamlStream, onHeaderCompleted As EventHandler(Of Script.LogGeneratedEventArgs), onSetupCompleted As EventHandler(Of Script.LogGeneratedEventArgs), onScriptCompleted As EventHandler(Of Script.LogGeneratedEventArgs), onTeardwonCompleted As EventHandler(Of Script.LogGeneratedEventArgs))
  overload: AutoCheck.Core.Script.#ctor*
  nameWithType.vb: Script.Script(YamlStream, EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutoCheck.Core.Script.Script(YamlStream, EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs), EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs), EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs), EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs))
  name.vb: Script(YamlStream, EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs))
- uid: AutoCheck.Core.Script.#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  commentId: M:AutoCheck.Core.Script.#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})
  id: '#ctor(System.String,EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs},EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs})'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(String, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>)
  nameWithType: Script.Script(String, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>, EventHandler<Script.LogGeneratedEventArgs>)
  fullName: AutoCheck.Core.Script.Script(System.String, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>, EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 688
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nCreates a new script instance using the given script file.\n"
  example: []
  syntax:
    content: public Script(string path, EventHandler<Script.LogGeneratedEventArgs> onHeaderCompleted, EventHandler<Script.LogGeneratedEventArgs> onSetupCompleted, EventHandler<Script.LogGeneratedEventArgs> onScriptCompleted, EventHandler<Script.LogGeneratedEventArgs> onTeardwonCompleted)
    parameters:
    - id: path
      type: System.String
      description: Path to the script file (yaml).
    - id: onHeaderCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the script has been loaded (before the setup execution).
    - id: onSetupCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the setup has been completed (before any script execution).
    - id: onScriptCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the script has been completed (after the post execution).
    - id: onTeardwonCompleted
      type: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
      description: This event will be raised once the teardown has been completed (after all scripts execution).
    content.vb: Public Sub New(path As String, onHeaderCompleted As EventHandler(Of Script.LogGeneratedEventArgs), onSetupCompleted As EventHandler(Of Script.LogGeneratedEventArgs), onScriptCompleted As EventHandler(Of Script.LogGeneratedEventArgs), onTeardwonCompleted As EventHandler(Of Script.LogGeneratedEventArgs))
  overload: AutoCheck.Core.Script.#ctor*
  nameWithType.vb: Script.Script(String, EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutoCheck.Core.Script.Script(System.String, EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs), EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs), EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs), EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs))
  name.vb: Script(String, EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs), EventHandler(Of Script.LogGeneratedEventArgs))
- uid: AutoCheck.Core.Script.ForEachChild``1(YamlNode,Action{System.String,``0},System.Boolean)
  commentId: M:AutoCheck.Core.Script.ForEachChild``1(YamlNode,Action{System.String,``0},System.Boolean)
  id: ForEachChild``1(YamlNode,Action{System.String,``0},System.Boolean)
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ForEachChild<T>(YamlNode, Action<String, T>, Boolean)
  nameWithType: Script.ForEachChild<T>(YamlNode, Action<String, T>, Boolean)
  fullName: AutoCheck.Core.Script.ForEachChild<T>(YamlNode, Action<System.String, T>, System.Boolean)
  type: Method
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ForEachChild
    path: ../core/main/Script.cs
    startLine: 1754
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: >-
      protected void ForEachChild<T>(YamlNode node, Action<string, T> action, bool parseEmpty = true)
          where T : YamlNode
    parameters:
    - id: node
      type: YamlNode
    - id: action
      type: Action{System.String,{T}}
    - id: parseEmpty
      type: System.Boolean
    typeParameters:
    - id: T
    content.vb: Protected Sub ForEachChild(Of T As YamlNode)(node As YamlNode, action As Action(Of String, T), parseEmpty As Boolean = True)
  overload: AutoCheck.Core.Script.ForEachChild*
  nameWithType.vb: Script.ForEachChild(Of T)(YamlNode, Action(Of String, T), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: AutoCheck.Core.Script.ForEachChild(Of T)(YamlNode, Action(Of System.String, T), System.Boolean)
  name.vb: ForEachChild(Of T)(YamlNode, Action(Of String, T), Boolean)
- uid: AutoCheck.Core.Script.LoadYamlFile(System.String)
  commentId: M:AutoCheck.Core.Script.LoadYamlFile(System.String)
  id: LoadYamlFile(System.String)
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LoadYamlFile(String)
  nameWithType: Script.LoadYamlFile(String)
  fullName: AutoCheck.Core.Script.LoadYamlFile(System.String)
  type: Method
  source:
    remote:
      path: core/main/Script.cs
      branch: v2.14.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: LoadYamlFile
    path: ../core/main/Script.cs
    startLine: 2228
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: protected YamlStream LoadYamlFile(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: YamlStream
    content.vb: Protected Function LoadYamlFile(path As String) As YamlStream
  overload: AutoCheck.Core.Script.LoadYamlFile*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Script.ObjectExtensions.DeepClone``1
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  parent: ObjectExtensions
  definition: ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<Script>()
  nameWithType: ObjectExtensions.DeepClone<Script>()
  fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Script>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of Script)()
  fullName.vb: ObjectExtensions.DeepClone(Of AutoCheck.Core.Script)()
  name.vb: DeepClone(Of Script)()
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone<Script>
    nameWithType: ObjectExtensions.DeepClone<Script>
    fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Script>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone(Of Script)
    nameWithType: ObjectExtensions.DeepClone(Of Script)
    fullName: ObjectExtensions.DeepClone(Of AutoCheck.Core.Script)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions.DeepClone``1(``0)
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions
  commentId: T:ObjectExtensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: ObjectExtensions
- uid: AutoCheck.Core.Script.ScriptName*
  commentId: Overload:AutoCheck.Core.Script.ScriptName
  name: ScriptName
  nameWithType: Script.ScriptName
  fullName: AutoCheck.Core.Script.ScriptName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoCheck.Core.Script.ScriptVersion*
  commentId: Overload:AutoCheck.Core.Script.ScriptVersion
  name: ScriptVersion
  nameWithType: Script.ScriptVersion
  fullName: AutoCheck.Core.Script.ScriptVersion
- uid: AutoCheck.Core.Script.ScriptCaption*
  commentId: Overload:AutoCheck.Core.Script.ScriptCaption
  name: ScriptCaption
  nameWithType: Script.ScriptCaption
  fullName: AutoCheck.Core.Script.ScriptCaption
- uid: AutoCheck.Core.Script.SingleCaption*
  commentId: Overload:AutoCheck.Core.Script.SingleCaption
  name: SingleCaption
  nameWithType: Script.SingleCaption
  fullName: AutoCheck.Core.Script.SingleCaption
- uid: AutoCheck.Core.Script.BatchCaption*
  commentId: Overload:AutoCheck.Core.Script.BatchCaption
  name: BatchCaption
  nameWithType: Script.BatchCaption
  fullName: AutoCheck.Core.Script.BatchCaption
- uid: AutoCheck.Core.Script.AppFolderPath*
  commentId: Overload:AutoCheck.Core.Script.AppFolderPath
  name: AppFolderPath
  nameWithType: Script.AppFolderPath
  fullName: AutoCheck.Core.Script.AppFolderPath
- uid: AutoCheck.Core.Script.AppFolderName*
  commentId: Overload:AutoCheck.Core.Script.AppFolderName
  name: AppFolderName
  nameWithType: Script.AppFolderName
  fullName: AutoCheck.Core.Script.AppFolderName
- uid: AutoCheck.Core.Script.ExecutionFolderPath*
  commentId: Overload:AutoCheck.Core.Script.ExecutionFolderPath
  name: ExecutionFolderPath
  nameWithType: Script.ExecutionFolderPath
  fullName: AutoCheck.Core.Script.ExecutionFolderPath
- uid: AutoCheck.Core.Script.ExecutionFolderName*
  commentId: Overload:AutoCheck.Core.Script.ExecutionFolderName
  name: ExecutionFolderName
  nameWithType: Script.ExecutionFolderName
  fullName: AutoCheck.Core.Script.ExecutionFolderName
- uid: AutoCheck.Core.Script.ScriptFolderPath*
  commentId: Overload:AutoCheck.Core.Script.ScriptFolderPath
  name: ScriptFolderPath
  nameWithType: Script.ScriptFolderPath
  fullName: AutoCheck.Core.Script.ScriptFolderPath
- uid: AutoCheck.Core.Script.ScriptFolderName*
  commentId: Overload:AutoCheck.Core.Script.ScriptFolderName
  name: ScriptFolderName
  nameWithType: Script.ScriptFolderName
  fullName: AutoCheck.Core.Script.ScriptFolderName
- uid: AutoCheck.Core.Script.ScriptFilePath*
  commentId: Overload:AutoCheck.Core.Script.ScriptFilePath
  name: ScriptFilePath
  nameWithType: Script.ScriptFilePath
  fullName: AutoCheck.Core.Script.ScriptFilePath
- uid: AutoCheck.Core.Script.ScriptFileName*
  commentId: Overload:AutoCheck.Core.Script.ScriptFileName
  name: ScriptFileName
  nameWithType: Script.ScriptFileName
  fullName: AutoCheck.Core.Script.ScriptFileName
- uid: AutoCheck.Core.Script.CurrentFolderPath*
  commentId: Overload:AutoCheck.Core.Script.CurrentFolderPath
  name: CurrentFolderPath
  nameWithType: Script.CurrentFolderPath
  fullName: AutoCheck.Core.Script.CurrentFolderPath
- uid: AutoCheck.Core.Script.CurrentFolderName*
  commentId: Overload:AutoCheck.Core.Script.CurrentFolderName
  name: CurrentFolderName
  nameWithType: Script.CurrentFolderName
  fullName: AutoCheck.Core.Script.CurrentFolderName
- uid: AutoCheck.Core.Script.CurrentFilePath*
  commentId: Overload:AutoCheck.Core.Script.CurrentFilePath
  name: CurrentFilePath
  nameWithType: Script.CurrentFilePath
  fullName: AutoCheck.Core.Script.CurrentFilePath
- uid: AutoCheck.Core.Script.CurrentFileName*
  commentId: Overload:AutoCheck.Core.Script.CurrentFileName
  name: CurrentFileName
  nameWithType: Script.CurrentFileName
  fullName: AutoCheck.Core.Script.CurrentFileName
- uid: AutoCheck.Core.Script.LogFolderPath*
  commentId: Overload:AutoCheck.Core.Script.LogFolderPath
  name: LogFolderPath
  nameWithType: Script.LogFolderPath
  fullName: AutoCheck.Core.Script.LogFolderPath
- uid: AutoCheck.Core.Script.LogFolderName*
  commentId: Overload:AutoCheck.Core.Script.LogFolderName
  name: LogFolderName
  nameWithType: Script.LogFolderName
  fullName: AutoCheck.Core.Script.LogFolderName
- uid: AutoCheck.Core.Script.LogFilePath*
  commentId: Overload:AutoCheck.Core.Script.LogFilePath
  name: LogFilePath
  nameWithType: Script.LogFilePath
  fullName: AutoCheck.Core.Script.LogFilePath
- uid: AutoCheck.Core.Script.LogFileName*
  commentId: Overload:AutoCheck.Core.Script.LogFileName
  name: LogFileName
  nameWithType: Script.LogFileName
  fullName: AutoCheck.Core.Script.LogFileName
- uid: AutoCheck.Core.Script.CurrentTarget*
  commentId: Overload:AutoCheck.Core.Script.CurrentTarget
  name: CurrentTarget
  nameWithType: Script.CurrentTarget
  fullName: AutoCheck.Core.Script.CurrentTarget
- uid: AutoCheck.Core.Script.CurrentOS*
  commentId: Overload:AutoCheck.Core.Script.CurrentOS
  name: CurrentOS
  nameWithType: Script.CurrentOS
  fullName: AutoCheck.Core.Script.CurrentOS
- uid: AutoCheck.Core.Utils.OS
  commentId: T:AutoCheck.Core.Utils.OS
  parent: AutoCheck.Core
  name: Utils.OS
  nameWithType: Utils.OS
  fullName: AutoCheck.Core.Utils.OS
- uid: AutoCheck.Core.Script.CurrentHost*
  commentId: Overload:AutoCheck.Core.Script.CurrentHost
  name: CurrentHost
  nameWithType: Script.CurrentHost
  fullName: AutoCheck.Core.Script.CurrentHost
- uid: AutoCheck.Core.Script.CurrentUser*
  commentId: Overload:AutoCheck.Core.Script.CurrentUser
  name: CurrentUser
  nameWithType: Script.CurrentUser
  fullName: AutoCheck.Core.Script.CurrentUser
- uid: AutoCheck.Core.Script.CurrentPassword*
  commentId: Overload:AutoCheck.Core.Script.CurrentPassword
  name: CurrentPassword
  nameWithType: Script.CurrentPassword
  fullName: AutoCheck.Core.Script.CurrentPassword
- uid: AutoCheck.Core.Script.CurrentPort*
  commentId: Overload:AutoCheck.Core.Script.CurrentPort
  name: CurrentPort
  nameWithType: Script.CurrentPort
  fullName: AutoCheck.Core.Script.CurrentPort
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AutoCheck.Core.Script.CurrentQuestion*
  commentId: Overload:AutoCheck.Core.Script.CurrentQuestion
  name: CurrentQuestion
  nameWithType: Script.CurrentQuestion
  fullName: AutoCheck.Core.Script.CurrentQuestion
- uid: AutoCheck.Core.Script.Result*
  commentId: Overload:AutoCheck.Core.Script.Result
  name: Result
  nameWithType: Script.Result
  fullName: AutoCheck.Core.Script.Result
- uid: AutoCheck.Core.Script.Now*
  commentId: Overload:AutoCheck.Core.Script.Now
  name: Now
  nameWithType: Script.Now
  fullName: AutoCheck.Core.Script.Now
- uid: AutoCheck.Core.Script.CurrentScore*
  commentId: Overload:AutoCheck.Core.Script.CurrentScore
  name: CurrentScore
  nameWithType: Script.CurrentScore
  fullName: AutoCheck.Core.Script.CurrentScore
- uid: System.Single
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: AutoCheck.Core.Script.MaxScore*
  commentId: Overload:AutoCheck.Core.Script.MaxScore
  name: MaxScore
  nameWithType: Script.MaxScore
  fullName: AutoCheck.Core.Script.MaxScore
- uid: AutoCheck.Core.Script.TotalScore*
  commentId: Overload:AutoCheck.Core.Script.TotalScore
  name: TotalScore
  nameWithType: Script.TotalScore
  fullName: AutoCheck.Core.Script.TotalScore
- uid: AutoCheck.Core.Script.Concurrent*
  commentId: Overload:AutoCheck.Core.Script.Concurrent
  name: Concurrent
  nameWithType: Script.Concurrent
  fullName: AutoCheck.Core.Script.Concurrent
- uid: AutoCheck.Core.Script.Output*
  commentId: Overload:AutoCheck.Core.Script.Output
  name: Output
  nameWithType: Script.Output
  fullName: AutoCheck.Core.Script.Output
- uid: AutoCheck.Core.Output
  commentId: T:AutoCheck.Core.Output
  parent: AutoCheck.Core
  name: Output
  nameWithType: Output
  fullName: AutoCheck.Core.Output
- uid: AutoCheck.Core.Script.LogFiles*
  commentId: Overload:AutoCheck.Core.Script.LogFiles
  name: LogFiles
  nameWithType: Script.LogFiles
  fullName: AutoCheck.Core.Script.LogFiles
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script.#ctor*
  commentId: Overload:AutoCheck.Core.Script.#ctor
  name: Script
  nameWithType: Script.Script
  fullName: AutoCheck.Core.Script.Script
- uid: EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}
  commentId: '!:EventHandler{AutoCheck.Core.Script.LogGeneratedEventArgs}'
  definition: EventHandler`1
  name: EventHandler<Script.LogGeneratedEventArgs>
  nameWithType: EventHandler<Script.LogGeneratedEventArgs>
  fullName: EventHandler<AutoCheck.Core.Script.LogGeneratedEventArgs>
  nameWithType.vb: EventHandler(Of Script.LogGeneratedEventArgs)
  fullName.vb: EventHandler(Of AutoCheck.Core.Script.LogGeneratedEventArgs)
  name.vb: EventHandler(Of Script.LogGeneratedEventArgs)
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.Core.Script.LogGeneratedEventArgs
    name: Script.LogGeneratedEventArgs
    nameWithType: Script.LogGeneratedEventArgs
    fullName: AutoCheck.Core.Script.LogGeneratedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.Core.Script.LogGeneratedEventArgs
    name: Script.LogGeneratedEventArgs
    nameWithType: Script.LogGeneratedEventArgs
    fullName: AutoCheck.Core.Script.LogGeneratedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: EventHandler`1
  isExternal: true
  name: EventHandler<>
  nameWithType: EventHandler<>
  fullName: EventHandler<>
  nameWithType.vb: EventHandler(Of )
  fullName.vb: EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: YamlStream
  isExternal: true
  name: YamlStream
  nameWithType: YamlStream
  fullName: YamlStream
- uid: AutoCheck.Core.Script.ForEachChild*
  commentId: Overload:AutoCheck.Core.Script.ForEachChild
  name: ForEachChild
  nameWithType: Script.ForEachChild
  fullName: AutoCheck.Core.Script.ForEachChild
- uid: YamlNode
  commentId: '!:YamlNode'
  isExternal: true
  name: YamlNode
  nameWithType: YamlNode
  fullName: YamlNode
- uid: Action{System.String,{T}}
  commentId: '!:Action{System.String,``0}'
  definition: Action`2
  name: Action<String, T>
  nameWithType: Action<String, T>
  fullName: Action<System.String, T>
  nameWithType.vb: Action(Of String, T)
  fullName.vb: Action(Of System.String, T)
  name.vb: Action(Of String, T)
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Action`2
  commentId: '!:Action`2'
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Script.LoadYamlFile*
  commentId: Overload:AutoCheck.Core.Script.LoadYamlFile
  name: LoadYamlFile
  nameWithType: Script.LoadYamlFile
  fullName: AutoCheck.Core.Script.LoadYamlFile
