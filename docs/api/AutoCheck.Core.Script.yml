### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Script
  commentId: T:AutoCheck.Core.Script
  id: Script
  parent: AutoCheck.Core
  children:
  - AutoCheck.Core.Script.#ctor(System.String)
  - AutoCheck.Core.Script.AppFolderName
  - AutoCheck.Core.Script.AppFolderPath
  - AutoCheck.Core.Script.BatchCaption
  - AutoCheck.Core.Script.CurrentFileName
  - AutoCheck.Core.Script.CurrentFilePath
  - AutoCheck.Core.Script.CurrentFolderName
  - AutoCheck.Core.Script.CurrentFolderPath
  - AutoCheck.Core.Script.CurrentHost
  - AutoCheck.Core.Script.CurrentQuestion
  - AutoCheck.Core.Script.CurrentScore
  - AutoCheck.Core.Script.ExecutionFolderName
  - AutoCheck.Core.Script.ExecutionFolderPath
  - AutoCheck.Core.Script.LogFileName
  - AutoCheck.Core.Script.LogFilePath
  - AutoCheck.Core.Script.LogFolderName
  - AutoCheck.Core.Script.LogFolderPath
  - AutoCheck.Core.Script.MaxScore
  - AutoCheck.Core.Script.Now
  - AutoCheck.Core.Script.Output
  - AutoCheck.Core.Script.Result
  - AutoCheck.Core.Script.ScriptCaption
  - AutoCheck.Core.Script.ScriptName
  - AutoCheck.Core.Script.ScriptVersion
  - AutoCheck.Core.Script.TotalScore
  langs:
  - csharp
  - vb
  name: Script
  nameWithType: Script
  fullName: AutoCheck.Core.Script
  type: Class
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: Script
    path: ../core/main/Script.cs
    startLine: 35
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public class Script
    content.vb: Public Class Script
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Script.ScriptName
  commentId: P:AutoCheck.Core.Script.ScriptName
  id: ScriptName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptName
  nameWithType: Script.ScriptName
  fullName: AutoCheck.Core.Script.ScriptName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptName
    path: ../core/main/Script.cs
    startLine: 40
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script name defined within the YAML file, otherwise the YAML file name.\n"
  example: []
  syntax:
    content: protected string ScriptName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptName As String
  overload: AutoCheck.Core.Script.ScriptName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptVersion
  commentId: P:AutoCheck.Core.Script.ScriptVersion
  id: ScriptVersion
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptVersion
  nameWithType: Script.ScriptVersion
  fullName: AutoCheck.Core.Script.ScriptVersion
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptVersion
    path: ../core/main/Script.cs
    startLine: 53
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script version defined within the YAML file, otherwise the YAML file name.\n"
  example: []
  syntax:
    content: protected string ScriptVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptVersion As String
  overload: AutoCheck.Core.Script.ScriptVersion*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ScriptCaption
  commentId: P:AutoCheck.Core.Script.ScriptCaption
  id: ScriptCaption
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ScriptCaption
  nameWithType: Script.ScriptCaption
  fullName: AutoCheck.Core.Script.ScriptCaption
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: ScriptCaption
    path: ../core/main/Script.cs
    startLine: 66
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script caption defined within the YAML file.\n"
  example: []
  syntax:
    content: protected string ScriptCaption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ScriptCaption As String
  overload: AutoCheck.Core.Script.ScriptCaption*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.BatchCaption
  commentId: P:AutoCheck.Core.Script.BatchCaption
  id: BatchCaption
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: BatchCaption
  nameWithType: Script.BatchCaption
  fullName: AutoCheck.Core.Script.BatchCaption
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: BatchCaption
    path: ../core/main/Script.cs
    startLine: 79
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current batch caption defined within the YAML file.\n"
  example: []
  syntax:
    content: protected string BatchCaption { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property BatchCaption As String
  overload: AutoCheck.Core.Script.BatchCaption*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.AppFolderPath
  commentId: P:AutoCheck.Core.Script.AppFolderPath
  id: AppFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: AppFolderPath
  nameWithType: Script.AppFolderPath
  fullName: AutoCheck.Core.Script.AppFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: AppFolderPath
    path: ../core/main/Script.cs
    startLine: 92
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe root app execution folder path.\n"
  example: []
  syntax:
    content: protected string AppFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property AppFolderPath As String
  overload: AutoCheck.Core.Script.AppFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.AppFolderName
  commentId: P:AutoCheck.Core.Script.AppFolderName
  id: AppFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: AppFolderName
  nameWithType: Script.AppFolderName
  fullName: AutoCheck.Core.Script.AppFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: AppFolderName
    path: ../core/main/Script.cs
    startLine: 114
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe root app execution folder name.\n"
  example: []
  syntax:
    content: protected string AppFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property AppFolderName As String
  overload: AutoCheck.Core.Script.AppFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ExecutionFolderPath
  commentId: P:AutoCheck.Core.Script.ExecutionFolderPath
  id: ExecutionFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ExecutionFolderPath
  nameWithType: Script.ExecutionFolderPath
  fullName: AutoCheck.Core.Script.ExecutionFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: ExecutionFolderPath
    path: ../core/main/Script.cs
    startLine: 134
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script execution folder path defined within the YAML file, otherwise the YAML file&apos;s folder.\n"
  example: []
  syntax:
    content: protected string ExecutionFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ExecutionFolderPath As String
  overload: AutoCheck.Core.Script.ExecutionFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.ExecutionFolderName
  commentId: P:AutoCheck.Core.Script.ExecutionFolderName
  id: ExecutionFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: ExecutionFolderName
  nameWithType: Script.ExecutionFolderName
  fullName: AutoCheck.Core.Script.ExecutionFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: ExecutionFolderName
    path: ../core/main/Script.cs
    startLine: 148
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script execution folder name defined within the YAML file, otherwise the YAML file&apos;s folder.\n"
  example: []
  syntax:
    content: protected string ExecutionFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ExecutionFolderName As String
  overload: AutoCheck.Core.Script.ExecutionFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFolderPath
  commentId: P:AutoCheck.Core.Script.CurrentFolderPath
  id: CurrentFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFolderPath
  nameWithType: Script.CurrentFolderPath
  fullName: AutoCheck.Core.Script.CurrentFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFolderPath
    path: ../core/main/Script.cs
    startLine: 161
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script folder (the entire path); can change during the execution for batch-typed scripts with the folder used to extract, restore a database, etc.\n"
  example: []
  syntax:
    content: protected string CurrentFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFolderPath As String
  overload: AutoCheck.Core.Script.CurrentFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFolderName
  commentId: P:AutoCheck.Core.Script.CurrentFolderName
  id: CurrentFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFolderName
  nameWithType: Script.CurrentFolderName
  fullName: AutoCheck.Core.Script.CurrentFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFolderName
    path: ../core/main/Script.cs
    startLine: 175
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script folder (just the folder name); can change during the execution for batch-typed scripts with the folder used to extract, restore a database, etc.\n"
  example: []
  syntax:
    content: protected string CurrentFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFolderName As String
  overload: AutoCheck.Core.Script.CurrentFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFilePath
  commentId: P:AutoCheck.Core.Script.CurrentFilePath
  id: CurrentFilePath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFilePath
  nameWithType: Script.CurrentFilePath
  fullName: AutoCheck.Core.Script.CurrentFilePath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFilePath
    path: ../core/main/Script.cs
    startLine: 188
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script file (the entire path); can change during the execution for batch-typed scripts with the file used to extract, restore a database, etc.\n"
  example: []
  syntax:
    content: protected string CurrentFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFilePath As String
  overload: AutoCheck.Core.Script.CurrentFilePath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentFileName
  commentId: P:AutoCheck.Core.Script.CurrentFileName
  id: CurrentFileName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentFileName
  nameWithType: Script.CurrentFileName
  fullName: AutoCheck.Core.Script.CurrentFileName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentFileName
    path: ../core/main/Script.cs
    startLine: 202
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script file (just the file name); can change during the execution for batch-typed scripts with the file used to extract, restore a database, etc.\n"
  example: []
  syntax:
    content: protected string CurrentFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentFileName As String
  overload: AutoCheck.Core.Script.CurrentFileName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFolderPath
  commentId: P:AutoCheck.Core.Script.LogFolderPath
  id: LogFolderPath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFolderPath
  nameWithType: Script.LogFolderPath
  fullName: AutoCheck.Core.Script.LogFolderPath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFolderPath
    path: ../core/main/Script.cs
    startLine: 215
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log folder (the entire path)\n"
  example: []
  syntax:
    content: protected string LogFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFolderPath As String
  overload: AutoCheck.Core.Script.LogFolderPath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFolderName
  commentId: P:AutoCheck.Core.Script.LogFolderName
  id: LogFolderName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFolderName
  nameWithType: Script.LogFolderName
  fullName: AutoCheck.Core.Script.LogFolderName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFolderName
    path: ../core/main/Script.cs
    startLine: 229
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log folder (the folder name)\n"
  example: []
  syntax:
    content: protected string LogFolderName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFolderName As String
  overload: AutoCheck.Core.Script.LogFolderName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFilePath
  commentId: P:AutoCheck.Core.Script.LogFilePath
  id: LogFilePath
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFilePath
  nameWithType: Script.LogFilePath
  fullName: AutoCheck.Core.Script.LogFilePath
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFilePath
    path: ../core/main/Script.cs
    startLine: 242
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log file (the entire path)\n"
  example: []
  syntax:
    content: protected string LogFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFilePath As String
  overload: AutoCheck.Core.Script.LogFilePath*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.LogFileName
  commentId: P:AutoCheck.Core.Script.LogFileName
  id: LogFileName
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: LogFileName
  nameWithType: Script.LogFileName
  fullName: AutoCheck.Core.Script.LogFileName
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: LogFileName
    path: ../core/main/Script.cs
    startLine: 256
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current log file (the file name)\n"
  example: []
  syntax:
    content: protected string LogFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property LogFileName As String
  overload: AutoCheck.Core.Script.LogFileName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentHost
  commentId: P:AutoCheck.Core.Script.CurrentHost
  id: CurrentHost
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentHost
  nameWithType: Script.CurrentHost
  fullName: AutoCheck.Core.Script.CurrentHost
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentHost
    path: ../core/main/Script.cs
    startLine: 269
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current script IP for single-typed scripts (the same as &quot;îp&quot;); can change during the execution for batch-typed scripts.\n"
  example: []
  syntax:
    content: protected string CurrentHost { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentHost As String
  overload: AutoCheck.Core.Script.CurrentHost*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentQuestion
  commentId: P:AutoCheck.Core.Script.CurrentQuestion
  id: CurrentQuestion
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentQuestion
  nameWithType: Script.CurrentQuestion
  fullName: AutoCheck.Core.Script.CurrentQuestion
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentQuestion
    path: ../core/main/Script.cs
    startLine: 282
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current question (and subquestion) number (1, 2, 2.1, etc.)\n"
  example: []
  syntax:
    content: protected string CurrentQuestion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property CurrentQuestion As String
  overload: AutoCheck.Core.Script.CurrentQuestion*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Result
  commentId: P:AutoCheck.Core.Script.Result
  id: Result
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: Script.Result
  fullName: AutoCheck.Core.Script.Result
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: Result
    path: ../core/main/Script.cs
    startLine: 296
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nLast executed command&apos;s result.\n"
  example: []
  syntax:
    content: protected string Result { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Protected ReadOnly Property Result As String
  overload: AutoCheck.Core.Script.Result*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Now
  commentId: P:AutoCheck.Core.Script.Now
  id: Now
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Now
  nameWithType: Script.Now
  fullName: AutoCheck.Core.Script.Now
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: Now
    path: ../core/main/Script.cs
    startLine: 317
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current datetime.  \n"
  example: []
  syntax:
    content: protected string Now { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Now As String
  overload: AutoCheck.Core.Script.Now*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.CurrentScore
  commentId: P:AutoCheck.Core.Script.CurrentScore
  id: CurrentScore
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: CurrentScore
  nameWithType: Script.CurrentScore
  fullName: AutoCheck.Core.Script.CurrentScore
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: CurrentScore
    path: ../core/main/Script.cs
    startLine: 326
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe current question (and subquestion) score\n"
  example: []
  syntax:
    content: protected float CurrentScore { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected ReadOnly Property CurrentScore As Single
  overload: AutoCheck.Core.Script.CurrentScore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.MaxScore
  commentId: P:AutoCheck.Core.Script.MaxScore
  id: MaxScore
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: MaxScore
  nameWithType: Script.MaxScore
  fullName: AutoCheck.Core.Script.MaxScore
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: MaxScore
    path: ../core/main/Script.cs
    startLine: 339
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nMaximum score possible\n"
  example: []
  syntax:
    content: protected float MaxScore { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected ReadOnly Property MaxScore As Single
  overload: AutoCheck.Core.Script.MaxScore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.TotalScore
  commentId: P:AutoCheck.Core.Script.TotalScore
  id: TotalScore
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: TotalScore
  nameWithType: Script.TotalScore
  fullName: AutoCheck.Core.Script.TotalScore
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: TotalScore
    path: ../core/main/Script.cs
    startLine: 352
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nThe accumulated score (over 10 points), which will be updated on each CloseQuestion() call.\n"
  example: []
  syntax:
    content: protected float TotalScore { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected ReadOnly Property TotalScore As Single
  overload: AutoCheck.Core.Script.TotalScore*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: AutoCheck.Core.Script.Output
  commentId: P:AutoCheck.Core.Script.Output
  id: Output
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: Script.Output
  fullName: AutoCheck.Core.Script.Output
  type: Property
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: Output
    path: ../core/main/Script.cs
    startLine: 366
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nOutput instance used to display messages.\n"
  example: []
  syntax:
    content: public Output Output { get; }
    parameters: []
    return:
      type: AutoCheck.Core.Output
    content.vb: Public ReadOnly Property Output As Output
  overload: AutoCheck.Core.Script.Output*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Core.Script.#ctor(System.String)
  commentId: M:AutoCheck.Core.Script.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AutoCheck.Core.Script
  langs:
  - csharp
  - vb
  name: Script(String)
  nameWithType: Script.Script(String)
  fullName: AutoCheck.Core.Script.Script(System.String)
  type: Constructor
  source:
    remote:
      path: core/main/Script.cs
      branch: master
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Script.cs
    startLine: 395
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nCreates a new script instance using the given script file.\n"
  example: []
  syntax:
    content: public Script(string path)
    parameters:
    - id: path
      type: System.String
      description: Path to the script file (yaml).
    content.vb: Public Sub New(path As String)
  overload: AutoCheck.Core.Script.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core.Script.ScriptName*
  commentId: Overload:AutoCheck.Core.Script.ScriptName
  name: ScriptName
  nameWithType: Script.ScriptName
  fullName: AutoCheck.Core.Script.ScriptName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoCheck.Core.Script.ScriptVersion*
  commentId: Overload:AutoCheck.Core.Script.ScriptVersion
  name: ScriptVersion
  nameWithType: Script.ScriptVersion
  fullName: AutoCheck.Core.Script.ScriptVersion
- uid: AutoCheck.Core.Script.ScriptCaption*
  commentId: Overload:AutoCheck.Core.Script.ScriptCaption
  name: ScriptCaption
  nameWithType: Script.ScriptCaption
  fullName: AutoCheck.Core.Script.ScriptCaption
- uid: AutoCheck.Core.Script.BatchCaption*
  commentId: Overload:AutoCheck.Core.Script.BatchCaption
  name: BatchCaption
  nameWithType: Script.BatchCaption
  fullName: AutoCheck.Core.Script.BatchCaption
- uid: AutoCheck.Core.Script.AppFolderPath*
  commentId: Overload:AutoCheck.Core.Script.AppFolderPath
  name: AppFolderPath
  nameWithType: Script.AppFolderPath
  fullName: AutoCheck.Core.Script.AppFolderPath
- uid: AutoCheck.Core.Script.AppFolderName*
  commentId: Overload:AutoCheck.Core.Script.AppFolderName
  name: AppFolderName
  nameWithType: Script.AppFolderName
  fullName: AutoCheck.Core.Script.AppFolderName
- uid: AutoCheck.Core.Script.ExecutionFolderPath*
  commentId: Overload:AutoCheck.Core.Script.ExecutionFolderPath
  name: ExecutionFolderPath
  nameWithType: Script.ExecutionFolderPath
  fullName: AutoCheck.Core.Script.ExecutionFolderPath
- uid: AutoCheck.Core.Script.ExecutionFolderName*
  commentId: Overload:AutoCheck.Core.Script.ExecutionFolderName
  name: ExecutionFolderName
  nameWithType: Script.ExecutionFolderName
  fullName: AutoCheck.Core.Script.ExecutionFolderName
- uid: AutoCheck.Core.Script.CurrentFolderPath*
  commentId: Overload:AutoCheck.Core.Script.CurrentFolderPath
  name: CurrentFolderPath
  nameWithType: Script.CurrentFolderPath
  fullName: AutoCheck.Core.Script.CurrentFolderPath
- uid: AutoCheck.Core.Script.CurrentFolderName*
  commentId: Overload:AutoCheck.Core.Script.CurrentFolderName
  name: CurrentFolderName
  nameWithType: Script.CurrentFolderName
  fullName: AutoCheck.Core.Script.CurrentFolderName
- uid: AutoCheck.Core.Script.CurrentFilePath*
  commentId: Overload:AutoCheck.Core.Script.CurrentFilePath
  name: CurrentFilePath
  nameWithType: Script.CurrentFilePath
  fullName: AutoCheck.Core.Script.CurrentFilePath
- uid: AutoCheck.Core.Script.CurrentFileName*
  commentId: Overload:AutoCheck.Core.Script.CurrentFileName
  name: CurrentFileName
  nameWithType: Script.CurrentFileName
  fullName: AutoCheck.Core.Script.CurrentFileName
- uid: AutoCheck.Core.Script.LogFolderPath*
  commentId: Overload:AutoCheck.Core.Script.LogFolderPath
  name: LogFolderPath
  nameWithType: Script.LogFolderPath
  fullName: AutoCheck.Core.Script.LogFolderPath
- uid: AutoCheck.Core.Script.LogFolderName*
  commentId: Overload:AutoCheck.Core.Script.LogFolderName
  name: LogFolderName
  nameWithType: Script.LogFolderName
  fullName: AutoCheck.Core.Script.LogFolderName
- uid: AutoCheck.Core.Script.LogFilePath*
  commentId: Overload:AutoCheck.Core.Script.LogFilePath
  name: LogFilePath
  nameWithType: Script.LogFilePath
  fullName: AutoCheck.Core.Script.LogFilePath
- uid: AutoCheck.Core.Script.LogFileName*
  commentId: Overload:AutoCheck.Core.Script.LogFileName
  name: LogFileName
  nameWithType: Script.LogFileName
  fullName: AutoCheck.Core.Script.LogFileName
- uid: AutoCheck.Core.Script.CurrentHost*
  commentId: Overload:AutoCheck.Core.Script.CurrentHost
  name: CurrentHost
  nameWithType: Script.CurrentHost
  fullName: AutoCheck.Core.Script.CurrentHost
- uid: AutoCheck.Core.Script.CurrentQuestion*
  commentId: Overload:AutoCheck.Core.Script.CurrentQuestion
  name: CurrentQuestion
  nameWithType: Script.CurrentQuestion
  fullName: AutoCheck.Core.Script.CurrentQuestion
- uid: AutoCheck.Core.Script.Result*
  commentId: Overload:AutoCheck.Core.Script.Result
  name: Result
  nameWithType: Script.Result
  fullName: AutoCheck.Core.Script.Result
- uid: AutoCheck.Core.Script.Now*
  commentId: Overload:AutoCheck.Core.Script.Now
  name: Now
  nameWithType: Script.Now
  fullName: AutoCheck.Core.Script.Now
- uid: AutoCheck.Core.Script.CurrentScore*
  commentId: Overload:AutoCheck.Core.Script.CurrentScore
  name: CurrentScore
  nameWithType: Script.CurrentScore
  fullName: AutoCheck.Core.Script.CurrentScore
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: AutoCheck.Core.Script.MaxScore*
  commentId: Overload:AutoCheck.Core.Script.MaxScore
  name: MaxScore
  nameWithType: Script.MaxScore
  fullName: AutoCheck.Core.Script.MaxScore
- uid: AutoCheck.Core.Script.TotalScore*
  commentId: Overload:AutoCheck.Core.Script.TotalScore
  name: TotalScore
  nameWithType: Script.TotalScore
  fullName: AutoCheck.Core.Script.TotalScore
- uid: AutoCheck.Core.Script.Output*
  commentId: Overload:AutoCheck.Core.Script.Output
  name: Output
  nameWithType: Script.Output
  fullName: AutoCheck.Core.Script.Output
- uid: AutoCheck.Core.Output
  commentId: T:AutoCheck.Core.Output
  parent: AutoCheck.Core
  name: Output
  nameWithType: Output
  fullName: AutoCheck.Core.Output
- uid: AutoCheck.Core.Script.#ctor*
  commentId: Overload:AutoCheck.Core.Script.#ctor
  name: Script
  nameWithType: Script.Script
  fullName: AutoCheck.Core.Script.Script
