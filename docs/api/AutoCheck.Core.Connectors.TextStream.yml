### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Connectors.TextStream
  commentId: T:AutoCheck.Core.Connectors.TextStream
  id: TextStream
  parent: AutoCheck.Core.Connectors
  children:
  - AutoCheck.Core.Connectors.TextStream.#ctor
  - AutoCheck.Core.Connectors.TextStream.Count(System.String,System.String)
  - AutoCheck.Core.Connectors.TextStream.DirectoryName(System.String)
  - AutoCheck.Core.Connectors.TextStream.DirectoryPath(System.String)
  - AutoCheck.Core.Connectors.TextStream.Dispose
  - AutoCheck.Core.Connectors.TextStream.FileName(System.String)
  - AutoCheck.Core.Connectors.TextStream.Find(System.String,System.String)
  - AutoCheck.Core.Connectors.TextStream.Replace(System.String,System.String,System.String)
  - AutoCheck.Core.Connectors.TextStream.Substring(System.String,System.String)
  langs:
  - csharp
  - vb
  name: TextStream
  nameWithType: TextStream
  fullName: AutoCheck.Core.Connectors.TextStream
  type: Class
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: TextStream
    path: ../core/connectors/TextStream.cs
    startLine: 29
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nAllows data manipulation using regular expressions\n"
  example: []
  syntax:
    content: 'public class TextStream : Base'
    content.vb: >-
      Public Class TextStream
          Inherits Base
  inheritance:
  - System.Object
  - AutoCheck.Core.Connectors.Base
  inheritedMembers:
  - AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  extensionMethods:
  - AutoCheck.Core.Connectors.TextStream.ObjectExtensions.DeepClone``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Connectors.TextStream.#ctor
  commentId: M:AutoCheck.Core.Connectors.TextStream.#ctor
  id: '#ctor'
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: TextStream()
  nameWithType: TextStream.TextStream()
  fullName: AutoCheck.Core.Connectors.TextStream.TextStream()
  type: Constructor
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/connectors/TextStream.cs
    startLine: 34
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCreates a new connector instance.\n"
  example: []
  syntax:
    content: public TextStream()
    content.vb: Public Sub New
  overload: AutoCheck.Core.Connectors.TextStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.Dispose
  commentId: M:AutoCheck.Core.Connectors.TextStream.Dispose
  id: Dispose
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TextStream.Dispose()
  fullName: AutoCheck.Core.Connectors.TextStream.Dispose()
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: Dispose
    path: ../core/connectors/TextStream.cs
    startLine: 40
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nDisposes the object releasing its unmanaged properties.\n"
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: AutoCheck.Core.Connectors.Base.Dispose
  overload: AutoCheck.Core.Connectors.TextStream.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AutoCheck.Core.Connectors.TextStream.Find(System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.Find(System.String,System.String)
  id: Find(System.String,System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: Find(String, String)
  nameWithType: TextStream.Find(String, String)
  fullName: AutoCheck.Core.Connectors.TextStream.Find(System.String, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: Find
    path: ../core/connectors/TextStream.cs
    startLine: 49
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGets the matches found within the given text using a regular expression.\n"
  example: []
  syntax:
    content: public string[] Find(string content, string regex)
    parameters:
    - id: content
      type: System.String
      description: The content where the regex will be applied to.
    - id: regex
      type: System.String
      description: The regular expression which will be used to search the content.
    return:
      type: System.String[]
      description: A set of matches.
    content.vb: Public Function Find(content As String, regex As String) As String()
  overload: AutoCheck.Core.Connectors.TextStream.Find*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.Substring(System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.Substring(System.String,System.String)
  id: Substring(System.String,System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: Substring(String, String)
  nameWithType: TextStream.Substring(String, String)
  fullName: AutoCheck.Core.Connectors.TextStream.Substring(System.String, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: Substring
    path: ../core/connectors/TextStream.cs
    startLine: 64
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGets the substring found within the given text using a regular expression (first match)\n"
  example: []
  syntax:
    content: public string Substring(string content, string regex)
    parameters:
    - id: content
      type: System.String
      description: The content where the regex will be applied to.
    - id: regex
      type: System.String
      description: The regular expression which will be used to search the content.
    return:
      type: System.String
      description: A set of matches.
    content.vb: Public Function Substring(content As String, regex As String) As String
  overload: AutoCheck.Core.Connectors.TextStream.Substring*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.Replace(System.String,System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: Replace(String, String, String)
  nameWithType: TextStream.Replace(String, String, String)
  fullName: AutoCheck.Core.Connectors.TextStream.Replace(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: Replace
    path: ../core/connectors/TextStream.cs
    startLine: 76
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReplaces every match within the given content with the given replacement.\n"
  example: []
  syntax:
    content: public string Replace(string content, string replacement, string regex)
    parameters:
    - id: content
      type: System.String
      description: The content where the regex will be applied to.
    - id: replacement
      type: System.String
      description: Every match will be replaced with this.
    - id: regex
      type: System.String
      description: The regular expression which will be used to search the content.
    return:
      type: System.String
      description: The replaced string.
    content.vb: Public Function Replace(content As String, replacement As String, regex As String) As String
  overload: AutoCheck.Core.Connectors.TextStream.Replace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.Count(System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.Count(System.String,System.String)
  id: Count(System.String,System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: Count(String, String)
  nameWithType: TextStream.Count(String, String)
  fullName: AutoCheck.Core.Connectors.TextStream.Count(System.String, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: Count
    path: ../core/connectors/TextStream.cs
    startLine: 91
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGets how many matches can be found within the given text using a regular expression.\n"
  example: []
  syntax:
    content: public int Count(string content, string regex)
    parameters:
    - id: content
      type: System.String
      description: The content where the regex will be applied to.
    - id: regex
      type: System.String
      description: The regular expression which will be used to search the content.
    return:
      type: System.Int32
      description: The number of matches.
    content.vb: Public Function Count(content As String, regex As String) As Integer
  overload: AutoCheck.Core.Connectors.TextStream.Count*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.DirectoryPath(System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.DirectoryPath(System.String)
  id: DirectoryPath(System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: DirectoryPath(String)
  nameWithType: TextStream.DirectoryPath(String)
  fullName: AutoCheck.Core.Connectors.TextStream.DirectoryPath(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: DirectoryPath
    path: ../core/connectors/TextStream.cs
    startLine: 100
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the directory path (removes the file name)\n"
  example: []
  syntax:
    content: public string DirectoryPath(string path)
    parameters:
    - id: path
      type: System.String
      description: A path to a file
    return:
      type: System.String
      description: A path to a directory
    content.vb: Public Function DirectoryPath(path As String) As String
  overload: AutoCheck.Core.Connectors.TextStream.DirectoryPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.DirectoryName(System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.DirectoryName(System.String)
  id: DirectoryName(System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: DirectoryName(String)
  nameWithType: TextStream.DirectoryName(String)
  fullName: AutoCheck.Core.Connectors.TextStream.DirectoryName(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: DirectoryName
    path: ../core/connectors/TextStream.cs
    startLine: 110
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the directory name (removes the path and also the filename)\n"
  example: []
  syntax:
    content: public string DirectoryName(string path)
    parameters:
    - id: path
      type: System.String
      description: A path to a file or folder.
    return:
      type: System.String
      description: A directory name.
    content.vb: Public Function DirectoryName(path As String) As String
  overload: AutoCheck.Core.Connectors.TextStream.DirectoryName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.TextStream.FileName(System.String)
  commentId: M:AutoCheck.Core.Connectors.TextStream.FileName(System.String)
  id: FileName(System.String)
  parent: AutoCheck.Core.Connectors.TextStream
  langs:
  - csharp
  - vb
  name: FileName(String)
  nameWithType: TextStream.FileName(String)
  fullName: AutoCheck.Core.Connectors.TextStream.FileName(System.String)
  type: Method
  source:
    remote:
      path: core/connectors/TextStream.cs
      branch: dmoj
      repo: https://github.com/FherStk/AutoCheck.git
    id: FileName
    path: ../core/connectors/TextStream.cs
    startLine: 120
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nReturns the file name (removes the path)\n"
  example: []
  syntax:
    content: public string FileName(string path)
    parameters:
    - id: path
      type: System.String
      description: A path to a file.
    return:
      type: System.String
      description: A file name.
    content.vb: Public Function FileName(path As String) As String
  overload: AutoCheck.Core.Connectors.TextStream.FileName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Core.Connectors
  commentId: N:AutoCheck.Core.Connectors
  name: AutoCheck.Core.Connectors
  nameWithType: AutoCheck.Core.Connectors
  fullName: AutoCheck.Core.Connectors
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Connectors.Base
  commentId: T:AutoCheck.Core.Connectors.Base
  parent: AutoCheck.Core.Connectors
  name: Base
  nameWithType: Base
  fullName: AutoCheck.Core.Connectors.Base
- uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  commentId: M:AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  parent: AutoCheck.Core.Connectors.Base
  isExternal: true
  name: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  nameWithType: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action<System.String>)
  nameWithType.vb: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  fullName.vb: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action(Of System.String))
  name.vb: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
    name: ProcessRemoteFile
    nameWithType: Base.ProcessRemoteFile
    fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoCheck.Core.Utils.OS
    name: Utils.OS
    nameWithType: Utils.OS
    fullName: AutoCheck.Core.Utils.OS
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
    name: ProcessRemoteFile
    nameWithType: Base.ProcessRemoteFile
    fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoCheck.Core.Utils.OS
    name: Utils.OS
    nameWithType: Utils.OS
    fullName: AutoCheck.Core.Utils.OS
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.TextStream.ObjectExtensions.DeepClone``1
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  parent: ObjectExtensions
  definition: ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<TextStream>()
  nameWithType: ObjectExtensions.DeepClone<TextStream>()
  fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.TextStream>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of TextStream)()
  fullName.vb: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.TextStream)()
  name.vb: DeepClone(Of TextStream)()
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone<TextStream>
    nameWithType: ObjectExtensions.DeepClone<TextStream>
    fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.TextStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone(Of TextStream)
    nameWithType: ObjectExtensions.DeepClone(Of TextStream)
    fullName: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.TextStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions.DeepClone``1(``0)
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions
  commentId: T:ObjectExtensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: ObjectExtensions
- uid: AutoCheck.Core.Connectors.TextStream.#ctor*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.#ctor
  name: TextStream
  nameWithType: TextStream.TextStream
  fullName: AutoCheck.Core.Connectors.TextStream.TextStream
- uid: AutoCheck.Core.Connectors.Base.Dispose
  commentId: M:AutoCheck.Core.Connectors.Base.Dispose
  parent: AutoCheck.Core.Connectors.Base
  name: Dispose()
  nameWithType: Base.Dispose()
  fullName: AutoCheck.Core.Connectors.Base.Dispose()
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.TextStream.Dispose*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.Dispose
  name: Dispose
  nameWithType: TextStream.Dispose
  fullName: AutoCheck.Core.Connectors.TextStream.Dispose
- uid: AutoCheck.Core.Connectors.TextStream.Find*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.Find
  name: Find
  nameWithType: TextStream.Find
  fullName: AutoCheck.Core.Connectors.TextStream.Find
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutoCheck.Core.Connectors.TextStream.Substring*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.Substring
  name: Substring
  nameWithType: TextStream.Substring
  fullName: AutoCheck.Core.Connectors.TextStream.Substring
- uid: AutoCheck.Core.Connectors.TextStream.Replace*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.Replace
  name: Replace
  nameWithType: TextStream.Replace
  fullName: AutoCheck.Core.Connectors.TextStream.Replace
- uid: AutoCheck.Core.Connectors.TextStream.Count*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.Count
  name: Count
  nameWithType: TextStream.Count
  fullName: AutoCheck.Core.Connectors.TextStream.Count
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AutoCheck.Core.Connectors.TextStream.DirectoryPath*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.DirectoryPath
  name: DirectoryPath
  nameWithType: TextStream.DirectoryPath
  fullName: AutoCheck.Core.Connectors.TextStream.DirectoryPath
- uid: AutoCheck.Core.Connectors.TextStream.DirectoryName*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.DirectoryName
  name: DirectoryName
  nameWithType: TextStream.DirectoryName
  fullName: AutoCheck.Core.Connectors.TextStream.DirectoryName
- uid: AutoCheck.Core.Connectors.TextStream.FileName*
  commentId: Overload:AutoCheck.Core.Connectors.TextStream.FileName
  name: FileName
  nameWithType: TextStream.FileName
  fullName: AutoCheck.Core.Connectors.TextStream.FileName
