### YamlMime:ManagedReference
items:
- uid: AutomatedAssignmentValidator.Checkers.Odoo
  commentId: T:AutomatedAssignmentValidator.Checkers.Odoo
  id: Odoo
  parent: AutomatedAssignmentValidator.Checkers
  children:
  - AutomatedAssignmentValidator.Checkers.Odoo.#ctor(System.Int32,System.String,System.String,System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Odoo.#ctor(System.String,System.String,System.String,System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  - AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  - AutomatedAssignmentValidator.Checkers.Odoo.CompanyID
  - AutomatedAssignmentValidator.Checkers.Odoo.CompanyName
  - AutomatedAssignmentValidator.Checkers.Odoo.Connector
  langs:
  - csharp
  - vb
  name: Odoo
  nameWithType: Odoo
  fullName: AutomatedAssignmentValidator.Checkers.Odoo
  type: Class
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Odoo
    path: ../checkers/Odoo.cs
    startLine: 11
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nAllows data validations over an Odoo instance.\n"
  example: []
  syntax:
    content: 'public class Odoo : Postgres'
    content.vb: >-
      Public Class Odoo

          Inherits Postgres
  inheritance:
  - System.Object
  - AutomatedAssignmentValidator.Core.Checker
  - AutomatedAssignmentValidator.Checkers.Postgres
  inheritedMembers:
  - AutomatedAssignmentValidator.Checkers.Postgres.Host
  - AutomatedAssignmentValidator.Checkers.Postgres.Name
  - AutomatedAssignmentValidator.Checkers.Postgres.Student
  - AutomatedAssignmentValidator.Checkers.Postgres.Dispose
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists(System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Char,System.Collections.Generic.Dictionary{System.String,System.Object})
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,System.Char)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)
  - AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Char,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutomatedAssignmentValidator.Checkers.Odoo.Connector
  commentId: P:AutomatedAssignmentValidator.Checkers.Odoo.Connector
  id: Connector
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: Connector
  nameWithType: Odoo.Connector
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.Connector
  type: Property
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: Connector
    path: ../checkers/Odoo.cs
    startLine: 16
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nThe main connector, can be used to perform direct operations over the data source.\n"
  example: []
  syntax:
    content: public Odoo Connector { get; }
    parameters: []
    return:
      type: AutomatedAssignmentValidator.Connectors.Odoo
      description: ''
    content.vb: Public ReadOnly Property Connector As Odoo
  overload: AutomatedAssignmentValidator.Checkers.Odoo.Connector*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CompanyID
  commentId: P:AutomatedAssignmentValidator.Checkers.Odoo.CompanyID
  id: CompanyID
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CompanyID
  nameWithType: Odoo.CompanyID
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CompanyID
  type: Property
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CompanyID
    path: ../checkers/Odoo.cs
    startLine: 21
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nThe current company ID that will be used to acces and filter all the requested data.\n"
  example: []
  syntax:
    content: public int CompanyID { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: Public Property CompanyID As Integer
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CompanyID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CompanyName
  commentId: P:AutomatedAssignmentValidator.Checkers.Odoo.CompanyName
  id: CompanyName
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CompanyName
  nameWithType: Odoo.CompanyName
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CompanyName
  type: Property
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CompanyName
    path: ../checkers/Odoo.cs
    startLine: 34
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nThe current company name.\n"
  example: []
  syntax:
    content: public string CompanyName { get; set; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Property CompanyName As String
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CompanyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutomatedAssignmentValidator.Checkers.Odoo.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: Odoo(String, String, String, String, String)
  nameWithType: Odoo.Odoo(String, String, String, String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.Odoo(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: .ctor
    path: ../checkers/Odoo.cs
    startLine: 51
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCreates a new checker instance.\n"
  example: []
  syntax:
    content: public Odoo(string companyName, string host, string database, string username, string password)
    parameters:
    - id: companyName
      type: System.String
    - id: host
      type: System.String
      description: Host address in order to connect with the running PostgreSQL service, wich contains the Odoo database.
    - id: database
      type: System.String
      description: The Odoo database name.
    - id: username
      type: System.String
      description: The Odoo database username, which will be used to perform operations.
    - id: password
      type: System.String
      description: The Odoo database password, which will be used to perform operations.
    content.vb: Public Sub New(companyName As String, host As String, database As String, username As String, password As String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomatedAssignmentValidator.Checkers.Odoo.#ctor(System.Int32,System.String,System.String,System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.#ctor(System.Int32,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String,System.String,System.String)'
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: Odoo(Int32, String, String, String, String)
  nameWithType: Odoo.Odoo(Int32, String, String, String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.Odoo(System.Int32, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: .ctor
    path: ../checkers/Odoo.cs
    startLine: 63
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCreates a new checker instance.\n"
  example: []
  syntax:
    content: public Odoo(int companyID, string host, string database, string username, string password)
    parameters:
    - id: companyID
      type: System.Int32
    - id: host
      type: System.String
      description: Host address in order to connect with the running PostgreSQL service, wich contains the Odoo database.
    - id: database
      type: System.String
      description: The Odoo database name.
    - id: username
      type: System.String
      description: The Odoo database username, which will be used to perform operations.
    - id: password
      type: System.String
      description: The Odoo database password, which will be used to perform operations.
    content.vb: Public Sub New(companyID As Integer, host As String, database As String, username As String, password As String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CheckIfCompanyMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfCompanyMatchesData(Int32, Dictionary<String, Object>)
  nameWithType: Odoo.CheckIfCompanyMatchesData(Int32, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfCompanyMatchesData
    path: ../checkers/Odoo.cs
    startLine: 72
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given company data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfCompanyMatchesData(int companyID, Dictionary<string, object> expectedFields)
    parameters:
    - id: companyID
      type: System.Int32
      description: The company ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfCompanyMatchesData(companyID As Integer, expectedFields As Dictionary(Of String, Object)) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData*
  nameWithType.vb: Odoo.CheckIfCompanyMatchesData(Int32, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfCompanyMatchesData(Int32, Dictionary(Of String, Object))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CheckIfProviderMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfProviderMatchesData(Int32, Dictionary<String, Object>)
  nameWithType: Odoo.CheckIfProviderMatchesData(Int32, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfProviderMatchesData
    path: ../checkers/Odoo.cs
    startLine: 89
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given provider data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfProviderMatchesData(int providerID, Dictionary<string, object> expectedFields)
    parameters:
    - id: providerID
      type: System.Int32
      description: The provider ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfProviderMatchesData(providerID As Integer, expectedFields As Dictionary(Of String, Object)) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData*
  nameWithType.vb: Odoo.CheckIfProviderMatchesData(Int32, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfProviderMatchesData(Int32, Dictionary(Of String, Object))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfProductMatchesData(Int32, Dictionary<String, Object>)
  nameWithType: Odoo.CheckIfProductMatchesData(Int32, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfProductMatchesData
    path: ../checkers/Odoo.cs
    startLine: 106
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given product data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfProductMatchesData(int templateID, Dictionary<string, object> expectedFields)
    parameters:
    - id: templateID
      type: System.Int32
      description: The product template ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfProductMatchesData(templateID As Integer, expectedFields As Dictionary(Of String, Object)) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData*
  nameWithType.vb: Odoo.CheckIfProductMatchesData(Int32, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfProductMatchesData(Int32, Dictionary(Of String, Object))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  id: CheckIfProductMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfProductMatchesData(Int32, Dictionary<String, Object>, String[])
  nameWithType: Odoo.CheckIfProductMatchesData(Int32, Dictionary<String, Object>, String[])
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String[])
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfProductMatchesData
    path: ../checkers/Odoo.cs
    startLine: 116
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given product data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfProductMatchesData(int templateID, Dictionary<string, object> expectedFields, string[] expectedAttributeValues)
    parameters:
    - id: templateID
      type: System.Int32
      description: The product template ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedAttributeValues
      type: System.String[]
      description: The expected attribute values (a single attribute is supported).
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfProductMatchesData(templateID As Integer, expectedFields As Dictionary(Of String, Object), expectedAttributeValues As String()) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData*
  nameWithType.vb: Odoo.CheckIfProductMatchesData(Int32, Dictionary(Of String, Object), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String())
  name.vb: CheckIfProductMatchesData(Int32, Dictionary(Of String, Object), String())
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: CheckIfPurchaseMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfPurchaseMatchesData(Int32, Dictionary<String, Object>, Dictionary<String, Int32>)
  nameWithType: Odoo.CheckIfPurchaseMatchesData(Int32, Dictionary<String, Object>, Dictionary<String, Int32>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Int32>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfPurchaseMatchesData
    path: ../checkers/Odoo.cs
    startLine: 137
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given purchase data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfPurchaseMatchesData(int purchaseID, Dictionary<string, object> expectedFields, Dictionary<string, int> expectedAttributeQty = null)
    parameters:
    - id: purchaseID
      type: System.Int32
      description: The purchase ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedAttributeQty
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: The expected amount of purchased product for each attribute value [name, qty] (sizes, colors, etc.).
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfPurchaseMatchesData(purchaseID As Integer, expectedFields As Dictionary(Of String, Object), expectedAttributeQty As Dictionary(Of String, Integer) = Nothing) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData*
  nameWithType.vb: Odoo.CheckIfPurchaseMatchesData(Int32, Dictionary(Of String, Object), Dictionary(Of String, Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Int32))
  name.vb: CheckIfPurchaseMatchesData(Int32, Dictionary(Of String, Object), Dictionary(Of String, Int32))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: CheckIfStockMovementMatchesData(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfStockMovementMatchesData(String, Boolean, Dictionary<String, Object>, Dictionary<String, Int32>)
  nameWithType: Odoo.CheckIfStockMovementMatchesData(String, Boolean, Dictionary<String, Object>, Dictionary<String, Int32>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData(System.String, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Int32>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfStockMovementMatchesData
    path: ../checkers/Odoo.cs
    startLine: 159
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given order data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfStockMovementMatchesData(string orderCode, bool isReturn, Dictionary<string, object> expectedFields, Dictionary<string, int> expectedAttributeQty = null)
    parameters:
    - id: orderCode
      type: System.String
      description: The order code that will be matched.
    - id: isReturn
      type: System.Boolean
      description: If true, the order must be treated as a return.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedAttributeQty
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: The expected amount of purchased product for each attribute value [name, qty] (sizes, colors, etc.).
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfStockMovementMatchesData(orderCode As String, isReturn As Boolean, expectedFields As Dictionary(Of String, Object), expectedAttributeQty As Dictionary(Of String, Integer) = Nothing) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData*
  nameWithType.vb: Odoo.CheckIfStockMovementMatchesData(String, Boolean, Dictionary(Of String, Object), Dictionary(Of String, Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData(System.String, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Int32))
  name.vb: CheckIfStockMovementMatchesData(String, Boolean, Dictionary(Of String, Object), Dictionary(Of String, Int32))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: CheckIfScrappedStockMatchesData(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfScrappedStockMatchesData(Dictionary<String, Object>, Dictionary<String, Int32>)
  nameWithType: Odoo.CheckIfScrappedStockMatchesData(Dictionary<String, Object>, Dictionary<String, Int32>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData(System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Int32>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfScrappedStockMatchesData
    path: ../checkers/Odoo.cs
    startLine: 178
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given scrapped stock movement data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfScrappedStockMatchesData(Dictionary<string, object> expectedFields, Dictionary<string, int> expectedAttributeQty = null)
    parameters:
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedAttributeQty
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: The expected amount of purchased product for each attribute value [name, qty] (sizes, colors, etc.).
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfScrappedStockMatchesData(expectedFields As Dictionary(Of String, Object), expectedAttributeQty As Dictionary(Of String, Integer) = Nothing) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData*
  nameWithType.vb: Odoo.CheckIfScrappedStockMatchesData(Dictionary(Of String, Object), Dictionary(Of String, Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Int32))
  name.vb: CheckIfScrappedStockMatchesData(Dictionary(Of String, Object), Dictionary(Of String, Int32))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CheckIfInvoiceMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfInvoiceMatchesData(String, Dictionary<String, Object>)
  nameWithType: Odoo.CheckIfInvoiceMatchesData(String, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfInvoiceMatchesData
    path: ../checkers/Odoo.cs
    startLine: 197
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given invoice data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfInvoiceMatchesData(string orderCode, Dictionary<string, object> expectedFields)
    parameters:
    - id: orderCode
      type: System.String
      description: The order code that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfInvoiceMatchesData(orderCode As String, expectedFields As Dictionary(Of String, Object)) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData*
  nameWithType.vb: Odoo.CheckIfInvoiceMatchesData(String, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfInvoiceMatchesData(String, Dictionary(Of String, Object))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: CheckIfPosSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfPosSaleMatchesData(Int32, Dictionary<String, Object>, Dictionary<String, Int32>)
  nameWithType: Odoo.CheckIfPosSaleMatchesData(Int32, Dictionary<String, Object>, Dictionary<String, Int32>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Int32>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfPosSaleMatchesData
    path: ../checkers/Odoo.cs
    startLine: 216
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given Point Of Sale sale data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfPosSaleMatchesData(int posSaleID, Dictionary<string, object> expectedFields, Dictionary<string, int> expectedAttributeQty = null)
    parameters:
    - id: posSaleID
      type: System.Int32
      description: The POS sale ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedAttributeQty
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: The expected amount of purchased product for each attribute value [name, qty] (sizes, colors, etc.).
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfPosSaleMatchesData(posSaleID As Integer, expectedFields As Dictionary(Of String, Object), expectedAttributeQty As Dictionary(Of String, Integer) = Nothing) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData*
  nameWithType.vb: Odoo.CheckIfPosSaleMatchesData(Int32, Dictionary(Of String, Object), Dictionary(Of String, Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Int32))
  name.vb: CheckIfPosSaleMatchesData(Int32, Dictionary(Of String, Object), Dictionary(Of String, Int32))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: CheckIfSaleMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfSaleMatchesData(Int32, Dictionary<String, Object>, Dictionary<String, Int32>)
  nameWithType: Odoo.CheckIfSaleMatchesData(Int32, Dictionary<String, Object>, Dictionary<String, Int32>)
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Int32>)
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfSaleMatchesData
    path: ../checkers/Odoo.cs
    startLine: 237
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given sale data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfSaleMatchesData(int saleID, Dictionary<string, object> expectedFields, Dictionary<string, int> expectedAttributeQty = null)
    parameters:
    - id: saleID
      type: System.Int32
      description: The sale ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedAttributeQty
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: The expected amount of purchased product for each attribute value [name, qty] (sizes, colors, etc.).
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfSaleMatchesData(saleID As Integer, expectedFields As Dictionary(Of String, Object), expectedAttributeQty As Dictionary(Of String, Integer) = Nothing) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData*
  nameWithType.vb: Odoo.CheckIfSaleMatchesData(Int32, Dictionary(Of String, Object), Dictionary(Of String, Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Int32))
  name.vb: CheckIfSaleMatchesData(Int32, Dictionary(Of String, Object), Dictionary(Of String, Int32))
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  commentId: M:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  id: CheckIfUserMatchesData(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])
  parent: AutomatedAssignmentValidator.Checkers.Odoo
  langs:
  - csharp
  - vb
  name: CheckIfUserMatchesData(Int32, Dictionary<String, Object>, String[])
  nameWithType: Odoo.CheckIfUserMatchesData(Int32, Dictionary<String, Object>, String[])
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData(System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>, System.String[])
  type: Method
  source:
    remote:
      path: checkers/Odoo.cs
      branch: v2
      repo: https://github.com/FherStk/AutomatedAssignmentValidator.git
    id: CheckIfUserMatchesData
    path: ../checkers/Odoo.cs
    startLine: 258
  assemblies:
  - AutomatedAssignmentValidator
  namespace: AutomatedAssignmentValidator.Checkers
  summary: "\nCompares if the given user data matches with the current one stored in the database.\n"
  example: []
  syntax:
    content: public List<string> CheckIfUserMatchesData(int userID, Dictionary<string, object> expectedFields, string[] expectedGroups = null)
    parameters:
    - id: userID
      type: System.Int32
      description: The user ID that will be matched.
    - id: expectedFields
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The expected data to match.
    - id: expectedGroups
      type: System.String[]
      description: The expected groups where the user should belongs.
    return:
      type: System.Collections.Generic.List{System.String}
      description: The list of errors found (the list will be empty it there&apos;s no errors).
    content.vb: Public Function CheckIfUserMatchesData(userID As Integer, expectedFields As Dictionary(Of String, Object), expectedGroups As String() = Nothing) As List(Of String)
  overload: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData*
  nameWithType.vb: Odoo.CheckIfUserMatchesData(Int32, Dictionary(Of String, Object), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData(System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String())
  name.vb: CheckIfUserMatchesData(Int32, Dictionary(Of String, Object), String())
references:
- uid: AutomatedAssignmentValidator.Checkers
  commentId: N:AutomatedAssignmentValidator.Checkers
  name: AutomatedAssignmentValidator.Checkers
  nameWithType: AutomatedAssignmentValidator.Checkers
  fullName: AutomatedAssignmentValidator.Checkers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutomatedAssignmentValidator.Core.Checker
  commentId: T:AutomatedAssignmentValidator.Core.Checker
  parent: AutomatedAssignmentValidator.Core
  name: Checker
  nameWithType: Checker
  fullName: AutomatedAssignmentValidator.Core.Checker
- uid: AutomatedAssignmentValidator.Checkers.Postgres
  commentId: T:AutomatedAssignmentValidator.Checkers.Postgres
  parent: AutomatedAssignmentValidator.Checkers
  name: Postgres
  nameWithType: Postgres
  fullName: AutomatedAssignmentValidator.Checkers.Postgres
- uid: AutomatedAssignmentValidator.Checkers.Postgres.Host
  commentId: P:AutomatedAssignmentValidator.Checkers.Postgres.Host
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  name: Host
  nameWithType: Postgres.Host
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.Host
- uid: AutomatedAssignmentValidator.Checkers.Postgres.Name
  commentId: P:AutomatedAssignmentValidator.Checkers.Postgres.Name
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  name: Name
  nameWithType: Postgres.Name
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.Name
- uid: AutomatedAssignmentValidator.Checkers.Postgres.Student
  commentId: P:AutomatedAssignmentValidator.Checkers.Postgres.Student
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  name: Student
  nameWithType: Postgres.Student
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.Student
- uid: AutomatedAssignmentValidator.Checkers.Postgres.Dispose
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.Dispose
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  name: Dispose()
  nameWithType: Postgres.Dispose()
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.Dispose()
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.Dispose
    name: Dispose
    nameWithType: Postgres.Dispose
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.Dispose
    name: Dispose
    nameWithType: Postgres.Dispose
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableMatchesPrivileges(String, String, String, String)
  nameWithType: Postgres.CheckIfTableMatchesPrivileges(String, String, String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)
    name: CheckIfTableMatchesPrivileges
    nameWithType: Postgres.CheckIfTableMatchesPrivileges
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)
    name: CheckIfTableMatchesPrivileges
    nameWithType: Postgres.CheckIfTableMatchesPrivileges
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesPrivileges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableContainsPrivileges(String, String, String, Char)
  nameWithType: Postgres.CheckIfTableContainsPrivileges(String, String, String, Char)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String, System.String, System.String, System.Char)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)
    name: CheckIfTableContainsPrivileges
    nameWithType: Postgres.CheckIfTableContainsPrivileges
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)
    name: CheckIfTableContainsPrivileges
    nameWithType: Postgres.CheckIfTableContainsPrivileges
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableContainsPrivileges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfSchemaMatchesPrivileges(String, String, String)
  nameWithType: Postgres.CheckIfSchemaMatchesPrivileges(String, String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String, System.String, System.String)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)
    name: CheckIfSchemaMatchesPrivileges
    nameWithType: Postgres.CheckIfSchemaMatchesPrivileges
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)
    name: CheckIfSchemaMatchesPrivileges
    nameWithType: Postgres.CheckIfSchemaMatchesPrivileges
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaMatchesPrivileges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfSchemaContainsPrivilege(String, String, Char)
  nameWithType: Postgres.CheckIfSchemaContainsPrivilege(String, String, Char)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String, System.String, System.Char)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)
    name: CheckIfSchemaContainsPrivilege
    nameWithType: Postgres.CheckIfSchemaContainsPrivilege
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)
    name: CheckIfSchemaContainsPrivilege
    nameWithType: Postgres.CheckIfSchemaContainsPrivilege
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSchemaContainsPrivilege
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckRoleMembership(String, String[])
  nameWithType: Postgres.CheckRoleMembership(String, String[])
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String, System.String[])
  nameWithType.vb: Postgres.CheckRoleMembership(String, String())
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String, System.String())
  name.vb: CheckRoleMembership(String, String())
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])
    name: CheckRoleMembership
    nameWithType: Postgres.CheckRoleMembership
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])
    name: CheckRoleMembership
    nameWithType: Postgres.CheckRoleMembership
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckRoleMembership
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckForeignKey(String, String, String, String, String, String)
  nameWithType: Postgres.CheckForeignKey(String, String, String, String, String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey(System.String, System.String, System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)
    name: CheckForeignKey
    nameWithType: Postgres.CheckForeignKey
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)
    name: CheckForeignKey
    nameWithType: Postgres.CheckForeignKey
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckForeignKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfEntryAdded(String, String, String, Int32)
  nameWithType: Postgres.CheckIfEntryAdded(String, String, String, Int32)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded(System.String, System.String, System.String, System.Int32)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)
    name: CheckIfEntryAdded
    nameWithType: Postgres.CheckIfEntryAdded
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)
    name: CheckIfEntryAdded
    nameWithType: Postgres.CheckIfEntryAdded
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfEntryRemoved(String, String, String, Int32)
  nameWithType: Postgres.CheckIfEntryRemoved(String, String, String, Int32)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved(System.String, System.String, System.String, System.Int32)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)
    name: CheckIfEntryRemoved
    nameWithType: Postgres.CheckIfEntryRemoved
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)
    name: CheckIfEntryRemoved
    nameWithType: Postgres.CheckIfEntryRemoved
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfEntryRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableMatchesData(DataTable, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfTableMatchesData(DataTable, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfTableMatchesData(DataTable, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfTableMatchesData(DataTable, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableMatchesData
    nameWithType: Postgres.CheckIfTableMatchesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableMatchesData
    nameWithType: Postgres.CheckIfTableMatchesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableMatchesData(String, String, String, Object, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfTableMatchesData(String, String, String, Object, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfTableMatchesData(String, String, String, Object, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfTableMatchesData(String, String, String, Object, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableMatchesData
    nameWithType: Postgres.CheckIfTableMatchesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableMatchesData
    nameWithType: Postgres.CheckIfTableMatchesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfSelectMatchesData(String, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfSelectMatchesData(String, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfSelectMatchesData(String, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfSelectMatchesData(String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfSelectMatchesData
    nameWithType: Postgres.CheckIfSelectMatchesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfSelectMatchesData
    nameWithType: Postgres.CheckIfSelectMatchesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfSelectMatchesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists(System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists(System.String,System.String)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableExists(String, String)
  nameWithType: Postgres.CheckIfTableExists(String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists(System.String, System.String)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists(System.String,System.String)
    name: CheckIfTableExists
    nameWithType: Postgres.CheckIfTableExists
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists(System.String,System.String)
    name: CheckIfTableExists
    nameWithType: Postgres.CheckIfTableExists
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfViewMatchesDefinition(String, String, String)
  nameWithType: Postgres.CheckIfViewMatchesDefinition(String, String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String, System.String, System.String)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)
    name: CheckIfViewMatchesDefinition
    nameWithType: Postgres.CheckIfViewMatchesDefinition
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)
    name: CheckIfViewMatchesDefinition
    nameWithType: Postgres.CheckIfViewMatchesDefinition
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfViewMatchesDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableInsertsData(String, String, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfTableInsertsData(String, String, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfTableInsertsData(String, String, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfTableInsertsData(String, String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableInsertsData
    nameWithType: Postgres.CheckIfTableInsertsData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableInsertsData
    nameWithType: Postgres.CheckIfTableInsertsData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableInsertsData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableUpdatesData(String, String, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfTableUpdatesData(String, String, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfTableUpdatesData(String, String, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfTableUpdatesData(String, String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableUpdatesData
    nameWithType: Postgres.CheckIfTableUpdatesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableUpdatesData
    nameWithType: Postgres.CheckIfTableUpdatesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableUpdatesData(String, String, String, Object, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfTableUpdatesData(String, String, String, Object, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfTableUpdatesData(String, String, String, Object, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfTableUpdatesData(String, String, String, Object, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableUpdatesData
    nameWithType: Postgres.CheckIfTableUpdatesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableUpdatesData
    nameWithType: Postgres.CheckIfTableUpdatesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Char,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Char,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableUpdatesData(String, String, String, Object, Char, Dictionary<String, Object>)
  nameWithType: Postgres.CheckIfTableUpdatesData(String, String, String, Object, Char, Dictionary<String, Object>)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, System.Char, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: Postgres.CheckIfTableUpdatesData(String, String, String, Object, Char, Dictionary(Of String, Object))
  fullName.vb: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, System.Char, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: CheckIfTableUpdatesData(String, String, String, Object, Char, Dictionary(Of String, Object))
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Char,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableUpdatesData
    nameWithType: Postgres.CheckIfTableUpdatesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Char,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: CheckIfTableUpdatesData
    nameWithType: Postgres.CheckIfTableUpdatesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableUpdatesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableDeletesData(String, String)
  nameWithType: Postgres.CheckIfTableDeletesData(String, String)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String, System.String)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)
    name: CheckIfTableDeletesData
    nameWithType: Postgres.CheckIfTableDeletesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)
    name: CheckIfTableDeletesData
    nameWithType: Postgres.CheckIfTableDeletesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,System.Char)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,System.Char)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableDeletesData(String, String, String, Object, Char)
  nameWithType: Postgres.CheckIfTableDeletesData(String, String, String, Object, Char)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String, System.String, System.String, System.Object, System.Char)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,System.Char)
    name: CheckIfTableDeletesData
    nameWithType: Postgres.CheckIfTableDeletesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,System.Char)
    name: CheckIfTableDeletesData
    nameWithType: Postgres.CheckIfTableDeletesData
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableDeletesData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableMatchesAmountOfRegisters(String, String, Int32)
  nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, Int32)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.Int32)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)
    name: CheckIfTableMatchesAmountOfRegisters
    nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)
    name: CheckIfTableMatchesAmountOfRegisters
    nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Int32)
  nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Int32)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.String, System.Object, System.Int32)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)
    name: CheckIfTableMatchesAmountOfRegisters
    nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)
    name: CheckIfTableMatchesAmountOfRegisters
    nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Char,System.Int32)
  commentId: M:AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Char,System.Int32)
  parent: AutomatedAssignmentValidator.Checkers.Postgres
  isExternal: true
  name: CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Char, Int32)
  nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Char, Int32)
  fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.String, System.Object, System.Char, System.Int32)
  spec.csharp:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Char,System.Int32)
    name: CheckIfTableMatchesAmountOfRegisters
    nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Char,System.Int32)
    name: CheckIfTableMatchesAmountOfRegisters
    nameWithType: Postgres.CheckIfTableMatchesAmountOfRegisters
    fullName: AutomatedAssignmentValidator.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutomatedAssignmentValidator.Core
  commentId: N:AutomatedAssignmentValidator.Core
  name: AutomatedAssignmentValidator.Core
  nameWithType: AutomatedAssignmentValidator.Core
  fullName: AutomatedAssignmentValidator.Core
- uid: AutomatedAssignmentValidator.Checkers.Odoo.Connector*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.Connector
  name: Connector
  nameWithType: Odoo.Connector
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.Connector
- uid: AutomatedAssignmentValidator.Connectors.Odoo
  commentId: T:AutomatedAssignmentValidator.Connectors.Odoo
  parent: AutomatedAssignmentValidator.Connectors
  name: Odoo
  nameWithType: Odoo
  fullName: AutomatedAssignmentValidator.Connectors.Odoo
- uid: AutomatedAssignmentValidator.Connectors
  commentId: N:AutomatedAssignmentValidator.Connectors
  name: AutomatedAssignmentValidator.Connectors
  nameWithType: AutomatedAssignmentValidator.Connectors
  fullName: AutomatedAssignmentValidator.Connectors
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CompanyID*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CompanyID
  name: CompanyID
  nameWithType: Odoo.CompanyID
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CompanyID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CompanyName*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CompanyName
  name: CompanyName
  nameWithType: Odoo.CompanyName
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CompanyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutomatedAssignmentValidator.Checkers.Odoo.#ctor*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.#ctor
  name: Odoo
  nameWithType: Odoo.Odoo
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.Odoo
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData
  name: CheckIfCompanyMatchesData
  nameWithType: Odoo.CheckIfCompanyMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfCompanyMatchesData
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData
  name: CheckIfProviderMatchesData
  nameWithType: Odoo.CheckIfProviderMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProviderMatchesData
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData
  name: CheckIfProductMatchesData
  nameWithType: Odoo.CheckIfProductMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfProductMatchesData
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData
  name: CheckIfPurchaseMatchesData
  nameWithType: Odoo.CheckIfPurchaseMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPurchaseMatchesData
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData
  name: CheckIfStockMovementMatchesData
  nameWithType: Odoo.CheckIfStockMovementMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfStockMovementMatchesData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData
  name: CheckIfScrappedStockMatchesData
  nameWithType: Odoo.CheckIfScrappedStockMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfScrappedStockMatchesData
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData
  name: CheckIfInvoiceMatchesData
  nameWithType: Odoo.CheckIfInvoiceMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfInvoiceMatchesData
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData
  name: CheckIfPosSaleMatchesData
  nameWithType: Odoo.CheckIfPosSaleMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfPosSaleMatchesData
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData
  name: CheckIfSaleMatchesData
  nameWithType: Odoo.CheckIfSaleMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfSaleMatchesData
- uid: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData*
  commentId: Overload:AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData
  name: CheckIfUserMatchesData
  nameWithType: Odoo.CheckIfUserMatchesData
  fullName: AutomatedAssignmentValidator.Checkers.Odoo.CheckIfUserMatchesData
