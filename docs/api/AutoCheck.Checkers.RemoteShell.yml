### YamlMime:ManagedReference
items:
- uid: AutoCheck.Checkers.RemoteShell
  commentId: T:AutoCheck.Checkers.RemoteShell
  id: RemoteShell
  parent: AutoCheck.Checkers
  children:
  - AutoCheck.Checkers.RemoteShell.#ctor(System.String,System.String,System.String,System.Int32)
  - AutoCheck.Checkers.RemoteShell.Connector
  langs:
  - csharp
  - vb
  name: RemoteShell
  nameWithType: RemoteShell
  fullName: AutoCheck.Checkers.RemoteShell
  type: Class
  source:
    remote:
      path: checkers/RemoteShell.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: RemoteShell
    path: ../checkers/RemoteShell.cs
    startLine: 25
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Checkers
  summary: "\nAllows data validations over a local shell (running local commands).\n"
  example: []
  syntax:
    content: 'public class RemoteShell : LocalShell, IDisposable'
    content.vb: >-
      Public Class RemoteShell
          Inherits LocalShell
          Implements IDisposable
  inheritance:
  - System.Object
  - AutoCheck.Core.Checker
  - AutoCheck.Checkers.LocalShell
  implements:
  - System.IDisposable
  inheritedMembers:
  - AutoCheck.Checkers.LocalShell.Dispose
  - AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)
  - AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)
  - AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
  - AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
  - AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)
  - AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Checkers.RemoteShell.Connector
  commentId: P:AutoCheck.Checkers.RemoteShell.Connector
  id: Connector
  parent: AutoCheck.Checkers.RemoteShell
  langs:
  - csharp
  - vb
  name: Connector
  nameWithType: RemoteShell.Connector
  fullName: AutoCheck.Checkers.RemoteShell.Connector
  type: Property
  source:
    remote:
      path: checkers/RemoteShell.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: Connector
    path: ../checkers/RemoteShell.cs
    startLine: 32
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Checkers
  summary: "\nThe main connector, can be used to perform direct operations over the data source.\n"
  example: []
  syntax:
    content: public RemoteShell Connector { get; }
    parameters: []
    return:
      type: AutoCheck.Connectors.RemoteShell
      description: ''
    content.vb: Public ReadOnly Property Connector As RemoteShell
  overload: AutoCheck.Checkers.RemoteShell.Connector*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutoCheck.Checkers.RemoteShell.#ctor(System.String,System.String,System.String,System.Int32)
  commentId: M:AutoCheck.Checkers.RemoteShell.#ctor(System.String,System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.String,System.Int32)'
  parent: AutoCheck.Checkers.RemoteShell
  langs:
  - csharp
  - vb
  name: RemoteShell(String, String, String, Int32)
  nameWithType: RemoteShell.RemoteShell(String, String, String, Int32)
  fullName: AutoCheck.Checkers.RemoteShell.RemoteShell(System.String, System.String, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: checkers/RemoteShell.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../checkers/RemoteShell.cs
    startLine: 41
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Checkers
  summary: "\nCreates a new checker instance.\n"
  example: []
  syntax:
    content: public RemoteShell(string host, string username, string password, int port = 22)
    parameters:
    - id: host
      type: System.String
      description: Host address where the command will be run.
    - id: username
      type: System.String
      description: The remote machine&apos;s username which one will be used to login.
    - id: password
      type: System.String
      description: The remote machine&apos;s password which one will be used to login.
    - id: port
      type: System.Int32
      description: The remote machine&apos;s port where SSH is listening to.
    content.vb: Public Sub New(host As String, username As String, password As String, port As Integer = 22)
  overload: AutoCheck.Checkers.RemoteShell.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Checkers
  commentId: N:AutoCheck.Checkers
  name: AutoCheck.Checkers
  nameWithType: AutoCheck.Checkers
  fullName: AutoCheck.Checkers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Checker
  commentId: T:AutoCheck.Core.Checker
  parent: AutoCheck.Core
  name: Checker
  nameWithType: Checker
  fullName: AutoCheck.Core.Checker
- uid: AutoCheck.Checkers.LocalShell
  commentId: T:AutoCheck.Checkers.LocalShell
  parent: AutoCheck.Checkers
  name: LocalShell
  nameWithType: LocalShell
  fullName: AutoCheck.Checkers.LocalShell
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: AutoCheck.Checkers.LocalShell.Dispose
  commentId: M:AutoCheck.Checkers.LocalShell.Dispose
  parent: AutoCheck.Checkers.LocalShell
  name: Dispose()
  nameWithType: LocalShell.Dispose()
  fullName: AutoCheck.Checkers.LocalShell.Dispose()
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.Dispose
    name: Dispose
    nameWithType: LocalShell.Dispose
    fullName: AutoCheck.Checkers.LocalShell.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.Dispose
    name: Dispose
    nameWithType: LocalShell.Dispose
    fullName: AutoCheck.Checkers.LocalShell.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)
  commentId: M:AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)
  parent: AutoCheck.Checkers.LocalShell
  isExternal: true
  name: CheckIfFolderExists(String, String, Boolean)
  nameWithType: LocalShell.CheckIfFolderExists(String, String, Boolean)
  fullName: AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)
    name: CheckIfFolderExists
    nameWithType: LocalShell.CheckIfFolderExists
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFolderExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)
    name: CheckIfFolderExists
    nameWithType: LocalShell.CheckIfFolderExists
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFolderExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)
  commentId: M:AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)
  parent: AutoCheck.Checkers.LocalShell
  isExternal: true
  name: CheckIfFileExists(String, String, Boolean)
  nameWithType: LocalShell.CheckIfFileExists(String, String, Boolean)
  fullName: AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)
    name: CheckIfFileExists
    nameWithType: LocalShell.CheckIfFileExists
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFileExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)
    name: CheckIfFileExists
    nameWithType: LocalShell.CheckIfFileExists
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFileExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
  commentId: M:AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
  parent: AutoCheck.Checkers.LocalShell
  isExternal: true
  name: CheckIfFoldersMatchesAmount(String, Int32, Boolean, Connector.Operator)
  nameWithType: LocalShell.CheckIfFoldersMatchesAmount(String, Int32, Boolean, Connector.Operator)
  fullName: AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String, System.Int32, System.Boolean, AutoCheck.Core.Connector.Operator)
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
    name: CheckIfFoldersMatchesAmount
    nameWithType: LocalShell.CheckIfFoldersMatchesAmount
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
    name: CheckIfFoldersMatchesAmount
    nameWithType: LocalShell.CheckIfFoldersMatchesAmount
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
  commentId: M:AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
  parent: AutoCheck.Checkers.LocalShell
  isExternal: true
  name: CheckIfFilesMatchesAmount(String, Int32, Boolean, Connector.Operator)
  nameWithType: LocalShell.CheckIfFilesMatchesAmount(String, Int32, Boolean, Connector.Operator)
  fullName: AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String, System.Int32, System.Boolean, AutoCheck.Core.Connector.Operator)
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
    name: CheckIfFilesMatchesAmount
    nameWithType: LocalShell.CheckIfFilesMatchesAmount
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)
    name: CheckIfFilesMatchesAmount
    nameWithType: LocalShell.CheckIfFilesMatchesAmount
    fullName: AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)
  commentId: M:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)
  parent: AutoCheck.Checkers.LocalShell
  isExternal: true
  name: CheckIfCommandMatchesResult(String, Int32, Connector.Operator)
  nameWithType: LocalShell.CheckIfCommandMatchesResult(String, Int32, Connector.Operator)
  fullName: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String, System.Int32, AutoCheck.Core.Connector.Operator)
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)
    name: CheckIfCommandMatchesResult
    nameWithType: LocalShell.CheckIfCommandMatchesResult
    fullName: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)
    name: CheckIfCommandMatchesResult
    nameWithType: LocalShell.CheckIfCommandMatchesResult
    fullName: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)
  commentId: M:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)
  parent: AutoCheck.Checkers.LocalShell
  isExternal: true
  name: CheckIfCommandMatchesResult(String, String, Int32, Connector.Operator)
  nameWithType: LocalShell.CheckIfCommandMatchesResult(String, String, Int32, Connector.Operator)
  fullName: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String, System.String, System.Int32, AutoCheck.Core.Connector.Operator)
  spec.csharp:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)
    name: CheckIfCommandMatchesResult
    nameWithType: LocalShell.CheckIfCommandMatchesResult
    fullName: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)
    name: CheckIfCommandMatchesResult
    nameWithType: LocalShell.CheckIfCommandMatchesResult
    fullName: AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: AutoCheck.Core.Connector.Operator
    name: Connector.Operator
    nameWithType: Connector.Operator
    fullName: AutoCheck.Core.Connector.Operator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: AutoCheck.Checkers.RemoteShell.Connector*
  commentId: Overload:AutoCheck.Checkers.RemoteShell.Connector
  name: Connector
  nameWithType: RemoteShell.Connector
  fullName: AutoCheck.Checkers.RemoteShell.Connector
- uid: AutoCheck.Connectors.RemoteShell
  commentId: T:AutoCheck.Connectors.RemoteShell
  parent: AutoCheck.Connectors
  name: RemoteShell
  nameWithType: RemoteShell
  fullName: AutoCheck.Connectors.RemoteShell
- uid: AutoCheck.Connectors
  commentId: N:AutoCheck.Connectors
  name: AutoCheck.Connectors
  nameWithType: AutoCheck.Connectors
  fullName: AutoCheck.Connectors
- uid: AutoCheck.Checkers.RemoteShell.#ctor*
  commentId: Overload:AutoCheck.Checkers.RemoteShell.#ctor
  name: RemoteShell
  nameWithType: RemoteShell.RemoteShell
  fullName: AutoCheck.Checkers.RemoteShell.RemoteShell
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
