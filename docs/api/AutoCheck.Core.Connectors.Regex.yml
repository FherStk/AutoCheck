### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Connectors.Regex
  commentId: T:AutoCheck.Core.Connectors.Regex
  id: Regex
  parent: AutoCheck.Core.Connectors
  children:
  - AutoCheck.Core.Connectors.Regex.#ctor
  - AutoCheck.Core.Connectors.Regex.Count(System.String,System.String)
  - AutoCheck.Core.Connectors.Regex.Dispose
  - AutoCheck.Core.Connectors.Regex.Find(System.String,System.String)
  langs:
  - csharp
  - vb
  name: Regex
  nameWithType: Regex
  fullName: AutoCheck.Core.Connectors.Regex
  type: Class
  source:
    remote:
      path: core/connectors/Regex.cs
      branch: v2.14.1
      repo: https://github.com/FherStk/AutoCheck.git
    id: Regex
    path: ../core/connectors/Regex.cs
    startLine: 29
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nAllows data manipulation using regular expressions\n"
  example: []
  syntax:
    content: 'public class Regex : Base'
    content.vb: >-
      Public Class Regex
          Inherits Base
  inheritance:
  - System.Object
  - AutoCheck.Core.Connectors.Base
  inheritedMembers:
  - AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  extensionMethods:
  - AutoCheck.Core.Connectors.Regex.ObjectExtensions.DeepClone``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Connectors.Regex.#ctor
  commentId: M:AutoCheck.Core.Connectors.Regex.#ctor
  id: '#ctor'
  parent: AutoCheck.Core.Connectors.Regex
  langs:
  - csharp
  - vb
  name: Regex()
  nameWithType: Regex.Regex()
  fullName: AutoCheck.Core.Connectors.Regex.Regex()
  type: Constructor
  source:
    remote:
      path: core/connectors/Regex.cs
      branch: v2.14.1
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/connectors/Regex.cs
    startLine: 34
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nCreates a new connector instance.\n"
  example: []
  syntax:
    content: public Regex()
    content.vb: Public Sub New
  overload: AutoCheck.Core.Connectors.Regex.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Regex.Dispose
  commentId: M:AutoCheck.Core.Connectors.Regex.Dispose
  id: Dispose
  parent: AutoCheck.Core.Connectors.Regex
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Regex.Dispose()
  fullName: AutoCheck.Core.Connectors.Regex.Dispose()
  type: Method
  source:
    remote:
      path: core/connectors/Regex.cs
      branch: v2.14.1
      repo: https://github.com/FherStk/AutoCheck.git
    id: Dispose
    path: ../core/connectors/Regex.cs
    startLine: 40
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nDisposes the object releasing its unmanaged properties.\n"
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: AutoCheck.Core.Connectors.Base.Dispose
  overload: AutoCheck.Core.Connectors.Regex.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: AutoCheck.Core.Connectors.Regex.Find(System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.Regex.Find(System.String,System.String)
  id: Find(System.String,System.String)
  parent: AutoCheck.Core.Connectors.Regex
  langs:
  - csharp
  - vb
  name: Find(String, String)
  nameWithType: Regex.Find(String, String)
  fullName: AutoCheck.Core.Connectors.Regex.Find(System.String, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Regex.cs
      branch: v2.14.1
      repo: https://github.com/FherStk/AutoCheck.git
    id: Find
    path: ../core/connectors/Regex.cs
    startLine: 49
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGets the matches found within the given text using a regular expression.\n"
  example: []
  syntax:
    content: public string[] Find(string content, string regex)
    parameters:
    - id: content
      type: System.String
      description: The content where the regex will be applied to.
    - id: regex
      type: System.String
      description: The regular expression which will be used to search the content.
    return:
      type: System.String[]
      description: A set of matches.
    content.vb: Public Function Find(content As String, regex As String) As String()
  overload: AutoCheck.Core.Connectors.Regex.Find*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Connectors.Regex.Count(System.String,System.String)
  commentId: M:AutoCheck.Core.Connectors.Regex.Count(System.String,System.String)
  id: Count(System.String,System.String)
  parent: AutoCheck.Core.Connectors.Regex
  langs:
  - csharp
  - vb
  name: Count(String, String)
  nameWithType: Regex.Count(String, String)
  fullName: AutoCheck.Core.Connectors.Regex.Count(System.String, System.String)
  type: Method
  source:
    remote:
      path: core/connectors/Regex.cs
      branch: v2.14.1
      repo: https://github.com/FherStk/AutoCheck.git
    id: Count
    path: ../core/connectors/Regex.cs
    startLine: 64
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core.Connectors
  summary: "\nGets how many matches can be found within the given text using a regular expression.\n"
  example: []
  syntax:
    content: public int Count(string content, string regex)
    parameters:
    - id: content
      type: System.String
      description: The content where the regex will be applied to.
    - id: regex
      type: System.String
      description: The regular expression which will be used to search the content.
    return:
      type: System.Int32
      description: The number of matches.
    content.vb: Public Function Count(content As String, regex As String) As Integer
  overload: AutoCheck.Core.Connectors.Regex.Count*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Core.Connectors
  commentId: N:AutoCheck.Core.Connectors
  name: AutoCheck.Core.Connectors
  nameWithType: AutoCheck.Core.Connectors
  fullName: AutoCheck.Core.Connectors
- uid: System.Object
  commentId: '!:System.Object'
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Connectors.Base
  commentId: T:AutoCheck.Core.Connectors.Base
  parent: AutoCheck.Core.Connectors
  name: Base
  nameWithType: Base
  fullName: AutoCheck.Core.Connectors.Base
- uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  commentId: M:AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
  parent: AutoCheck.Core.Connectors.Base
  isExternal: true
  name: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  nameWithType: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action<String>)
  fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action<System.String>)
  nameWithType.vb: Base.ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  fullName.vb: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS, System.String, System.String, System.String, System.Int32, System.String, Action(Of System.String))
  name.vb: ProcessRemoteFile(Utils.OS, String, String, String, Int32, String, Action(Of String))
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
    name: ProcessRemoteFile
    nameWithType: Base.ProcessRemoteFile
    fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoCheck.Core.Utils.OS
    name: Utils.OS
    nameWithType: Utils.OS
    fullName: AutoCheck.Core.Utils.OS
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.ProcessRemoteFile(AutoCheck.Core.Utils.OS,System.String,System.String,System.String,System.Int32,System.String,Action{System.String})
    name: ProcessRemoteFile
    nameWithType: Base.ProcessRemoteFile
    fullName: AutoCheck.Core.Connectors.Base.ProcessRemoteFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutoCheck.Core.Utils.OS
    name: Utils.OS
    nameWithType: Utils.OS
    fullName: AutoCheck.Core.Utils.OS
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.Regex.ObjectExtensions.DeepClone``1
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  parent: ObjectExtensions
  definition: ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<Regex>()
  nameWithType: ObjectExtensions.DeepClone<Regex>()
  fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.Regex>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of Regex)()
  fullName.vb: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.Regex)()
  name.vb: DeepClone(Of Regex)()
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone<Regex>
    nameWithType: ObjectExtensions.DeepClone<Regex>
    fullName: ObjectExtensions.DeepClone<AutoCheck.Core.Connectors.Regex>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1
    name: DeepClone(Of Regex)
    nameWithType: ObjectExtensions.DeepClone(Of Regex)
    fullName: ObjectExtensions.DeepClone(Of AutoCheck.Core.Connectors.Regex)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions.DeepClone``1(``0)
  commentId: M:ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ObjectExtensions
  commentId: T:ObjectExtensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: ObjectExtensions
- uid: AutoCheck.Core.Connectors.Regex.#ctor*
  commentId: Overload:AutoCheck.Core.Connectors.Regex.#ctor
  name: Regex
  nameWithType: Regex.Regex
  fullName: AutoCheck.Core.Connectors.Regex.Regex
- uid: AutoCheck.Core.Connectors.Base.Dispose
  commentId: M:AutoCheck.Core.Connectors.Base.Dispose
  parent: AutoCheck.Core.Connectors.Base
  name: Dispose()
  nameWithType: Base.Dispose()
  fullName: AutoCheck.Core.Connectors.Base.Dispose()
  spec.csharp:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutoCheck.Core.Connectors.Base.Dispose
    name: Dispose
    nameWithType: Base.Dispose
    fullName: AutoCheck.Core.Connectors.Base.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Core.Connectors.Regex.Dispose*
  commentId: Overload:AutoCheck.Core.Connectors.Regex.Dispose
  name: Dispose
  nameWithType: Regex.Dispose
  fullName: AutoCheck.Core.Connectors.Regex.Dispose
- uid: AutoCheck.Core.Connectors.Regex.Find*
  commentId: Overload:AutoCheck.Core.Connectors.Regex.Find
  name: Find
  nameWithType: Regex.Find
  fullName: AutoCheck.Core.Connectors.Regex.Find
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: AutoCheck.Core.Connectors.Regex.Count*
  commentId: Overload:AutoCheck.Core.Connectors.Regex.Count
  name: Count
  nameWithType: Regex.Count
  fullName: AutoCheck.Core.Connectors.Regex.Count
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
