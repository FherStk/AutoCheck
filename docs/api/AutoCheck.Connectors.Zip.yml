### YamlMime:ManagedReference
items:
- uid: AutoCheck.Connectors.Zip
  commentId: T:AutoCheck.Connectors.Zip
  id: Zip
  parent: AutoCheck.Connectors
  children:
  - AutoCheck.Connectors.Zip.ExtractFile(System.String,System.String)
  - AutoCheck.Connectors.Zip.ExtractFile(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Zip
  nameWithType: Zip
  fullName: AutoCheck.Connectors.Zip
  type: Class
  source:
    remote:
      path: connectors/Zip.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: Zip
    path: ../connectors/Zip.cs
    startLine: 8
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nAllows in/out operations and/or data validations with ZIP files.\n"
  example: []
  syntax:
    content: 'public class Zip : Connector'
    content.vb: >-
      Public Class Zip
          Inherits Connector
  inheritance:
  - System.Object
  - AutoCheck.Core.Connector
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Connectors.Zip.ExtractFile(System.String,System.String)
  commentId: M:AutoCheck.Connectors.Zip.ExtractFile(System.String,System.String)
  id: ExtractFile(System.String,System.String)
  parent: AutoCheck.Connectors.Zip
  langs:
  - csharp
  - vb
  name: ExtractFile(String, String)
  nameWithType: Zip.ExtractFile(String, String)
  fullName: AutoCheck.Connectors.Zip.ExtractFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: connectors/Zip.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: ExtractFile
    path: ../connectors/Zip.cs
    startLine: 14
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nExtracts a zip file into the current folder, so the extracted files will be in the same folder as the zip one.\n"
  example: []
  syntax:
    content: public static void ExtractFile(string zipPath, string password = null)
    parameters:
    - id: zipPath
      type: System.String
      description: ZIP file&apos;s path.
    - id: password
      type: System.String
      description: ZIP file&apos;s password.
    content.vb: Public Shared Sub ExtractFile(zipPath As String, password As String = Nothing)
  overload: AutoCheck.Connectors.Zip.ExtractFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AutoCheck.Connectors.Zip.ExtractFile(System.String,System.String,System.String)
  commentId: M:AutoCheck.Connectors.Zip.ExtractFile(System.String,System.String,System.String)
  id: ExtractFile(System.String,System.String,System.String)
  parent: AutoCheck.Connectors.Zip
  langs:
  - csharp
  - vb
  name: ExtractFile(String, String, String)
  nameWithType: Zip.ExtractFile(String, String, String)
  fullName: AutoCheck.Connectors.Zip.ExtractFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: connectors/Zip.cs
      branch: Developers-guide
      repo: https://github.com/FherStk/AutoCheck.git
    id: ExtractFile
    path: ../connectors/Zip.cs
    startLine: 23
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nExtracts a zip file into the given folder.\n"
  example: []
  syntax:
    content: public static void ExtractFile(string zipPath, string outFolder, string password = null)
    parameters:
    - id: zipPath
      type: System.String
      description: ZIP file&apos;s path.
    - id: outFolder
      type: System.String
      description: Destination folder for the extracted files.
    - id: password
      type: System.String
      description: ZIP file&apos;s password.
    content.vb: Public Shared Sub ExtractFile(zipPath As String, outFolder As String, password As String = Nothing)
  overload: AutoCheck.Connectors.Zip.ExtractFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AutoCheck.Connectors
  commentId: N:AutoCheck.Connectors
  name: AutoCheck.Connectors
  nameWithType: AutoCheck.Connectors
  fullName: AutoCheck.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutoCheck.Core.Connector
  commentId: T:AutoCheck.Core.Connector
  parent: AutoCheck.Core
  name: Connector
  nameWithType: Connector
  fullName: AutoCheck.Core.Connector
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: AutoCheck.Connectors.Zip.ExtractFile*
  commentId: Overload:AutoCheck.Connectors.Zip.ExtractFile
  name: ExtractFile
  nameWithType: Zip.ExtractFile
  fullName: AutoCheck.Connectors.Zip.ExtractFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
