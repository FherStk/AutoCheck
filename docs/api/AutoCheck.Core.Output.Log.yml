### YamlMime:ManagedReference
items:
- uid: AutoCheck.Core.Output.Log
  commentId: T:AutoCheck.Core.Output.Log
  id: Output.Log
  parent: AutoCheck.Core
  children:
  - AutoCheck.Core.Output.Log.#ctor
  - AutoCheck.Core.Output.Log.Content
  - AutoCheck.Core.Output.Log.ToJson
  - AutoCheck.Core.Output.Log.ToText
  langs:
  - csharp
  - vb
  name: Output.Log
  nameWithType: Output.Log
  fullName: AutoCheck.Core.Output.Log
  type: Class
  source:
    remote:
      path: core/main/Output.cs
      branch: v2.10.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Log
    path: ../core/main/Output.cs
    startLine: 44
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public class Log
    content.vb: Public Class Log
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Core.Output.Log.Content
  commentId: P:AutoCheck.Core.Output.Log.Content
  id: Content
  parent: AutoCheck.Core.Output.Log
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: Output.Log.Content
  fullName: AutoCheck.Core.Output.Log.Content
  type: Property
  source:
    remote:
      path: core/main/Output.cs
      branch: v2.10.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: Content
    path: ../core/main/Output.cs
    startLine: 45
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public List<Output.Content> Content { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{AutoCheck.Core.Output.Content}
    content.vb: Public Property Content As List(Of Output.Content)
  overload: AutoCheck.Core.Output.Log.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Output.Log.#ctor
  commentId: M:AutoCheck.Core.Output.Log.#ctor
  id: '#ctor'
  parent: AutoCheck.Core.Output.Log
  langs:
  - csharp
  - vb
  name: Log()
  nameWithType: Output.Log.Log()
  fullName: AutoCheck.Core.Output.Log.Log()
  type: Constructor
  source:
    remote:
      path: core/main/Output.cs
      branch: v2.10.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../core/main/Output.cs
    startLine: 47
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  syntax:
    content: public Log()
    content.vb: Public Sub New
  overload: AutoCheck.Core.Output.Log.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Output.Log.ToText
  commentId: M:AutoCheck.Core.Output.Log.ToText
  id: ToText
  parent: AutoCheck.Core.Output.Log
  langs:
  - csharp
  - vb
  name: ToText()
  nameWithType: Output.Log.ToText()
  fullName: AutoCheck.Core.Output.Log.ToText()
  type: Method
  source:
    remote:
      path: core/main/Output.cs
      branch: v2.10.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ToText
    path: ../core/main/Output.cs
    startLine: 55
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nReturns the log content as a text plain string\n"
  example: []
  syntax:
    content: public string ToText()
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToText As String
  overload: AutoCheck.Core.Output.Log.ToText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Core.Output.Log.ToJson
  commentId: M:AutoCheck.Core.Output.Log.ToJson
  id: ToJson
  parent: AutoCheck.Core.Output.Log
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: Output.Log.ToJson()
  fullName: AutoCheck.Core.Output.Log.ToJson()
  type: Method
  source:
    remote:
      path: core/main/Output.cs
      branch: v2.10.0
      repo: https://github.com/FherStk/AutoCheck.git
    id: ToJson
    path: ../core/main/Output.cs
    startLine: 74
  assemblies:
  - AutoCheck.Core
  namespace: AutoCheck.Core
  summary: "\nReturns the log content as a json string\n"
  example: []
  syntax:
    content: public string ToJson()
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToJson As String
  overload: AutoCheck.Core.Output.Log.ToJson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Core.Output.Log.Content*
  commentId: Overload:AutoCheck.Core.Output.Log.Content
  name: Content
  nameWithType: Output.Log.Content
  fullName: AutoCheck.Core.Output.Log.Content
- uid: System.Collections.Generic.List{AutoCheck.Core.Output.Content}
  commentId: T:System.Collections.Generic.List{AutoCheck.Core.Output.Content}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Output.Content>
  nameWithType: List<Output.Content>
  fullName: System.Collections.Generic.List<AutoCheck.Core.Output.Content>
  nameWithType.vb: List(Of Output.Content)
  fullName.vb: System.Collections.Generic.List(Of AutoCheck.Core.Output.Content)
  name.vb: List(Of Output.Content)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutoCheck.Core.Output.Content
    name: Output.Content
    nameWithType: Output.Content
    fullName: AutoCheck.Core.Output.Content
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutoCheck.Core.Output.Content
    name: Output.Content
    nameWithType: Output.Content
    fullName: AutoCheck.Core.Output.Content
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: AutoCheck.Core.Output.Log.#ctor*
  commentId: Overload:AutoCheck.Core.Output.Log.#ctor
  name: Log
  nameWithType: Output.Log.Log
  fullName: AutoCheck.Core.Output.Log.Log
- uid: AutoCheck.Core.Output.Log.ToText*
  commentId: Overload:AutoCheck.Core.Output.Log.ToText
  name: ToText
  nameWithType: Output.Log.ToText
  fullName: AutoCheck.Core.Output.Log.ToText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoCheck.Core.Output.Log.ToJson*
  commentId: Overload:AutoCheck.Core.Output.Log.ToJson
  name: ToJson
  nameWithType: Output.Log.ToJson
  fullName: AutoCheck.Core.Output.Log.ToJson
