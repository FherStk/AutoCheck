### YamlMime:ManagedReference
items:
- uid: AutoCheck.Connectors.Postgres.Filter
  commentId: T:AutoCheck.Connectors.Postgres.Filter
  id: Postgres.Filter
  parent: AutoCheck.Connectors
  children:
  - AutoCheck.Connectors.Postgres.Filter.#ctor(System.String,AutoCheck.Core.Operator,System.Object)
  - AutoCheck.Connectors.Postgres.Filter.Field
  - AutoCheck.Connectors.Postgres.Filter.Operator
  - AutoCheck.Connectors.Postgres.Filter.ToString
  - AutoCheck.Connectors.Postgres.Filter.Value
  langs:
  - csharp
  - vb
  name: Postgres.Filter
  nameWithType: Postgres.Filter
  fullName: AutoCheck.Connectors.Postgres.Filter
  type: Class
  source:
    remote:
      path: connectors/Postgres.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: Filter
    path: ../connectors/Postgres.cs
    startLine: 106
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nAllows filtering the data source over an SQL operation.\n"
  example: []
  syntax:
    content: public class Filter
    content.vb: Public Class Filter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutoCheck.Connectors.Postgres.Filter.Field
  commentId: P:AutoCheck.Connectors.Postgres.Filter.Field
  id: Field
  parent: AutoCheck.Connectors.Postgres.Filter
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: Postgres.Filter.Field
  fullName: AutoCheck.Connectors.Postgres.Filter.Field
  type: Property
  source:
    remote:
      path: connectors/Postgres.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: Field
    path: ../connectors/Postgres.cs
    startLine: 111
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nThe filed name which will be used for filtering.\n"
  example: []
  syntax:
    content: public string Field { get; set; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Property Field As String
  overload: AutoCheck.Connectors.Postgres.Filter.Field*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutoCheck.Connectors.Postgres.Filter.Value
  commentId: P:AutoCheck.Connectors.Postgres.Filter.Value
  id: Value
  parent: AutoCheck.Connectors.Postgres.Filter
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Postgres.Filter.Value
  fullName: AutoCheck.Connectors.Postgres.Filter.Value
  type: Property
  source:
    remote:
      path: connectors/Postgres.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: Value
    path: ../connectors/Postgres.cs
    startLine: 117
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nThe field value which will be used for filtering.\n"
  example: []
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
      description: ''
    content.vb: Public Property Value As Object
  overload: AutoCheck.Connectors.Postgres.Filter.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutoCheck.Connectors.Postgres.Filter.Operator
  commentId: P:AutoCheck.Connectors.Postgres.Filter.Operator
  id: Operator
  parent: AutoCheck.Connectors.Postgres.Filter
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: Postgres.Filter.Operator
  fullName: AutoCheck.Connectors.Postgres.Filter.Operator
  type: Property
  source:
    remote:
      path: connectors/Postgres.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: Operator
    path: ../connectors/Postgres.cs
    startLine: 123
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nThe operation between the field name and its value, which result will be used for filtering.\n"
  example: []
  syntax:
    content: public Operator Operator { get; set; }
    parameters: []
    return:
      type: AutoCheck.Core.Operator
      description: ''
    content.vb: 'Public Property Operator As '
  overload: AutoCheck.Connectors.Postgres.Filter.Operator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutoCheck.Connectors.Postgres.Filter.#ctor(System.String,AutoCheck.Core.Operator,System.Object)
  commentId: M:AutoCheck.Connectors.Postgres.Filter.#ctor(System.String,AutoCheck.Core.Operator,System.Object)
  id: '#ctor(System.String,AutoCheck.Core.Operator,System.Object)'
  parent: AutoCheck.Connectors.Postgres.Filter
  langs:
  - csharp
  - vb
  name: Filter(String, Operator, Object)
  nameWithType: Postgres.Filter.Filter(String, Operator, Object)
  fullName: AutoCheck.Connectors.Postgres.Filter.Filter(System.String, AutoCheck.Core.Operator, System.Object)
  type: Constructor
  source:
    remote:
      path: connectors/Postgres.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: .ctor
    path: ../connectors/Postgres.cs
    startLine: 131
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  summary: "\nCreates a new instance.\n"
  example: []
  syntax:
    content: public Filter(string field, Operator op, object value)
    parameters:
    - id: field
      type: System.String
      description: The filed name which will be used for filtering.
    - id: op
      type: AutoCheck.Core.Operator
      description: The operation between the field name and its value, which result will be used for filtering.
    - id: value
      type: System.Object
      description: The field value which will be used for filtering.
    content.vb: Public Sub New(field As String, op As  Operator, value As Object)
  overload: AutoCheck.Connectors.Postgres.Filter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutoCheck.Connectors.Postgres.Filter.ToString
  commentId: M:AutoCheck.Connectors.Postgres.Filter.ToString
  id: ToString
  parent: AutoCheck.Connectors.Postgres.Filter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Postgres.Filter.ToString()
  fullName: AutoCheck.Connectors.Postgres.Filter.ToString()
  type: Method
  source:
    remote:
      path: connectors/Postgres.cs
      branch: UnitTest
      repo: https://github.com/FherStk/AutoCheck.git
    id: ToString
    path: ../connectors/Postgres.cs
    startLine: 137
  assemblies:
  - AutoCheck
  namespace: AutoCheck.Connectors
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: AutoCheck.Connectors.Postgres.Filter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: AutoCheck.Connectors
  commentId: N:AutoCheck.Connectors
  name: AutoCheck.Connectors
  nameWithType: AutoCheck.Connectors
  fullName: AutoCheck.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutoCheck.Connectors.Postgres.Filter.Field*
  commentId: Overload:AutoCheck.Connectors.Postgres.Filter.Field
  name: Field
  nameWithType: Postgres.Filter.Field
  fullName: AutoCheck.Connectors.Postgres.Filter.Field
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutoCheck.Connectors.Postgres.Filter.Value*
  commentId: Overload:AutoCheck.Connectors.Postgres.Filter.Value
  name: Value
  nameWithType: Postgres.Filter.Value
  fullName: AutoCheck.Connectors.Postgres.Filter.Value
- uid: AutoCheck.Connectors.Postgres.Filter.Operator*
  commentId: Overload:AutoCheck.Connectors.Postgres.Filter.Operator
  name: Operator
  nameWithType: Postgres.Filter.Operator
  fullName: AutoCheck.Connectors.Postgres.Filter.Operator
- uid: AutoCheck.Core.Operator
  commentId: T:AutoCheck.Core.Operator
  parent: AutoCheck.Core
  name: Operator
  nameWithType: Operator
  fullName: AutoCheck.Core.Operator
- uid: AutoCheck.Core
  commentId: N:AutoCheck.Core
  name: AutoCheck.Core
  nameWithType: AutoCheck.Core
  fullName: AutoCheck.Core
- uid: AutoCheck.Connectors.Postgres.Filter.#ctor*
  commentId: Overload:AutoCheck.Connectors.Postgres.Filter.#ctor
  name: Filter
  nameWithType: Postgres.Filter.Filter
  fullName: AutoCheck.Connectors.Postgres.Filter.Filter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoCheck.Connectors.Postgres.Filter.ToString*
  commentId: Overload:AutoCheck.Connectors.Postgres.Filter.ToString
  name: ToString
  nameWithType: Postgres.Filter.ToString
  fullName: AutoCheck.Connectors.Postgres.Filter.ToString
