{"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.DefaultArguments":{"uid":"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<AutoCheck.CopyDetectors.None>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of AutoCheck.CopyDetectors.None).DefaultArguments()","nameWithType":"ScriptGDrive<None>.DefaultArguments()","nameWithType.vb":"ScriptGDrive(Of None).DefaultArguments()"},"AutoCheck.Connectors.RemoteShell.Host*":{"uid":"AutoCheck.Connectors.RemoteShell.Host*","name":"Host","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.Host","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.Host","nameWithType":"RemoteShell.Host"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.DefaultArguments":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Html>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Html).DefaultArguments()","nameWithType":"ScriptFiles<Html>.DefaultArguments()","nameWithType.vb":"ScriptFiles(Of Html).DefaultArguments()"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}.Run":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.None>.Run()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.None).Run()","nameWithType":"ScriptFiles<None>.Run()","nameWithType.vb":"ScriptFiles(Of None).Run()"},"AutoCheck.Checkers.Html.CheckIfTablesIsConsistent*":{"uid":"AutoCheck.Checkers.Html.CheckIfTablesIsConsistent*","name":"CheckIfTablesIsConsistent","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.CheckIfTablesIsConsistent","isSpec":"True","fullName":"AutoCheck.Checkers.Html.CheckIfTablesIsConsistent","nameWithType":"Html.CheckIfTablesIsConsistent"},"AutoCheck.Core.ScriptDB`1.Username*":{"uid":"AutoCheck.Core.ScriptDB`1.Username*","name":"Username","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Username","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Username","nameWithType":"ScriptDB<T>.Username","nameWithType.vb":"ScriptDB(Of T).Username"},"AutoCheck.Exceptions.TableInconsistencyException.#ctor*":{"uid":"AutoCheck.Exceptions.TableInconsistencyException.#ctor*","name":"TableInconsistencyException","href":null,"commentId":"Overload:AutoCheck.Exceptions.TableInconsistencyException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.TableInconsistencyException.TableInconsistencyException","nameWithType":"TableInconsistencyException.TableInconsistencyException"},"AutoCheck.Exceptions.StyleNotFoundException":{"uid":"AutoCheck.Exceptions.StyleNotFoundException","name":"StyleNotFoundException","href":null,"commentId":"T:AutoCheck.Exceptions.StyleNotFoundException","isSpec":"True","fullName":"AutoCheck.Exceptions.StyleNotFoundException","nameWithType":"StyleNotFoundException"},"AutoCheck.Connectors.Postgres.Grant(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Grant(System.String,System.String,System.String)","name":"Grant(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Grant(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.Grant(System.String, System.String, System.String)","nameWithType":"Postgres.Grant(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Grants an item (role, group or permission) to a destination (role, group or user).</p>\n"},"AutoCheck.Core.Script`1.Clean*":{"uid":"AutoCheck.Core.Script`1.Clean*","name":"Clean","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.Clean","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Clean","fullName.vb":"AutoCheck.Core.Script(Of T).Clean","nameWithType":"Script<T>.Clean","nameWithType.vb":"Script(Of T).Clean"},"AutoCheck.Connectors.Postgres.ExecuteQuery*":{"uid":"AutoCheck.Connectors.Postgres.ExecuteQuery*","name":"ExecuteQuery","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ExecuteQuery","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExecuteQuery","nameWithType":"Postgres.ExecuteQuery"},"AutoCheck.Exceptions.DocumentInvalidException":{"uid":"AutoCheck.Exceptions.DocumentInvalidException","name":"DocumentInvalidException","href":null,"commentId":"T:AutoCheck.Exceptions.DocumentInvalidException","isSpec":"True","fullName":"AutoCheck.Exceptions.DocumentInvalidException","nameWithType":"DocumentInvalidException"},"AutoCheck.CopyDetectors.PlainText.Load(System.String)":{"uid":"AutoCheck.CopyDetectors.PlainText.Load(System.String)","name":"Load(String)","href":null,"commentId":"M:AutoCheck.CopyDetectors.PlainText.Load(System.String)","fullName":"AutoCheck.CopyDetectors.PlainText.Load(System.String)","nameWithType":"PlainText.Load(String)","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">Loads the given file into the local collection, in order to compare it when Compare() is called.</p>\n"},"AutoCheck.Core.ScriptDB`1.Host":{"uid":"AutoCheck.Core.ScriptDB`1.Host","name":"Host","href":null,"commentId":"P:AutoCheck.Core.ScriptDB`1.Host","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Host","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Host","nameWithType":"ScriptDB<T>.Host","nameWithType.vb":"ScriptDB(Of T).Host"},"AutoCheck.Connectors.Postgres.DeleteData*":{"uid":"AutoCheck.Connectors.Postgres.DeleteData*","name":"DeleteData","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DeleteData","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DeleteData","nameWithType":"Postgres.DeleteData"},"AutoCheck.Core.Script`1.EvalQuestion":{"uid":"AutoCheck.Core.Script`1.EvalQuestion","name":"EvalQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script`1.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.EvalQuestion()","fullName.vb":"AutoCheck.Core.Script(Of T).EvalQuestion()","nameWithType":"Script<T>.EvalQuestion()","nameWithType.vb":"Script(Of T).EvalQuestion()"},"System.Collections.Generic":{"uid":"System.Collections.Generic","name":"System.Collections.Generic","href":null,"commentId":"N:System.Collections.Generic","fullName":"System.Collections.Generic","nameWithType":"System.Collections.Generic"},"AutoCheck.CopyDetectors.None.Load*":{"uid":"AutoCheck.CopyDetectors.None.Load*","name":"Load","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.None.Load","isSpec":"True","fullName":"AutoCheck.CopyDetectors.None.Load","nameWithType":"None.Load"},"AutoCheck.CopyDetectors.PlainText.LineCountWeight*":{"uid":"AutoCheck.CopyDetectors.PlainText.LineCountWeight*","name":"LineCountWeight","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.LineCountWeight","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.LineCountWeight","nameWithType":"PlainText.LineCountWeight"},"AutoCheck.Core.Operator":{"uid":"AutoCheck.Core.Operator","name":"Operator","href":null,"commentId":"T:AutoCheck.Core.Operator","isSpec":"True","fullName":"AutoCheck.Core.Operator","nameWithType":"Operator","summary":"<p sourcefile=\"api/AutoCheck.Core.Operator.yml\" sourcestartlinenumber=\"2\">Available option for comparing items</p>\n"},"System":{"uid":"System","name":"System","href":null,"commentId":"N:System","fullName":"System","nameWithType":"System"},"AutoCheck.Connectors.Postgres.Filter.#ctor*":{"uid":"AutoCheck.Connectors.Postgres.Filter.#ctor*","name":"Filter","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Filter.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Filter.Filter","nameWithType":"Postgres.Filter.Filter"},"System.Exception.StackTrace":{"uid":"System.Exception.StackTrace","name":"StackTrace","href":null,"commentId":"P:System.Exception.StackTrace","fullName":"System.Exception.StackTrace","nameWithType":"Exception.StackTrace"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CancelQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CancelQuestion","name":"CancelQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.CancelQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).CancelQuestion()","nameWithType":"Script<Html>.CancelQuestion()","nameWithType.vb":"Script(Of Html).CancelQuestion()"},"AutoCheck.Core.ScriptV2.Name*":{"uid":"AutoCheck.Core.ScriptV2.Name*","name":"Name","href":null,"commentId":"Overload:AutoCheck.Core.ScriptV2.Name","isSpec":"True","fullName":"AutoCheck.Core.ScriptV2.Name","nameWithType":"ScriptV2.Name"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CancelQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CancelQuestion","name":"CancelQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.CancelQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).CancelQuestion()","nameWithType":"Script<SqlLog>.CancelQuestion()","nameWithType.vb":"Script(Of SqlLog).CancelQuestion()"},"AutoCheck.Core.ScriptDB`1.DefaultArguments":{"uid":"AutoCheck.Core.ScriptDB`1.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).DefaultArguments()","nameWithType":"ScriptDB<T>.DefaultArguments()","nameWithType.vb":"ScriptDB(Of T).DefaultArguments()"},"AutoCheck.Connectors.Postgres.Source.ToString":{"uid":"AutoCheck.Connectors.Postgres.Source.ToString","name":"ToString()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Source.ToString","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.ToString()","nameWithType":"Postgres.Source.ToString()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Source.yml\" sourcestartlinenumber=\"2\">Converts the current instance to an SQL compatible string representation</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Batch":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Batch","name":"Batch()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.Batch()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).Batch()","nameWithType":"Script<SqlLog>.Batch()","nameWithType.vb":"Script(Of SqlLog).Batch()"},"AutoCheck.Connectors.Postgres.DropUser(System.String)":{"uid":"AutoCheck.Connectors.Postgres.DropUser(System.String)","name":"DropUser(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DropUser(System.String)","fullName":"AutoCheck.Connectors.Postgres.DropUser(System.String)","nameWithType":"Postgres.DropUser(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Removes an existing user.</p>\n"},"AutoCheck.Checkers.Html.CheckIfNodesContentMatchesAmount*":{"uid":"AutoCheck.Checkers.Html.CheckIfNodesContentMatchesAmount*","name":"CheckIfNodesContentMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.CheckIfNodesContentMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.Html.CheckIfNodesContentMatchesAmount","nameWithType":"Html.CheckIfNodesContentMatchesAmount"},"AutoCheck.Checkers.Postgres":{"uid":"AutoCheck.Checkers.Postgres","name":"Postgres","href":null,"commentId":"T:AutoCheck.Checkers.Postgres","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres","nameWithType":"Postgres","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Allows data validations over a PostgreSQL instance.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Clean":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Clean","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.Clean()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).Clean()","nameWithType":"Script<Html>.Clean()","nameWithType.vb":"Script(Of Html).Clean()"},"AutoCheck.Checkers.Html.CheckIfNodesMatchesAmount*":{"uid":"AutoCheck.Checkers.Html.CheckIfNodesMatchesAmount*","name":"CheckIfNodesMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.CheckIfNodesMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.Html.CheckIfNodesMatchesAmount","nameWithType":"Html.CheckIfNodesMatchesAmount"},"AutoCheck.Connectors.Postgres.GetMembership(System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetMembership(System.String)","name":"GetMembership(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetMembership(System.String)","fullName":"AutoCheck.Connectors.Postgres.GetMembership(System.String)","nameWithType":"Postgres.GetMembership(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Get a list of groups and roles where the given item (user, role or group) belongs.</p>\n"},"AutoCheck.Connectors.Postgres.GetTablePrivileges*":{"uid":"AutoCheck.Connectors.Postgres.GetTablePrivileges*","name":"GetTablePrivileges","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetTablePrivileges","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetTablePrivileges","nameWithType":"Postgres.GetTablePrivileges"},"Google.Apis.Drive.v3":{"uid":"Google.Apis.Drive.v3","name":"Google.Apis.Drive.v3","href":null,"commentId":"N:Google.Apis.Drive.v3","fullName":"Google.Apis.Drive.v3","nameWithType":"Google.Apis.Drive.v3"},"AutoCheck.Connectors.Postgres.Host":{"uid":"AutoCheck.Connectors.Postgres.Host","name":"Host","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Host","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Host","nameWithType":"Postgres.Host","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">PostgreSQL host address.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Batch":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Batch","name":"Batch()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.Batch()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).Batch()","nameWithType":"Script<Css>.Batch()","nameWithType.vb":"Script(Of Css).Batch()"},"AutoCheck.Connectors.Postgres.GetSchemaPrivileges(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetSchemaPrivileges(System.String,System.String)","name":"GetSchemaPrivileges(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetSchemaPrivileges(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetSchemaPrivileges(System.String, System.String)","nameWithType":"Postgres.GetSchemaPrivileges(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the schema privileges.</p>\n"},"AutoCheck.Connectors.Css.PropertyExists*":{"uid":"AutoCheck.Connectors.Css.PropertyExists*","name":"PropertyExists","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.PropertyExists","isSpec":"True","fullName":"AutoCheck.Connectors.Css.PropertyExists","nameWithType":"Css.PropertyExists"},"AutoCheck.Connectors.RemoteShell":{"uid":"AutoCheck.Connectors.RemoteShell","name":"RemoteShell","href":null,"commentId":"T:AutoCheck.Connectors.RemoteShell","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell","nameWithType":"RemoteShell","summary":"<p sourcefile=\"api/AutoCheck.Connectors.RemoteShell.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with a remote computer (like ssh, scp, etc.).</p>\n"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Student":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Student","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Student","nameWithType":"ScriptDB<None>.Student","nameWithType.vb":"ScriptDB(Of None).Student"},"AutoCheck.Checkers.Css.CheckIfPropertyHasBeenApplied*":{"uid":"AutoCheck.Checkers.Css.CheckIfPropertyHasBeenApplied*","name":"CheckIfPropertyHasBeenApplied","href":null,"commentId":"Overload:AutoCheck.Checkers.Css.CheckIfPropertyHasBeenApplied","isSpec":"True","fullName":"AutoCheck.Checkers.Css.CheckIfPropertyHasBeenApplied","nameWithType":"Css.CheckIfPropertyHasBeenApplied"},"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount*":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount*","name":"CheckIfFoldersMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount","nameWithType":"LocalShell.CheckIfFoldersMatchesAmount"},"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Run*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Run","nameWithType":"ASIX_M02UF3_PermissionsAssignment.Run"},"System.Exception.Source":{"uid":"System.Exception.Source","name":"Source","href":null,"commentId":"P:System.Exception.Source","fullName":"System.Exception.Source","nameWithType":"Exception.Source"},"AutoCheck.Connectors.Html.HtmlDoc*":{"uid":"AutoCheck.Connectors.Html.HtmlDoc*","name":"HtmlDoc","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.HtmlDoc","isSpec":"True","fullName":"AutoCheck.Connectors.Html.HtmlDoc","nameWithType":"Html.HtmlDoc"},"AutoCheck.Connectors.Html.CountNodes*":{"uid":"AutoCheck.Connectors.Html.CountNodes*","name":"CountNodes","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.CountNodes","isSpec":"True","fullName":"AutoCheck.Connectors.Html.CountNodes","nameWithType":"Html.CountNodes"},"AutoCheck.Core.CopyDetector.GetDetails*":{"uid":"AutoCheck.Core.CopyDetector.GetDetails*","name":"GetDetails","href":null,"commentId":"Overload:AutoCheck.Core.CopyDetector.GetDetails","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.GetDetails","nameWithType":"CopyDetector.GetDetails"},"AutoCheck.Checkers.GDrive.CheckIfFilesMatchesAmount*":{"uid":"AutoCheck.Checkers.GDrive.CheckIfFilesMatchesAmount*","name":"CheckIfFilesMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.CheckIfFilesMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.CheckIfFilesMatchesAmount","nameWithType":"GDrive.CheckIfFilesMatchesAmount"},"AutoCheck.Core.Script{{T}}.CloseQuestion(System.String)":{"uid":"AutoCheck.Core.Script{{T}}.CloseQuestion(System.String)","name":"CloseQuestion(String)","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.CloseQuestion(System.String)","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CloseQuestion(System.String)","fullName.vb":"AutoCheck.Core.Script(Of T).CloseQuestion(System.String)","nameWithType":"Script<T>.CloseQuestion(String)","nameWithType.vb":"Script(Of T).CloseQuestion(String)"},"AutoCheck.Checkers.Odoo":{"uid":"AutoCheck.Checkers.Odoo","name":"Odoo","href":null,"commentId":"T:AutoCheck.Checkers.Odoo","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo","nameWithType":"Odoo","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Odoo.yml\" sourcestartlinenumber=\"2\">Allows data validations over an Odoo instance.</p>\n"},"AutoCheck.CopyDetectors.SqlLog.#ctor*":{"uid":"AutoCheck.CopyDetectors.SqlLog.#ctor*","name":"SqlLog","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.SqlLog.#ctor","isSpec":"True","fullName":"AutoCheck.CopyDetectors.SqlLog.SqlLog","nameWithType":"SqlLog.SqlLog"},"AutoCheck.Connectors.Postgres.DBHost":{"uid":"AutoCheck.Connectors.Postgres.DBHost","name":"DBHost","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.DBHost","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DBHost","nameWithType":"Postgres.DBHost","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">PostgreSQL host address.</p>\n"},"AutoCheck.Core.ScriptGDrive`1.Username*":{"uid":"AutoCheck.Core.ScriptGDrive`1.Username*","name":"Username","href":null,"commentId":"Overload:AutoCheck.Core.ScriptGDrive`1.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.Username","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).Username","nameWithType":"ScriptGDrive<T>.Username","nameWithType.vb":"ScriptGDrive(Of T).Username"},"AutoCheck.Connectors.Odoo.GetPosSaleData*":{"uid":"AutoCheck.Connectors.Odoo.GetPosSaleData*","name":"GetPosSaleData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetPosSaleData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetPosSaleData","nameWithType":"Odoo.GetPosSaleData"},"System.Int64":{"uid":"System.Int64","name":"Int64","href":null,"commentId":"T:System.Int64","fullName":"System.Int64","nameWithType":"Int64"},"AutoCheck.Connectors.Odoo.#ctor*":{"uid":"AutoCheck.Connectors.Odoo.#ctor*","name":"Odoo","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.Odoo","nameWithType":"Odoo.Odoo"},"AutoCheck.Connectors.Css.PropertyApplied*":{"uid":"AutoCheck.Connectors.Css.PropertyApplied*","name":"PropertyApplied","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.PropertyApplied","isSpec":"True","fullName":"AutoCheck.Connectors.Css.PropertyApplied","nameWithType":"Css.PropertyApplied"},"AutoCheck.Checkers.Postgres.CheckIfTableExists(System.String,System.String)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableExists(System.String,System.String)","name":"CheckIfTableExists(String, String)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableExists(System.String,System.String)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableExists(System.String, System.String)","nameWithType":"Postgres.CheckIfTableExists(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if a table or view exists.</p>\n"},"AutoCheck.Connectors.Postgres.User*":{"uid":"AutoCheck.Connectors.Postgres.User*","name":"User","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.User","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.User","nameWithType":"Postgres.User"},"AutoCheck.Checkers.Csv.Connector*":{"uid":"AutoCheck.Checkers.Csv.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.Csv.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.Csv.Connector","nameWithType":"Csv.Connector"},"AutoCheck.Core.CopyDetector":{"uid":"AutoCheck.Core.CopyDetector","name":"CopyDetector","href":null,"commentId":"T:AutoCheck.Core.CopyDetector","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector","nameWithType":"CopyDetector","summary":"<p sourcefile=\"api/AutoCheck.Core.CopyDetector.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a custom copy detectors.\nThis class is in charge of performing the copy detection along the student's files, code the abstract methods and provide all the necessary extra code needed.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Clean":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Clean","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.Clean()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).Clean()","nameWithType":"Script<Css>.Clean()","nameWithType.vb":"Script(Of Css).Clean()"},"AutoCheck.Connectors.GDrive.GetFolder*":{"uid":"AutoCheck.Connectors.GDrive.GetFolder*","name":"GetFolder","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.GetFolder","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.GetFolder","nameWithType":"GDrive.GetFolder"},"AutoCheck.Connectors.CsvDocument.Content*":{"uid":"AutoCheck.Connectors.CsvDocument.Content*","name":"Content","href":null,"commentId":"Overload:AutoCheck.Connectors.CsvDocument.Content","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument.Content","nameWithType":"CsvDocument.Content"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Student":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.Student","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).Student","nameWithType":"ScriptDB<SqlLog>.Student","nameWithType.vb":"ScriptDB(Of SqlLog).Student"},"AutoCheck.Connectors.Postgres.GetField``1(AutoCheck.Connectors.Postgres.Source,System.String,System.ComponentModel.ListSortDirection)":{"uid":"AutoCheck.Connectors.Postgres.GetField``1(AutoCheck.Connectors.Postgres.Source,System.String,System.ComponentModel.ListSortDirection)","name":"GetField<T>(Postgres.Source, String, ListSortDirection)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetField``1(AutoCheck.Connectors.Postgres.Source,System.String,System.ComponentModel.ListSortDirection)","name.vb":"GetField(Of T)(Postgres.Source, String, ListSortDirection)","fullName":"AutoCheck.Connectors.Postgres.GetField<T>(AutoCheck.Connectors.Postgres.Source, System.String, System.ComponentModel.ListSortDirection)","fullName.vb":"AutoCheck.Connectors.Postgres.GetField(Of T)(AutoCheck.Connectors.Postgres.Source, System.String, System.ComponentModel.ListSortDirection)","nameWithType":"Postgres.GetField<T>(Postgres.Source, String, ListSortDirection)","nameWithType.vb":"Postgres.GetField(Of T)(Postgres.Source, String, ListSortDirection)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the requested field's value for the first found item.</p>\n"},"Npgsql.NpgsqlConnection":{"uid":"Npgsql.NpgsqlConnection","name":"NpgsqlConnection","href":null,"commentId":"T:Npgsql.NpgsqlConnection","fullName":"Npgsql.NpgsqlConnection","nameWithType":"NpgsqlConnection"},"AutoCheck.Core.ScriptFiles{{T}}":{"uid":"AutoCheck.Core.ScriptFiles{{T}}","name":"ScriptFiles<T>","href":null,"commentId":"T:AutoCheck.Core.ScriptFiles{`0}","isSpec":"True","name.vb":"ScriptFiles(Of T)","fullName":"AutoCheck.Core.ScriptFiles<T>","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T)","nameWithType":"ScriptFiles<T>","nameWithType.vb":"ScriptFiles(Of T)"},"AutoCheck.Connectors.Html.#ctor*":{"uid":"AutoCheck.Connectors.Html.#ctor*","name":"Html","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Html.Html","nameWithType":"Html.Html"},"AutoCheck.Connectors.Postgres.DropRole*":{"uid":"AutoCheck.Connectors.Postgres.DropRole*","name":"DropRole","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DropRole","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DropRole","nameWithType":"Postgres.DropRole"},"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount*":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount*","name":"CheckIfFilesMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount","nameWithType":"LocalShell.CheckIfFilesMatchesAmount"},"AutoCheck.Connectors.Postgres.InsertData*":{"uid":"AutoCheck.Connectors.Postgres.InsertData*","name":"InsertData","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.InsertData","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.InsertData","nameWithType":"Postgres.InsertData"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.MaxScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.MaxScore","name":"MaxScore","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).MaxScore","nameWithType":"Script<Html>.MaxScore","nameWithType.vb":"Script(Of Html).MaxScore"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Host":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Host","name":"Host","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Host","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Host","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Host","nameWithType":"ScriptDB<None>.Host","nameWithType.vb":"ScriptDB(Of None).Host"},"System.Exception.HResult":{"uid":"System.Exception.HResult","name":"HResult","href":null,"commentId":"P:System.Exception.HResult","fullName":"System.Exception.HResult","nameWithType":"Exception.HResult"},"AutoCheck.Connectors.Postgres.Update*":{"uid":"AutoCheck.Connectors.Postgres.Update*","name":"Update","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Update","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Update","nameWithType":"Postgres.Update"},"AutoCheck.CopyDetectors.Css":{"uid":"AutoCheck.CopyDetectors.Css","name":"Css","href":null,"commentId":"T:AutoCheck.CopyDetectors.Css","isSpec":"True","fullName":"AutoCheck.CopyDetectors.Css","nameWithType":"Css","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.Css.yml\" sourcestartlinenumber=\"2\">Copy detector for CSS files.</p>\n"},"AutoCheck.CopyDetectors.Css.#ctor*":{"uid":"AutoCheck.CopyDetectors.Css.#ctor*","name":"Css","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.Css.#ctor","isSpec":"True","fullName":"AutoCheck.CopyDetectors.Css.Css","nameWithType":"Css.Css"},"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment":{"uid":"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment","name":"DAM_M04UF3_ErpPresentationAssignment","href":null,"commentId":"T:AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment","nameWithType":"DAM_M04UF3_ErpPresentationAssignment"},"AutoCheck.CopyDetectors.None":{"uid":"AutoCheck.CopyDetectors.None","name":"None","href":null,"commentId":"T:AutoCheck.CopyDetectors.None","isSpec":"True","fullName":"AutoCheck.CopyDetectors.None","nameWithType":"None","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.None.yml\" sourcestartlinenumber=\"2\">Empty copy detector, use it in order to avoid copy detection.</p>\n"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}","name":"ScriptFiles<Html>","href":null,"commentId":"T:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}","isSpec":"True","name.vb":"ScriptFiles(Of Html)","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Html>","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Html)","nameWithType":"ScriptFiles<Html>","nameWithType.vb":"ScriptFiles(Of Html)"},"AutoCheck.Core.ScriptGDrive`1.SetUp*":{"uid":"AutoCheck.Core.ScriptGDrive`1.SetUp*","name":"SetUp","href":null,"commentId":"Overload:AutoCheck.Core.ScriptGDrive`1.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.SetUp","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).SetUp","nameWithType":"ScriptGDrive<T>.SetUp","nameWithType.vb":"ScriptGDrive(Of T).SetUp"},"AutoCheck.Connectors.Postgres.DBName*":{"uid":"AutoCheck.Connectors.Postgres.DBName*","name":"DBName","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DBName","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DBName","nameWithType":"Postgres.DBName"},"AutoCheck.Connectors.Odoo.GetPurchaseData*":{"uid":"AutoCheck.Connectors.Odoo.GetPurchaseData*","name":"GetPurchaseData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetPurchaseData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetPurchaseData","nameWithType":"Odoo.GetPurchaseData"},"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfSelectContainsData(String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfSelectContainsData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfSelectContainsData(String, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfSelectContainsData(String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfSelectContainsData(String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if the given query result performs an exact match with any row stored in the database.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableUpdatesData(String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableUpdatesData(String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableUpdatesData(String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableUpdatesData(String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be updated into the table.</p>\n"},"AutoCheck.Connectors.Postgres.InsertData(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.InsertData(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"InsertData(String, String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.InsertData(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"InsertData(String, String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.InsertData(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.InsertData(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.InsertData(String, String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.InsertData(String, String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Inserts new data into a table.</p>\n"},"Renci.SshNet.SshClient":{"uid":"Renci.SshNet.SshClient","name":"SshClient","href":null,"commentId":"T:Renci.SshNet.SshClient","fullName":"Renci.SshNet.SshClient","nameWithType":"SshClient"},"{T}":{"uid":"{T}","name":"T","href":null,"commentId":"!:T","isSpec":"True","fullName":"T","nameWithType":"T"},"AutoCheck.Checkers.Csv.#ctor*":{"uid":"AutoCheck.Checkers.Csv.#ctor*","name":"Csv","href":null,"commentId":"Overload:AutoCheck.Checkers.Csv.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.Csv.Csv","nameWithType":"Csv.Csv"},"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.Run*":{"uid":"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.Run","nameWithType":"DAM_M04UF1_Html5Assignment.Run"},"AutoCheck.Checkers.Odoo.CheckIfProductMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfProductMatchesData*","name":"CheckIfProductMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfProductMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfProductMatchesData","nameWithType":"Odoo.CheckIfProductMatchesData"},"AutoCheck.Core.Connector.CurrentOS*":{"uid":"AutoCheck.Core.Connector.CurrentOS*","name":"CurrentOS","href":null,"commentId":"Overload:AutoCheck.Core.Connector.CurrentOS","isSpec":"True","fullName":"AutoCheck.Core.Connector.CurrentOS","nameWithType":"Connector.CurrentOS"},"AutoCheck.Connectors.Postgres.GetRoles":{"uid":"AutoCheck.Connectors.Postgres.GetRoles","name":"GetRoles()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetRoles","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetRoles()","nameWithType":"Postgres.GetRoles()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Requests for all the roles created.</p>\n"},"AutoCheck.Core.Script{{T}}.CpThresh":{"uid":"AutoCheck.Core.Script{{T}}.CpThresh","name":"CpThresh","href":null,"commentId":"P:AutoCheck.Core.Script{`0}.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of T).CpThresh","nameWithType":"Script<T>.CpThresh","nameWithType.vb":"Script(Of T).CpThresh"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.OpenQuestion(System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.OpenQuestion(System.String,System.Single)","name":"OpenQuestion(String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.OpenQuestion(System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.OpenQuestion(System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).OpenQuestion(System.String, System.Single)","nameWithType":"Script<SqlLog>.OpenQuestion(String, Single)","nameWithType.vb":"Script(Of SqlLog).OpenQuestion(String, Single)"},"AutoCheck.Connectors.Postgres.Database":{"uid":"AutoCheck.Connectors.Postgres.Database","name":"Database","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Database","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Database","nameWithType":"Postgres.Database","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database host address, with a running instance allowing remote connections.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)","name":"CheckIfTableContainsPrivileges(String, String, String, Char)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String,System.String,System.String,System.Char)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges(System.String, System.String, System.String, System.Char)","nameWithType":"Postgres.CheckIfTableContainsPrivileges(String, String, String, Char)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Looks for a privilege within the current table's ones.</p>\n"},"AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)":{"uid":"AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)","name":"DeleteData(String, String, String, Object, Postgres.Operator)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)","fullName":"AutoCheck.Connectors.Postgres.DeleteData(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator)","nameWithType":"Postgres.DeleteData(String, String, String, Object, Postgres.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Delete some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.Script`1.CpThresh*":{"uid":"AutoCheck.Core.Script`1.CpThresh*","name":"CpThresh","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of T).CpThresh","nameWithType":"Script<T>.CpThresh","nameWithType.vb":"Script(Of T).CpThresh"},"System.Collections.Generic.Dictionary{System.String[],System.Collections.Generic.Dictionary{System.String,System.Object}}":{"uid":"System.Collections.Generic.Dictionary{System.String[],System.Collections.Generic.Dictionary{System.String,System.Object}}","name":"Dictionary<String[], Dictionary<String, Object>>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{System.String[],System.Collections.Generic.Dictionary{System.String,System.Object}}","isSpec":"True","name.vb":"Dictionary(Of String(), Dictionary(Of String, Object))","fullName":"System.Collections.Generic.Dictionary<System.String[], System.Collections.Generic.Dictionary<System.String, System.Object>>","fullName.vb":"System.Collections.Generic.Dictionary(Of System.String(), System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Dictionary<String[], Dictionary<String, Object>>","nameWithType.vb":"Dictionary(Of String(), Dictionary(Of String, Object))"},"AutoCheck.Connectors.Postgres.ExistsDataBase":{"uid":"AutoCheck.Connectors.Postgres.ExistsDataBase","name":"ExistsDataBase()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExistsDataBase","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExistsDataBase()","nameWithType":"Postgres.ExistsDataBase()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if the database exists.</p>\n"},"AutoCheck.Connectors.Html.SelectNodes*":{"uid":"AutoCheck.Connectors.Html.SelectNodes*","name":"SelectNodes","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.SelectNodes","isSpec":"True","fullName":"AutoCheck.Connectors.Html.SelectNodes","nameWithType":"Html.SelectNodes"},"AutoCheck.Core.ScriptDB`1.#ctor*":{"uid":"AutoCheck.Core.ScriptDB`1.#ctor*","name":"ScriptDB","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.#ctor","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.ScriptDB","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).ScriptDB","nameWithType":"ScriptDB<T>.ScriptDB","nameWithType.vb":"ScriptDB(Of T).ScriptDB"},"AutoCheck.Connectors.Odoo.CompanyID*":{"uid":"AutoCheck.Connectors.Odoo.CompanyID*","name":"CompanyID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.CompanyID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.CompanyID","nameWithType":"Odoo.CompanyID"},"AutoCheck.Connectors.Postgres.Student":{"uid":"AutoCheck.Connectors.Postgres.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Student","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Student","nameWithType":"Postgres.Student","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The student name wich is the original database creator.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfEntryAdded*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfEntryAdded*","name":"CheckIfEntryAdded","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfEntryAdded","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfEntryAdded","nameWithType":"Postgres.CheckIfEntryAdded"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator,System.Int32)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator,System.Int32)","name":"CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Operator, Int32)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator,System.Int32)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.String, System.Object, AutoCheck.Core.Operator, System.Int32)","nameWithType":"Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Operator, Int32)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"AutoCheck.CopyDetectors.PlainText.WordCountWeight*":{"uid":"AutoCheck.CopyDetectors.PlainText.WordCountWeight*","name":"WordCountWeight","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.WordCountWeight","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.WordCountWeight","nameWithType":"PlainText.WordCountWeight"},"AutoCheck.Connectors.Postgres.GetField*":{"uid":"AutoCheck.Connectors.Postgres.GetField*","name":"GetField","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetField","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetField","nameWithType":"Postgres.GetField"},"System.Data.DataSet":{"uid":"System.Data.DataSet","name":"DataSet","href":null,"commentId":"T:System.Data.DataSet","fullName":"System.Data.DataSet","nameWithType":"DataSet"},"AutoCheck.Connectors.LocalShell.GetFile*":{"uid":"AutoCheck.Connectors.LocalShell.GetFile*","name":"GetFile","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.GetFile","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.GetFile","nameWithType":"LocalShell.GetFile"},"AutoCheck.CopyDetectors.PlainText.#ctor*":{"uid":"AutoCheck.CopyDetectors.PlainText.#ctor*","name":"PlainText","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.#ctor","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.PlainText","nameWithType":"PlainText.PlainText"},"AutoCheck.Connectors.Odoo.GetInvoiceCode*":{"uid":"AutoCheck.Connectors.Odoo.GetInvoiceCode*","name":"GetInvoiceCode","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetInvoiceCode","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetInvoiceCode","nameWithType":"Odoo.GetInvoiceCode"},"AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege*","name":"CheckIfSchemaContainsPrivilege","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege","nameWithType":"Postgres.CheckIfSchemaContainsPrivilege"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}","name":"Script<Html>","href":null,"commentId":"T:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}","isSpec":"True","name.vb":"Script(Of Html)","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html)","nameWithType":"Script<Html>","nameWithType.vb":"Script(Of Html)"},"AutoCheck.Connectors.GDrive.ExistsFile*":{"uid":"AutoCheck.Connectors.GDrive.ExistsFile*","name":"ExistsFile","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.ExistsFile","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.ExistsFile","nameWithType":"GDrive.ExistsFile"},"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,System.String[])","name":"Select(Postgres.Source, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,System.String[])","name.vb":"Select(Postgres.Source, String())","fullName":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source, System.String())","nameWithType":"Postgres.Select(Postgres.Source, String[])","nameWithType.vb":"Postgres.Select(Postgres.Source, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects some data from the database.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)","name":"CheckIfSchemaContainsPrivilege(String, String, Char)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String,System.String,System.Char)","fullName":"AutoCheck.Checkers.Postgres.CheckIfSchemaContainsPrivilege(System.String, System.String, System.Char)","nameWithType":"Postgres.CheckIfSchemaContainsPrivilege(String, String, Char)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Looks for a privilege within the current schema's ones.</p>\n"},"AutoCheck.Connectors.Postgres.CountUsers":{"uid":"AutoCheck.Connectors.Postgres.CountUsers","name":"CountUsers()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountUsers","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountUsers()","nameWithType":"Postgres.CountUsers()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many user accounts are in the database.</p>\n"},"AutoCheck.Connectors.Odoo.GetScrappedStockData*":{"uid":"AutoCheck.Connectors.Odoo.GetScrappedStockData*","name":"GetScrappedStockData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetScrappedStockData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetScrappedStockData","nameWithType":"Odoo.GetScrappedStockData"},"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.SetUp":{"uid":"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<AutoCheck.CopyDetectors.None>.SetUp()","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of AutoCheck.CopyDetectors.None).SetUp()","nameWithType":"ScriptGDrive<None>.SetUp()","nameWithType.vb":"ScriptGDrive(Of None).SetUp()"},"AutoCheck.Checkers.Css.#ctor*":{"uid":"AutoCheck.Checkers.Css.#ctor*","name":"Css","href":null,"commentId":"Overload:AutoCheck.Checkers.Css.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.Css.Css","nameWithType":"Css.Css"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Score":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Score","name":"Score","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Score","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Score","nameWithType":"Script<None>.Score","nameWithType.vb":"Script(Of None).Score"},"AutoCheck.Connectors.Postgres.Insert(AutoCheck.Connectors.Postgres.Destination,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Insert(AutoCheck.Connectors.Postgres.Destination,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Insert(Postgres.Destination, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Insert(AutoCheck.Connectors.Postgres.Destination,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Insert(Postgres.Destination, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Insert(AutoCheck.Connectors.Postgres.Destination, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Insert(AutoCheck.Connectors.Postgres.Destination, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Insert(Postgres.Destination, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Insert(Postgres.Destination, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Inserts new data into a table.</p>\n"},"System.Exception.Message":{"uid":"System.Exception.Message","name":"Message","href":null,"commentId":"P:System.Exception.Message","fullName":"System.Exception.Message","nameWithType":"Exception.Message"},"AutoCheck.Connectors.Postgres.GetForeignKeys(System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetForeignKeys(System.String)","name":"GetForeignKeys(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetForeignKeys(System.String)","fullName":"AutoCheck.Connectors.Postgres.GetForeignKeys(System.String)","nameWithType":"Postgres.GetForeignKeys(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the information about all the foreign keys defined over a table.</p>\n"},"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.#ctor*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.#ctor*","name":"ASIX_M02UF3_ViewsExtendedAssignment","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.ASIX_M02UF3_ViewsExtendedAssignment","nameWithType":"ASIX_M02UF3_ViewsExtendedAssignment.ASIX_M02UF3_ViewsExtendedAssignment"},"AutoCheck.Connectors.Odoo.GetPurchaseID*":{"uid":"AutoCheck.Connectors.Odoo.GetPurchaseID*","name":"GetPurchaseID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetPurchaseID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetPurchaseID","nameWithType":"Odoo.GetPurchaseID"},"AutoCheck.Connectors.RemoteShell.GetFolder*":{"uid":"AutoCheck.Connectors.RemoteShell.GetFolder*","name":"GetFolder","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.GetFolder","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.GetFolder","nameWithType":"RemoteShell.GetFolder"},"AutoCheck.Connectors.Odoo.GetProductTemplateID*":{"uid":"AutoCheck.Connectors.Odoo.GetProductTemplateID*","name":"GetProductTemplateID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetProductTemplateID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetProductTemplateID","nameWithType":"Odoo.GetProductTemplateID"},"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Operator)","name":"CheckIfFilesMatchesAmount(String, Int32, Boolean, Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String, System.Int32, System.Boolean, AutoCheck.Core.Operator)","nameWithType":"LocalShell.CheckIfFilesMatchesAmount(String, Int32, Boolean, Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks the amount of expected files.</p>\n"},"AutoCheck.Core.Output.Disable*":{"uid":"AutoCheck.Core.Output.Disable*","name":"Disable","href":null,"commentId":"Overload:AutoCheck.Core.Output.Disable","isSpec":"True","fullName":"AutoCheck.Core.Output.Disable","nameWithType":"Output.Disable"},"AutoCheck.Core.ScriptDB`1.Username":{"uid":"AutoCheck.Core.ScriptDB`1.Username","name":"Username","href":null,"commentId":"P:AutoCheck.Core.ScriptDB`1.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Username","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Username","nameWithType":"ScriptDB<T>.Username","nameWithType.vb":"ScriptDB(Of T).Username"},"AutoCheck.Checkers.Css.CheckIfPropertyApplied*":{"uid":"AutoCheck.Checkers.Css.CheckIfPropertyApplied*","name":"CheckIfPropertyApplied","href":null,"commentId":"Overload:AutoCheck.Checkers.Css.CheckIfPropertyApplied","isSpec":"True","fullName":"AutoCheck.Checkers.Css.CheckIfPropertyApplied","nameWithType":"Css.CheckIfPropertyApplied"},"AutoCheck.Core.Utils.DataBaseNameToStudentName*":{"uid":"AutoCheck.Core.Utils.DataBaseNameToStudentName*","name":"DataBaseNameToStudentName","href":null,"commentId":"Overload:AutoCheck.Core.Utils.DataBaseNameToStudentName","isSpec":"True","fullName":"AutoCheck.Core.Utils.DataBaseNameToStudentName","nameWithType":"Utils.DataBaseNameToStudentName"},"System.Single":{"uid":"System.Single","name":"Single","href":null,"commentId":"T:System.Single","fullName":"System.Single","nameWithType":"Single"},"AutoCheck.Connectors.Postgres.Filter.Field*":{"uid":"AutoCheck.Connectors.Postgres.Filter.Field*","name":"Field","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Filter.Field","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Filter.Field","nameWithType":"Postgres.Filter.Field"},"AutoCheck.Connectors.RemoteShell.Password*":{"uid":"AutoCheck.Connectors.RemoteShell.Password*","name":"Password","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.Password","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.Password","nameWithType":"RemoteShell.Password"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CancelQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CancelQuestion","name":"CancelQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CancelQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CancelQuestion()","nameWithType":"Script<None>.CancelQuestion()","nameWithType.vb":"Script(Of None).CancelQuestion()"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.PrintScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.PrintScore","name":"PrintScore()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.PrintScore()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).PrintScore()","nameWithType":"Script<None>.PrintScore()","nameWithType.vb":"Script(Of None).PrintScore()"},"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor*":{"uid":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor*","name":"DAM_M10UF2_OdooCsvAssignment","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment","nameWithType":"DAM_M10UF2_OdooCsvAssignment.DAM_M10UF2_OdooCsvAssignment"},"AutoCheck.Core.Script`1":{"uid":"AutoCheck.Core.Script`1","name":"Script<T>","href":null,"commentId":"T:AutoCheck.Core.Script`1","isSpec":"True","name.vb":"Script(Of T)","fullName":"AutoCheck.Core.Script<T>","fullName.vb":"AutoCheck.Core.Script(Of T)","nameWithType":"Script<T>","nameWithType.vb":"Script(Of T)","summary":"<p sourcefile=\"api/AutoCheck.Core.Script-1.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a generic custom script.\nThe script is the main container for a set of instructions, which will test the correctness of an assignement.</p>\n"},"AutoCheck.Connectors.Postgres.GetViewDefinition(System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetViewDefinition(System.String)","name":"GetViewDefinition(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetViewDefinition(System.String)","fullName":"AutoCheck.Connectors.Postgres.GetViewDefinition(System.String)","nameWithType":"Postgres.GetViewDefinition(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Given a view, return its definition as a select query.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.Int32)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.Int32)","name":"CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Postgres.Operator, Int32)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.Int32)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator, System.Int32)","nameWithType":"Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Postgres.Operator, Int32)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"AutoCheck.Core.ScriptV2.Folder*":{"uid":"AutoCheck.Core.ScriptV2.Folder*","name":"Folder","href":null,"commentId":"Overload:AutoCheck.Core.ScriptV2.Folder","isSpec":"True","fullName":"AutoCheck.Core.ScriptV2.Folder","nameWithType":"ScriptV2.Folder"},"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments*":{"uid":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments*","name":"DefaultArguments","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.DefaultArguments","nameWithType":"DAM_M10UF2_OdooCsvAssignment.DefaultArguments"},"System.Exception.HelpLink":{"uid":"System.Exception.HelpLink","name":"HelpLink","href":null,"commentId":"P:System.Exception.HelpLink","fullName":"System.Exception.HelpLink","nameWithType":"Exception.HelpLink"},"AutoCheck.CopyDetectors":{"uid":"AutoCheck.CopyDetectors","name":"AutoCheck.CopyDetectors","href":null,"commentId":"N:AutoCheck.CopyDetectors","isSpec":"True","fullName":"AutoCheck.CopyDetectors","nameWithType":"AutoCheck.CopyDetectors"},"System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}":{"uid":"System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}","name":"Dictionary<HtmlNode, HtmlNode[]>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode[]}","isSpec":"True","name.vb":"Dictionary(Of HtmlNode, HtmlNode())","fullName":"System.Collections.Generic.Dictionary<HtmlAgilityPack.HtmlNode, HtmlAgilityPack.HtmlNode[]>","fullName.vb":"System.Collections.Generic.Dictionary(Of HtmlAgilityPack.HtmlNode, HtmlAgilityPack.HtmlNode())","nameWithType":"Dictionary<HtmlNode, HtmlNode[]>","nameWithType.vb":"Dictionary(Of HtmlNode, HtmlNode())"},"AutoCheck.Connectors.GDrive.CountFiles*":{"uid":"AutoCheck.Connectors.GDrive.CountFiles*","name":"CountFiles","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.CountFiles","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.CountFiles","nameWithType":"GDrive.CountFiles"},"AutoCheck.Connectors.Html":{"uid":"AutoCheck.Connectors.Html","name":"Html","href":null,"commentId":"T:AutoCheck.Connectors.Html","isSpec":"True","fullName":"AutoCheck.Connectors.Html","nameWithType":"Html","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Html.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with web files (html, css, etc.).</p>\n"},"AutoCheck.Checkers.Odoo.CheckIfProviderMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfProviderMatchesData*","name":"CheckIfProviderMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfProviderMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfProviderMatchesData","nameWithType":"Odoo.CheckIfProviderMatchesData"},"AutoCheck.Checkers.Postgres.Host":{"uid":"AutoCheck.Checkers.Postgres.Host","name":"Host","href":null,"commentId":"P:AutoCheck.Checkers.Postgres.Host","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Host","nameWithType":"Postgres.Host","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">PostgreSQL host address.</p>\n"},"AutoCheck.Checkers.Postgres.Connector*":{"uid":"AutoCheck.Checkers.Postgres.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Connector","nameWithType":"Postgres.Connector"},"AutoCheck.Core.Script`1.PrintScore*":{"uid":"AutoCheck.Core.Script`1.PrintScore*","name":"PrintScore","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.PrintScore","fullName.vb":"AutoCheck.Core.Script(Of T).PrintScore","nameWithType":"Script<T>.PrintScore","nameWithType.vb":"Script(Of T).PrintScore"},"AutoCheck.Core.ScriptGDrive`1.#ctor*":{"uid":"AutoCheck.Core.ScriptGDrive`1.#ctor*","name":"ScriptGDrive","href":null,"commentId":"Overload:AutoCheck.Core.ScriptGDrive`1.#ctor","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.ScriptGDrive","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).ScriptGDrive","nameWithType":"ScriptGDrive<T>.ScriptGDrive","nameWithType.vb":"ScriptGDrive(Of T).ScriptGDrive"},"AutoCheck.Connectors.Odoo.GetProviderData*":{"uid":"AutoCheck.Connectors.Odoo.GetProviderData*","name":"GetProviderData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetProviderData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetProviderData","nameWithType":"Odoo.GetProviderData"},"AutoCheck.Checkers.Postgres.Database*":{"uid":"AutoCheck.Checkers.Postgres.Database*","name":"Database","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.Database","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Database","nameWithType":"Postgres.Database"},"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfSelectMatchesData(String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfSelectMatchesData(String, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfSelectMatchesData(String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfSelectMatchesData(String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Compares if the given entry data matches with the current one stored in the database.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)","name":"CheckIfTableDeletesData(String, String)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String, System.String)","nameWithType":"Postgres.CheckIfTableDeletesData(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"AutoCheck.Core.Output.Indent*":{"uid":"AutoCheck.Core.Output.Indent*","name":"Indent","href":null,"commentId":"Overload:AutoCheck.Core.Output.Indent","isSpec":"True","fullName":"AutoCheck.Core.Output.Indent","nameWithType":"Output.Indent"},"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.String[])","name":"SelectData(String, String, String, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.String[])","name.vb":"SelectData(String, String, String, String())","fullName":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String, System.String())","nameWithType":"Postgres.SelectData(String, String, String, String[])","nameWithType.vb":"Postgres.SelectData(String, String, String, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects data from a single table, the 'ExecuteNonQuery' method can be used for complex selects (union, join, etc.).</p>\n"},"AutoCheck.Checkers.Html":{"uid":"AutoCheck.Checkers.Html","name":"Html","href":null,"commentId":"T:AutoCheck.Checkers.Html","isSpec":"True","fullName":"AutoCheck.Checkers.Html","nameWithType":"Html","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Html.yml\" sourcestartlinenumber=\"2\">Allows data validations over a WEB set of files.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableContainsData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData*","name":"CheckIfTableContainsData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableContainsData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData","nameWithType":"Postgres.CheckIfTableContainsData"},"AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesData*":{"uid":"AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesData*","name":"CheckIfRegistriesMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesData","nameWithType":"Csv.CheckIfRegistriesMatchesData"},"AutoCheck.Core.Script`1.IsQuestionOpen":{"uid":"AutoCheck.Core.Script`1.IsQuestionOpen","name":"IsQuestionOpen","href":null,"commentId":"P:AutoCheck.Core.Script`1.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of T).IsQuestionOpen","nameWithType":"Script<T>.IsQuestionOpen","nameWithType.vb":"Script(Of T).IsQuestionOpen"},"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter)":{"uid":"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter)","name":"Delete(Postgres.Destination, Postgres.Source, Postgres.Filter)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination, AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter)","nameWithType":"Postgres.Delete(Postgres.Destination, Postgres.Source, Postgres.Filter)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Deletes some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)","name":"CheckIfTableMatchesAmountOfRegisters(String, String, Int32)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.Int32)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.Int32)","nameWithType":"Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, Int32)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"AutoCheck.Connectors.Postgres.GetViewDefinition(AutoCheck.Connectors.Postgres.Source)":{"uid":"AutoCheck.Connectors.Postgres.GetViewDefinition(AutoCheck.Connectors.Postgres.Source)","name":"GetViewDefinition(Postgres.Source)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetViewDefinition(AutoCheck.Connectors.Postgres.Source)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetViewDefinition(AutoCheck.Connectors.Postgres.Source)","nameWithType":"Postgres.GetViewDefinition(Postgres.Source)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Given a view, return its definition as a select query.</p>\n"},"AutoCheck.Connectors.Postgres.DropDataBase":{"uid":"AutoCheck.Connectors.Postgres.DropDataBase","name":"DropDataBase()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DropDataBase","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DropDataBase()","nameWithType":"Postgres.DropDataBase()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Drops the current database.</p>\n"},"AutoCheck.Connectors.Postgres.Grant(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Grant(System.String,System.String)","name":"Grant(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Grant(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.Grant(System.String, System.String)","nameWithType":"Postgres.Grant(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Grants an item (role, group or permissio) to a destination (role, group or user).</p>\n"},"AutoCheck.Connectors.Postgres.RevokeRole*":{"uid":"AutoCheck.Connectors.Postgres.RevokeRole*","name":"RevokeRole","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.RevokeRole","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.RevokeRole","nameWithType":"Postgres.RevokeRole"},"AutoCheck.Core.Script{{T}}.Clean":{"uid":"AutoCheck.Core.Script{{T}}.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.Clean","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Clean()","fullName.vb":"AutoCheck.Core.Script(Of T).Clean()","nameWithType":"Script<T>.Clean()","nameWithType.vb":"Script(Of T).Clean()"},"System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)":{"uid":"System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)","name":"GetObjectData(SerializationInfo, StreamingContext)","href":null,"commentId":"M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)","fullName":"System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)","nameWithType":"Exception.GetObjectData(SerializationInfo, StreamingContext)"},"AutoCheck.Connectors.Postgres.DBName":{"uid":"AutoCheck.Connectors.Postgres.DBName","name":"DBName","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.DBName","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DBName","nameWithType":"Postgres.DBName","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database host address, with a running instance allowing remote connections.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.MaxScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.MaxScore","name":"MaxScore","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).MaxScore","nameWithType":"Script<Css>.MaxScore","nameWithType.vb":"Script(Of Css).MaxScore"},"AutoCheck.Exceptions.VariableInvalidException.#ctor*":{"uid":"AutoCheck.Exceptions.VariableInvalidException.#ctor*","name":"VariableInvalidException","href":null,"commentId":"Overload:AutoCheck.Exceptions.VariableInvalidException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.VariableInvalidException.VariableInvalidException","nameWithType":"VariableInvalidException.VariableInvalidException"},"AutoCheck.Checkers.Postgres.Dispose":{"uid":"AutoCheck.Checkers.Postgres.Dispose","name":"Dispose()","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Dispose()","nameWithType":"Postgres.Dispose()"},"System.Exception.GetBaseException":{"uid":"System.Exception.GetBaseException","name":"GetBaseException()","href":null,"commentId":"M:System.Exception.GetBaseException","fullName":"System.Exception.GetBaseException()","nameWithType":"Exception.GetBaseException()"},"AutoCheck.Core.Checker.CompareItems*":{"uid":"AutoCheck.Core.Checker.CompareItems*","name":"CompareItems","href":null,"commentId":"Overload:AutoCheck.Core.Checker.CompareItems","isSpec":"True","fullName":"AutoCheck.Core.Checker.CompareItems","nameWithType":"Checker.CompareItems"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CloseQuestion(System.String)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CloseQuestion(System.String)","name":"CloseQuestion(String)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CloseQuestion(System.String)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CloseQuestion(System.String)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CloseQuestion(System.String)","nameWithType":"Script<None>.CloseQuestion(String)","nameWithType.vb":"Script(Of None).CloseQuestion(String)"},"AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String,System.String,AutoCheck.Connectors.Postgres.Operator,System.Object)":{"uid":"AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String,System.String,AutoCheck.Connectors.Postgres.Operator,System.Object)","name":"CountRegisters(String, String, String, Postgres.Operator, Object)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String,System.String,AutoCheck.Connectors.Postgres.Operator,System.Object)","fullName":"AutoCheck.Connectors.Postgres.CountRegisters(System.String, System.String, System.String, AutoCheck.Connectors.Postgres.Operator, System.Object)","nameWithType":"Postgres.CountRegisters(String, String, String, Postgres.Operator, Object)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many registers appears in a table using the primary key as a filter, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.ScriptDB`1.Run*":{"uid":"AutoCheck.Core.ScriptDB`1.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Run","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Run","nameWithType":"ScriptDB<T>.Run","nameWithType.vb":"ScriptDB(Of T).Run"},"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment","name":"ASIX_M02UF3_ViewsExtendedAssignment","href":null,"commentId":"T:AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment","nameWithType":"ASIX_M02UF3_ViewsExtendedAssignment"},"AutoCheck.Core.Script{{T}}.CancelQuestion":{"uid":"AutoCheck.Core.Script{{T}}.CancelQuestion","name":"CancelQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CancelQuestion()","fullName.vb":"AutoCheck.Core.Script(Of T).CancelQuestion()","nameWithType":"Script<T>.CancelQuestion()","nameWithType.vb":"Script(Of T).CancelQuestion()"},"System.Object.MemberwiseClone":{"uid":"System.Object.MemberwiseClone","name":"MemberwiseClone()","href":null,"commentId":"M:System.Object.MemberwiseClone","fullName":"System.Object.MemberwiseClone()","nameWithType":"Object.MemberwiseClone()"},"AutoCheck.Core.Output":{"uid":"AutoCheck.Core.Output","name":"Output","href":null,"commentId":"T:AutoCheck.Core.Output","isSpec":"True","fullName":"AutoCheck.Core.Output","nameWithType":"Output","summary":"<p sourcefile=\"api/AutoCheck.Core.Output.yml\" sourcestartlinenumber=\"2\">This class is in charge of writing the output into the terminal.</p>\n"},"AutoCheck.CopyDetectors.PlainText.GetDetails*":{"uid":"AutoCheck.CopyDetectors.PlainText.GetDetails*","name":"GetDetails","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.GetDetails","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.GetDetails","nameWithType":"PlainText.GetDetails"},"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.Object,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.Object,System.String[])","name":"SelectData(String, String, String, Object, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.Object,System.String[])","name.vb":"SelectData(String, String, String, Object, String())","fullName":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String, System.Object, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String, System.Object, System.String())","nameWithType":"Postgres.SelectData(String, String, String, Object, String[])","nameWithType.vb":"Postgres.SelectData(String, String, String, Object, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects data from a single table, the 'ExecuteNonQuery' method can be used for complex selects (union, join, etc.).\nThe filter operator '=' will be used.</p>\n"},"AutoCheck.Connectors.CsvDocument.#ctor*":{"uid":"AutoCheck.Connectors.CsvDocument.#ctor*","name":"CsvDocument","href":null,"commentId":"Overload:AutoCheck.Connectors.CsvDocument.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument.CsvDocument","nameWithType":"CsvDocument.CsvDocument"},"AutoCheck.Core.ScriptGDrive`1.GDriveFolder*":{"uid":"AutoCheck.Core.ScriptGDrive`1.GDriveFolder*","name":"GDriveFolder","href":null,"commentId":"Overload:AutoCheck.Core.ScriptGDrive`1.GDriveFolder","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.GDriveFolder","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).GDriveFolder","nameWithType":"ScriptGDrive<T>.GDriveFolder","nameWithType.vb":"ScriptGDrive(Of T).GDriveFolder"},"AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String,System.String)","name":"DeleteData(String, String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.DeleteData(System.String, System.String, System.String, System.String)","nameWithType":"Postgres.DeleteData(String, String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Delete some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.Script`1.CancelQuestion":{"uid":"AutoCheck.Core.Script`1.CancelQuestion","name":"CancelQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script`1.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CancelQuestion()","fullName.vb":"AutoCheck.Core.Script(Of T).CancelQuestion()","nameWithType":"Script<T>.CancelQuestion()","nameWithType.vb":"Script(Of T).CancelQuestion()"},"AutoCheck.Connectors.Postgres.DropDataBase*":{"uid":"AutoCheck.Connectors.Postgres.DropDataBase*","name":"DropDataBase","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DropDataBase","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DropDataBase","nameWithType":"Postgres.DropDataBase"},"AutoCheck.Connectors.Postgres.DropRole(System.String)":{"uid":"AutoCheck.Connectors.Postgres.DropRole(System.String)","name":"DropRole(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DropRole(System.String)","fullName":"AutoCheck.Connectors.Postgres.DropRole(System.String)","nameWithType":"Postgres.DropRole(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Removes an existing role.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges*","name":"CheckIfTableMatchesPrivileges","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges","nameWithType":"Postgres.CheckIfTableMatchesPrivileges"},"AutoCheck.Core.Script{{T}}.Batch":{"uid":"AutoCheck.Core.Script{{T}}.Batch","name":"Batch()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Batch()","fullName.vb":"AutoCheck.Core.Script(Of T).Batch()","nameWithType":"Script<T>.Batch()","nameWithType.vb":"Script(Of T).Batch()"},"AutoCheck.Connectors.Postgres.DBUser":{"uid":"AutoCheck.Connectors.Postgres.DBUser","name":"DBUser","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.DBUser","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DBUser","nameWithType":"Postgres.DBUser","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database username, which will be used to perform operations.</p>\n"},"AutoCheck.Connectors.Odoo.GetInvoiceID*":{"uid":"AutoCheck.Connectors.Odoo.GetInvoiceID*","name":"GetInvoiceID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetInvoiceID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetInvoiceID","nameWithType":"Odoo.GetInvoiceID"},"AutoCheck.CopyDetectors.PlainText.Count*":{"uid":"AutoCheck.CopyDetectors.PlainText.Count*","name":"Count","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.Count","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Count","nameWithType":"PlainText.Count"},"AutoCheck.Core.Output.UndoStatus*":{"uid":"AutoCheck.Core.Output.UndoStatus*","name":"UndoStatus","href":null,"commentId":"Overload:AutoCheck.Core.Output.UndoStatus","isSpec":"True","fullName":"AutoCheck.Core.Output.UndoStatus","nameWithType":"Output.UndoStatus"},"AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run*":{"uid":"AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run","isSpec":"True","fullName":"AutoCheck.Scripts.GENERIC_GoogleDriveImporter.Run","nameWithType":"GENERIC_GoogleDriveImporter.Run"},"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,System.String)","name":"Select(Postgres.Source, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,System.String)","fullName":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source, System.String)","nameWithType":"Postgres.Select(Postgres.Source, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects some data from the database.</p>\n"},"AutoCheck.Core.Script`1.Path*":{"uid":"AutoCheck.Core.Script`1.Path*","name":"Path","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Path","fullName.vb":"AutoCheck.Core.Script(Of T).Path","nameWithType":"Script<T>.Path","nameWithType.vb":"Script(Of T).Path"},"AutoCheck.Core.CopyDetector.Compare":{"uid":"AutoCheck.Core.CopyDetector.Compare","name":"Compare()","href":null,"commentId":"M:AutoCheck.Core.CopyDetector.Compare","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.Compare()","nameWithType":"CopyDetector.Compare()"},"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.#ctor*":{"uid":"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.#ctor*","name":"DAM_M04UF1_Html5Assignment","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment.DAM_M04UF1_Html5Assignment","nameWithType":"DAM_M04UF1_Html5Assignment.DAM_M04UF1_Html5Assignment"},"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Clean*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Clean*","name":"Clean","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Clean","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.Clean","nameWithType":"ASIX_M02UF3_PermissionsAssignment.Clean"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}","name":"ScriptFiles<Css>","href":null,"commentId":"T:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}","isSpec":"True","name.vb":"ScriptFiles(Of Css)","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Css>","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Css)","nameWithType":"ScriptFiles<Css>","nameWithType.vb":"ScriptFiles(Of Css)"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.OpenQuestion(System.String,System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.OpenQuestion(System.String,System.String,System.Single)","name":"OpenQuestion(String, String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.OpenQuestion(System.String,System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.OpenQuestion(System.String, System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).OpenQuestion(System.String, System.String, System.Single)","nameWithType":"Script<Html>.OpenQuestion(String, String, Single)","nameWithType.vb":"Script(Of Html).OpenQuestion(String, String, Single)"},"AutoCheck.Connectors.Css.#ctor*":{"uid":"AutoCheck.Connectors.Css.#ctor*","name":"Css","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Css.Css","nameWithType":"Css.Css"},"AutoCheck.Core.Checker.Dispose*":{"uid":"AutoCheck.Core.Checker.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Core.Checker.Dispose","isSpec":"True","fullName":"AutoCheck.Core.Checker.Dispose","nameWithType":"Checker.Dispose"},"AutoCheck.Connectors.LocalShell.CountFiles(System.String,System.Boolean)":{"uid":"AutoCheck.Connectors.LocalShell.CountFiles(System.String,System.Boolean)","name":"CountFiles(String, Boolean)","href":null,"commentId":"M:AutoCheck.Connectors.LocalShell.CountFiles(System.String,System.Boolean)","fullName":"AutoCheck.Connectors.LocalShell.CountFiles(System.String, System.Boolean)","nameWithType":"LocalShell.CountFiles(String, Boolean)"},"AutoCheck.Checkers.GDrive.CheckIfFoldersMatchesAmount*":{"uid":"AutoCheck.Checkers.GDrive.CheckIfFoldersMatchesAmount*","name":"CheckIfFoldersMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.CheckIfFoldersMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.CheckIfFoldersMatchesAmount","nameWithType":"GDrive.CheckIfFoldersMatchesAmount"},"AutoCheck.Core.Connector.Dispose":{"uid":"AutoCheck.Core.Connector.Dispose","name":"Dispose()","href":null,"commentId":"M:AutoCheck.Core.Connector.Dispose","isSpec":"True","fullName":"AutoCheck.Core.Connector.Dispose()","nameWithType":"Connector.Dispose()"},"AutoCheck.CopyDetectors.PlainText.WordsAmountWeight":{"uid":"AutoCheck.CopyDetectors.PlainText.WordsAmountWeight","name":"WordsAmountWeight","href":null,"commentId":"P:AutoCheck.CopyDetectors.PlainText.WordsAmountWeight","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.WordsAmountWeight","nameWithType":"PlainText.WordsAmountWeight","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">The weight that different words counting will have when computing the global matching percentage.</p>\n"},"AutoCheck.Connectors.RemoteShell.GetFile*":{"uid":"AutoCheck.Connectors.RemoteShell.GetFile*","name":"GetFile","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.GetFile","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.GetFile","nameWithType":"RemoteShell.GetFile"},"AutoCheck.Connectors.Postgres.Source.#ctor*":{"uid":"AutoCheck.Connectors.Postgres.Source.#ctor*","name":"Source","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Source.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.Source","nameWithType":"Postgres.Source.Source"},"AutoCheck.Connectors.Postgres.Insert*":{"uid":"AutoCheck.Connectors.Postgres.Insert*","name":"Insert","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Insert","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Insert","nameWithType":"Postgres.Insert"},"AutoCheck.Exceptions.TableInconsistencyException":{"uid":"AutoCheck.Exceptions.TableInconsistencyException","name":"TableInconsistencyException","href":null,"commentId":"T:AutoCheck.Exceptions.TableInconsistencyException","isSpec":"True","fullName":"AutoCheck.Exceptions.TableInconsistencyException","nameWithType":"TableInconsistencyException"},"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableUpdatesData(String, String, String, Object, Operator, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableUpdatesData(String, String, String, Object, Operator, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, AutoCheck.Core.Operator, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, AutoCheck.Core.Operator, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableUpdatesData(String, String, String, Object, Operator, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableUpdatesData(String, String, String, Object, Operator, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be updated into the table.</p>\n"},"AutoCheck.Checkers.Odoo.CheckIfUserMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfUserMatchesData*","name":"CheckIfUserMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfUserMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfUserMatchesData","nameWithType":"Odoo.CheckIfUserMatchesData"},"AutoCheck.Core.ScriptDB`1.Run":{"uid":"AutoCheck.Core.ScriptDB`1.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB`1.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Run()","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Run()","nameWithType":"ScriptDB<T>.Run()","nameWithType.vb":"ScriptDB(Of T).Run()"},"AutoCheck.Connectors.Postgres.ExistsUser*":{"uid":"AutoCheck.Connectors.Postgres.ExistsUser*","name":"ExistsUser","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ExistsUser","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExistsUser","nameWithType":"Postgres.ExistsUser"},"AutoCheck.CopyDetectors.PlainText.Load*":{"uid":"AutoCheck.CopyDetectors.PlainText.Load*","name":"Load","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.Load","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Load","nameWithType":"PlainText.Load"},"AutoCheck.Connectors.Odoo.GetPosSaleCode*":{"uid":"AutoCheck.Connectors.Odoo.GetPosSaleCode*","name":"GetPosSaleCode","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetPosSaleCode","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetPosSaleCode","nameWithType":"Odoo.GetPosSaleCode"},"AutoCheck.Exceptions.ArgumentInvalidException":{"uid":"AutoCheck.Exceptions.ArgumentInvalidException","name":"ArgumentInvalidException","href":null,"commentId":"T:AutoCheck.Exceptions.ArgumentInvalidException","isSpec":"True","fullName":"AutoCheck.Exceptions.ArgumentInvalidException","nameWithType":"ArgumentInvalidException"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Clean":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Clean","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Clean()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Clean()","nameWithType":"ScriptDB<None>.Clean()","nameWithType.vb":"ScriptDB(Of None).Clean()"},"AutoCheck.Core.Script`1.Batch*":{"uid":"AutoCheck.Core.Script`1.Batch*","name":"Batch","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Batch","fullName.vb":"AutoCheck.Core.Script(Of T).Batch","nameWithType":"Script<T>.Batch","nameWithType.vb":"Script(Of T).Batch"},"AutoCheck.Connectors.Postgres.UpdateData*":{"uid":"AutoCheck.Connectors.Postgres.UpdateData*","name":"UpdateData","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.UpdateData","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.UpdateData","nameWithType":"Postgres.UpdateData"},"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.Run*":{"uid":"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.Run","nameWithType":"DAM_M04UF1_Css3Assignment.Run"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableMatchesData(String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableMatchesData(String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableMatchesData(String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableMatchesData(String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Compares if the given entry data matches with the current one stored in the database.</p>\n"},"AutoCheck.Connectors.Postgres.GetMembership*":{"uid":"AutoCheck.Connectors.Postgres.GetMembership*","name":"GetMembership","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetMembership","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetMembership","nameWithType":"Postgres.GetMembership"},"AutoCheck.Connectors.LocalShell.GetFile(System.String,System.String,System.Boolean)":{"uid":"AutoCheck.Connectors.LocalShell.GetFile(System.String,System.String,System.Boolean)","name":"GetFile(String, String, Boolean)","href":null,"commentId":"M:AutoCheck.Connectors.LocalShell.GetFile(System.String,System.String,System.Boolean)","fullName":"AutoCheck.Connectors.LocalShell.GetFile(System.String, System.String, System.Boolean)","nameWithType":"LocalShell.GetFile(String, String, Boolean)"},"AutoCheck.Core.Script`1.DefaultArguments":{"uid":"AutoCheck.Core.Script`1.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.Script`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.DefaultArguments()","fullName.vb":"AutoCheck.Core.Script(Of T).DefaultArguments()","nameWithType":"Script<T>.DefaultArguments()","nameWithType.vb":"Script(Of T).DefaultArguments()"},"AutoCheck.Core.Script{{T}}.OpenQuestion(System.String,System.String,System.Single)":{"uid":"AutoCheck.Core.Script{{T}}.OpenQuestion(System.String,System.String,System.Single)","name":"OpenQuestion(String, String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.OpenQuestion(System.String,System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.String, System.Single)","nameWithType":"Script<T>.OpenQuestion(String, String, Single)","nameWithType.vb":"Script(Of T).OpenQuestion(String, String, Single)"},"AutoCheck.Connectors.Moodle":{"uid":"AutoCheck.Connectors.Moodle","name":"Moodle","href":null,"commentId":"T:AutoCheck.Connectors.Moodle","isSpec":"True","fullName":"AutoCheck.Connectors.Moodle","nameWithType":"Moodle","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Moodle.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with a Moodle instance.</p>\n"},"AutoCheck.Connectors.Postgres.CountRegisters*":{"uid":"AutoCheck.Connectors.Postgres.CountRegisters*","name":"CountRegisters","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CountRegisters","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountRegisters","nameWithType":"Postgres.CountRegisters"},"AutoCheck.Connectors.RemoteShell.Port*":{"uid":"AutoCheck.Connectors.RemoteShell.Port*","name":"Port","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.Port","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.Port","nameWithType":"RemoteShell.Port"},"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.#ctor*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.#ctor*","name":"ASIX_M02UF3_PermissionsAssignment","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.ASIX_M02UF3_PermissionsAssignment","nameWithType":"ASIX_M02UF3_PermissionsAssignment.ASIX_M02UF3_PermissionsAssignment"},"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.Run*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.Run","nameWithType":"ASIX_M02UF3_ViewsAssignment.Run"},"AutoCheck.Exceptions.QueryInvalidException":{"uid":"AutoCheck.Exceptions.QueryInvalidException","name":"QueryInvalidException","href":null,"commentId":"T:AutoCheck.Exceptions.QueryInvalidException","isSpec":"True","fullName":"AutoCheck.Exceptions.QueryInvalidException","nameWithType":"QueryInvalidException"},"AutoCheck.Core.Output.ResetIndent*":{"uid":"AutoCheck.Core.Output.ResetIndent*","name":"ResetIndent","href":null,"commentId":"Overload:AutoCheck.Core.Output.ResetIndent","isSpec":"True","fullName":"AutoCheck.Core.Output.ResetIndent","nameWithType":"Output.ResetIndent"},"AutoCheck.Connectors.GDrive.Drive*":{"uid":"AutoCheck.Connectors.GDrive.Drive*","name":"Drive","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.Drive","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.Drive","nameWithType":"GDrive.Drive"},"AutoCheck.Core.ScriptV2":{"uid":"AutoCheck.Core.ScriptV2","name":"ScriptV2","href":null,"commentId":"T:AutoCheck.Core.ScriptV2","isSpec":"True","fullName":"AutoCheck.Core.ScriptV2","nameWithType":"ScriptV2"},"AutoCheck.Connectors.Postgres.Host*":{"uid":"AutoCheck.Connectors.Postgres.Host*","name":"Host","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Host","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Host","nameWithType":"Postgres.Host"},"AutoCheck.Connectors.Postgres.Insert``1(AutoCheck.Connectors.Postgres.Destination,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Insert``1(AutoCheck.Connectors.Postgres.Destination,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Insert<T>(Postgres.Destination, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Insert``1(AutoCheck.Connectors.Postgres.Destination,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Insert(Of T)(Postgres.Destination, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Insert<T>(AutoCheck.Connectors.Postgres.Destination, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Insert(Of T)(AutoCheck.Connectors.Postgres.Destination, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Insert<T>(Postgres.Destination, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Insert(Of T)(Postgres.Destination, String, Dictionary(Of String, Object))"},"AutoCheck.Core.ScriptFiles`1.DefaultArguments":{"uid":"AutoCheck.Core.ScriptFiles`1.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).DefaultArguments()","nameWithType":"ScriptFiles<T>.DefaultArguments()","nameWithType.vb":"ScriptFiles(Of T).DefaultArguments()"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CloseQuestion(System.String)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CloseQuestion(System.String)","name":"CloseQuestion(String)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CloseQuestion(System.String)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.CloseQuestion(System.String)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).CloseQuestion(System.String)","nameWithType":"Script<Css>.CloseQuestion(String)","nameWithType.vb":"Script(Of Css).CloseQuestion(String)"},"AutoCheck.Connectors.Csv.#ctor*":{"uid":"AutoCheck.Connectors.Csv.#ctor*","name":"Csv","href":null,"commentId":"Overload:AutoCheck.Connectors.Csv.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Csv.Csv","nameWithType":"Csv.Csv"},"AutoCheck.Core.Utils.FolderNameToStudentName*":{"uid":"AutoCheck.Core.Utils.FolderNameToStudentName*","name":"FolderNameToStudentName","href":null,"commentId":"Overload:AutoCheck.Core.Utils.FolderNameToStudentName","isSpec":"True","fullName":"AutoCheck.Core.Utils.FolderNameToStudentName","nameWithType":"Utils.FolderNameToStudentName"},"AutoCheck.Checkers.Postgres.CheckIfTableExists*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableExists*","name":"CheckIfTableExists","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableExists","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableExists","nameWithType":"Postgres.CheckIfTableExists"},"AutoCheck.CopyDetectors.PlainText.Compare":{"uid":"AutoCheck.CopyDetectors.PlainText.Compare","name":"Compare()","href":null,"commentId":"M:AutoCheck.CopyDetectors.PlainText.Compare","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Compare()","nameWithType":"PlainText.Compare()","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">Compares all the previously loaded files, between each other.</p>\n"},"AutoCheck.Connectors.Postgres.Filter.ToString*":{"uid":"AutoCheck.Connectors.Postgres.Filter.ToString*","name":"ToString","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Filter.ToString","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Filter.ToString","nameWithType":"Postgres.Filter.ToString"},"AutoCheck.Connectors.Odoo.GetUserData*":{"uid":"AutoCheck.Connectors.Odoo.GetUserData*","name":"GetUserData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetUserData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetUserData","nameWithType":"Odoo.GetUserData"},"HtmlAgilityPack.HtmlNode[][]":{"uid":"HtmlAgilityPack.HtmlNode[][]","name":"HtmlNode[][]","href":null,"name.vb":"HtmlNode()()","fullName":"HtmlAgilityPack.HtmlNode[][]","fullName.vb":"HtmlAgilityPack.HtmlNode()()","nameWithType":"HtmlNode[][]","nameWithType.vb":"HtmlNode()()"},"AutoCheck.Connectors.Odoo.GetSaleCode*":{"uid":"AutoCheck.Connectors.Odoo.GetSaleCode*","name":"GetSaleCode","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetSaleCode","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetSaleCode","nameWithType":"Odoo.GetSaleCode"},"AutoCheck.Core.ScriptDB`1.Clean":{"uid":"AutoCheck.Core.ScriptDB`1.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB`1.Clean","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Clean()","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Clean()","nameWithType":"ScriptDB<T>.Clean()","nameWithType.vb":"ScriptDB(Of T).Clean()"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}","name":"Script<SqlLog>","href":null,"commentId":"T:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}","isSpec":"True","name.vb":"Script(Of SqlLog)","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog)","nameWithType":"Script<SqlLog>","nameWithType.vb":"Script(Of SqlLog)"},"AutoCheck.Connectors.Postgres.Filter.Operator*":{"uid":"AutoCheck.Connectors.Postgres.Filter.Operator*","name":"Operator","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Filter.Operator","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Filter.Operator","nameWithType":"Postgres.Filter.Operator"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.PrintScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.PrintScore","name":"PrintScore()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.PrintScore()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).PrintScore()","nameWithType":"Script<Css>.PrintScore()","nameWithType.vb":"Script(Of Css).PrintScore()"},"System.IDisposable":{"uid":"System.IDisposable","name":"IDisposable","href":null,"commentId":"T:System.IDisposable","fullName":"System.IDisposable","nameWithType":"IDisposable"},"AutoCheck.Checkers.GDrive.Connector*":{"uid":"AutoCheck.Checkers.GDrive.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.Connector","nameWithType":"GDrive.Connector"},"AutoCheck.Core.ScriptDB`1.DataBase*":{"uid":"AutoCheck.Core.ScriptDB`1.DataBase*","name":"DataBase","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.DataBase","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.DataBase","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).DataBase","nameWithType":"ScriptDB<T>.DataBase","nameWithType.vb":"ScriptDB(Of T).DataBase"},"AutoCheck.Core.CopyDetector.Compare*":{"uid":"AutoCheck.Core.CopyDetector.Compare*","name":"Compare","href":null,"commentId":"Overload:AutoCheck.Core.CopyDetector.Compare","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.Compare","nameWithType":"CopyDetector.Compare"},"AutoCheck.Connectors.LocalShell.Dispose*":{"uid":"AutoCheck.Connectors.LocalShell.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.Dispose","nameWithType":"LocalShell.Dispose"},"AutoCheck.Connectors.CsvDocument.Headers*":{"uid":"AutoCheck.Connectors.CsvDocument.Headers*","name":"Headers","href":null,"commentId":"Overload:AutoCheck.Connectors.CsvDocument.Headers","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument.Headers","nameWithType":"CsvDocument.Headers"},"AutoCheck.Connectors.Postgres.Source.Schema*":{"uid":"AutoCheck.Connectors.Postgres.Source.Schema*","name":"Schema","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Source.Schema","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.Schema","nameWithType":"Postgres.Source.Schema"},"AutoCheck.Core.ScriptFiles`1.#ctor*":{"uid":"AutoCheck.Core.ScriptFiles`1.#ctor*","name":"ScriptFiles","href":null,"commentId":"Overload:AutoCheck.Core.ScriptFiles`1.#ctor","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.ScriptFiles","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).ScriptFiles","nameWithType":"ScriptFiles<T>.ScriptFiles","nameWithType.vb":"ScriptFiles(Of T).ScriptFiles"},"AutoCheck.Core.Script{{T}}":{"uid":"AutoCheck.Core.Script{{T}}","name":"Script<T>","href":null,"commentId":"T:AutoCheck.Core.Script{`0}","isSpec":"True","name.vb":"Script(Of T)","fullName":"AutoCheck.Core.Script<T>","fullName.vb":"AutoCheck.Core.Script(Of T)","nameWithType":"Script<T>","nameWithType.vb":"Script(Of T)"},"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String)","name":"UpdateData(Dictionary<String, Object>, String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String)","name.vb":"UpdateData(Dictionary(Of String, Object), String, String, String)","fullName":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String, System.String)","fullName.vb":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String, System.String)","nameWithType":"Postgres.UpdateData(Dictionary<String, Object>, String, String, String)","nameWithType.vb":"Postgres.UpdateData(Dictionary(Of String, Object), String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Update some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Connectors.Postgres.Dispose*":{"uid":"AutoCheck.Connectors.Postgres.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Dispose","nameWithType":"Postgres.Dispose"},"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult*":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult*","name":"CheckIfCommandMatchesResult","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult","nameWithType":"LocalShell.CheckIfCommandMatchesResult"},"System.Collections.Generic.Dictionary{System.String,System.Int32}":{"uid":"System.Collections.Generic.Dictionary{System.String,System.Int32}","name":"Dictionary<String, Int32>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{System.String,System.Int32}","isSpec":"True","name.vb":"Dictionary(Of String, Int32)","fullName":"System.Collections.Generic.Dictionary<System.String, System.Int32>","fullName.vb":"System.Collections.Generic.Dictionary(Of System.String, System.Int32)","nameWithType":"Dictionary<String, Int32>","nameWithType.vb":"Dictionary(Of String, Int32)"},"AutoCheck.Core.CopyDetector.Load*":{"uid":"AutoCheck.Core.CopyDetector.Load*","name":"Load","href":null,"commentId":"Overload:AutoCheck.Core.CopyDetector.Load","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.Load","nameWithType":"CopyDetector.Load"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)","name":"CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Int32)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String,System.String,System.String,System.Object,System.Int32)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters(System.String, System.String, System.String, System.Object, System.Int32)","nameWithType":"Postgres.CheckIfTableMatchesAmountOfRegisters(String, String, String, Object, Int32)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"AutoCheck.Connectors.Postgres.Source.Table*":{"uid":"AutoCheck.Connectors.Postgres.Source.Table*","name":"Table","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Source.Table","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.Table","nameWithType":"Postgres.Source.Table"},"AutoCheck.Connectors.GDrive.CopyFile*":{"uid":"AutoCheck.Connectors.GDrive.CopyFile*","name":"CopyFile","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.CopyFile","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.CopyFile","nameWithType":"GDrive.CopyFile"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.OpenQuestion(System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.OpenQuestion(System.String,System.Single)","name":"OpenQuestion(String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.OpenQuestion(System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.OpenQuestion(System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).OpenQuestion(System.String, System.Single)","nameWithType":"Script<Html>.OpenQuestion(String, Single)","nameWithType.vb":"Script(Of Html).OpenQuestion(String, Single)"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Path":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Path","name":"Path","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.Path","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).Path","nameWithType":"Script<SqlLog>.Path","nameWithType.vb":"Script(Of SqlLog).Path"},"AutoCheck.Core.CopyDetector.GetDetails(System.String)":{"uid":"AutoCheck.Core.CopyDetector.GetDetails(System.String)","name":"GetDetails(String)","href":null,"commentId":"M:AutoCheck.Core.CopyDetector.GetDetails(System.String)","fullName":"AutoCheck.Core.CopyDetector.GetDetails(System.String)","nameWithType":"CopyDetector.GetDetails(String)"},"System.ComponentModel":{"uid":"System.ComponentModel","name":"System.ComponentModel","href":null,"commentId":"N:System.ComponentModel","fullName":"System.ComponentModel","nameWithType":"System.ComponentModel"},"AutoCheck.Exceptions.RegexInvalidException":{"uid":"AutoCheck.Exceptions.RegexInvalidException","name":"RegexInvalidException","href":null,"commentId":"T:AutoCheck.Exceptions.RegexInvalidException","isSpec":"True","fullName":"AutoCheck.Exceptions.RegexInvalidException","nameWithType":"RegexInvalidException"},"Npgsql":{"uid":"Npgsql","name":"Npgsql","href":null,"commentId":"N:Npgsql","fullName":"Npgsql","nameWithType":"Npgsql"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Batch":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Batch","name":"Batch()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Batch()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Batch()","nameWithType":"Script<None>.Batch()","nameWithType.vb":"Script(Of None).Batch()"},"ExCSS.Stylesheet":{"uid":"ExCSS.Stylesheet","name":"Stylesheet","href":null,"commentId":"T:ExCSS.Stylesheet","fullName":"ExCSS.Stylesheet","nameWithType":"Stylesheet"},"AutoCheck.Connectors.Postgres.Revoke(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Revoke(System.String,System.String)","name":"Revoke(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Revoke(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.Revoke(System.String, System.String)","nameWithType":"Postgres.Revoke(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Revokes an item (role, group or permissio) from a destination (role, group or user).</p>\n"},"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Filter,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Filter,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Update(Postgres.Destination, Postgres.Filter, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Filter,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Update(Postgres.Destination, Postgres.Filter, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination, AutoCheck.Connectors.Postgres.Filter, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination, AutoCheck.Connectors.Postgres.Filter, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Update(Postgres.Destination, Postgres.Filter, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Update(Postgres.Destination, Postgres.Filter, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Updates some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Checkers.Odoo.CheckIfScrappedStockMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfScrappedStockMatchesData*","name":"CheckIfScrappedStockMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfScrappedStockMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfScrappedStockMatchesData","nameWithType":"Odoo.CheckIfScrappedStockMatchesData"},"AutoCheck.Checkers.Postgres.User":{"uid":"AutoCheck.Checkers.Postgres.User","name":"User","href":null,"commentId":"P:AutoCheck.Checkers.Postgres.User","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.User","nameWithType":"Postgres.User","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database username, which will be used to perform operations.</p>\n"},"AutoCheck.Connectors.Postgres.CreateDataBase(System.String)":{"uid":"AutoCheck.Connectors.Postgres.CreateDataBase(System.String)","name":"CreateDataBase(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CreateDataBase(System.String)","fullName":"AutoCheck.Connectors.Postgres.CreateDataBase(System.String)","nameWithType":"Postgres.CreateDataBase(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Creates a new database instance using an SQL Dump file.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)","name":"CheckIfSchemaMatchesPrivileges(String, String, String)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String,System.String,System.String)","fullName":"AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges(System.String, System.String, System.String)","nameWithType":"Postgres.CheckIfSchemaMatchesPrivileges(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Compares a set of expected privileges with the current schema's ones.</p>\n"},"System.String":{"uid":"System.String","name":"String","href":null,"commentId":"T:System.String","fullName":"System.String","nameWithType":"String"},"AutoCheck.Core.Script{{T}}.Score":{"uid":"AutoCheck.Core.Script{{T}}.Score","name":"Score","href":null,"commentId":"P:AutoCheck.Core.Script{`0}.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Score","fullName.vb":"AutoCheck.Core.Script(Of T).Score","nameWithType":"Script<T>.Score","nameWithType.vb":"Script(Of T).Score"},"AutoCheck.Checkers.Odoo.CheckIfPosSaleMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfPosSaleMatchesData*","name":"CheckIfPosSaleMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfPosSaleMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfPosSaleMatchesData","nameWithType":"Odoo.CheckIfPosSaleMatchesData"},"AutoCheck.Exceptions.StyleNotAppliedException":{"uid":"AutoCheck.Exceptions.StyleNotAppliedException","name":"StyleNotAppliedException","href":null,"commentId":"T:AutoCheck.Exceptions.StyleNotAppliedException","isSpec":"True","fullName":"AutoCheck.Exceptions.StyleNotAppliedException","nameWithType":"StyleNotAppliedException"},"AutoCheck.Connectors.CsvDocument":{"uid":"AutoCheck.Connectors.CsvDocument","name":"CsvDocument","href":null,"commentId":"T:AutoCheck.Connectors.CsvDocument","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument","nameWithType":"CsvDocument","summary":"<p sourcefile=\"api/AutoCheck.Connectors.CsvDocument.yml\" sourcestartlinenumber=\"2\">Contains a CSV document content (without data mappings, all the content will be a string).</p>\n"},"AutoCheck.Checkers.LocalShell.Dispose":{"uid":"AutoCheck.Checkers.LocalShell.Dispose","name":"Dispose()","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.Dispose()","nameWithType":"LocalShell.Dispose()","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Disposes the object releasing its unmanaged properties.</p>\n"},"System.Collections.Generic.Dictionary`2":{"uid":"System.Collections.Generic.Dictionary`2","name":"Dictionary<TKey, TValue>","href":null,"commentId":"T:System.Collections.Generic.Dictionary`2","name.vb":"Dictionary(Of TKey, TValue)","fullName":"System.Collections.Generic.Dictionary<TKey, TValue>","fullName.vb":"System.Collections.Generic.Dictionary(Of TKey, TValue)","nameWithType":"Dictionary<TKey, TValue>","nameWithType.vb":"Dictionary(Of TKey, TValue)"},"AutoCheck.Core.Script`1.CloseQuestion*":{"uid":"AutoCheck.Core.Script`1.CloseQuestion*","name":"CloseQuestion","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.CloseQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CloseQuestion","fullName.vb":"AutoCheck.Core.Script(Of T).CloseQuestion","nameWithType":"Script<T>.CloseQuestion","nameWithType.vb":"Script(Of T).CloseQuestion"},"AutoCheck.Exceptions.QueryInvalidException.#ctor*":{"uid":"AutoCheck.Exceptions.QueryInvalidException.#ctor*","name":"QueryInvalidException","href":null,"commentId":"Overload:AutoCheck.Exceptions.QueryInvalidException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.QueryInvalidException.QueryInvalidException","nameWithType":"QueryInvalidException.QueryInvalidException"},"AutoCheck.Checkers.GDrive":{"uid":"AutoCheck.Checkers.GDrive","name":"GDrive","href":null,"commentId":"T:AutoCheck.Checkers.GDrive","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive","nameWithType":"GDrive","summary":"<p sourcefile=\"api/AutoCheck.Checkers.GDrive.yml\" sourcestartlinenumber=\"2\">Allows data validations over a local shell (running local commands).</p>\n"},"Google.Apis.Drive.v3.DriveService":{"uid":"Google.Apis.Drive.v3.DriveService","name":"DriveService","href":null,"commentId":"T:Google.Apis.Drive.v3.DriveService","fullName":"Google.Apis.Drive.v3.DriveService","nameWithType":"DriveService"},"AutoCheck.Connectors.Postgres.TestConnection*":{"uid":"AutoCheck.Connectors.Postgres.TestConnection*","name":"TestConnection","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.TestConnection","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.TestConnection","nameWithType":"Postgres.TestConnection"},"AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})":{"uid":"AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})","name":"EvalQuestion(List<String>)","href":null,"commentId":"M:AutoCheck.Core.Script`1.EvalQuestion(System.Collections.Generic.List{System.String})","name.vb":"EvalQuestion(List(Of String))","fullName":"AutoCheck.Core.Script<T>.EvalQuestion(System.Collections.Generic.List<System.String>)","fullName.vb":"AutoCheck.Core.Script(Of T).EvalQuestion(System.Collections.Generic.List(Of System.String))","nameWithType":"Script<T>.EvalQuestion(List<String>)","nameWithType.vb":"Script(Of T).EvalQuestion(List(Of String))"},"AutoCheck.Connectors.Postgres.ExecuteScalar``1(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ExecuteScalar``1(System.String)","name":"ExecuteScalar<T>(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExecuteScalar``1(System.String)","name.vb":"ExecuteScalar(Of T)(String)","fullName":"AutoCheck.Connectors.Postgres.ExecuteScalar<T>(System.String)","fullName.vb":"AutoCheck.Connectors.Postgres.ExecuteScalar(Of T)(System.String)","nameWithType":"Postgres.ExecuteScalar<T>(String)","nameWithType.vb":"Postgres.ExecuteScalar(Of T)(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Runs a query that produces an output as a single data.</p>\n"},"AutoCheck.Connectors.GDrive.GetFile*":{"uid":"AutoCheck.Connectors.GDrive.GetFile*","name":"GetFile","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.GetFile","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.GetFile","nameWithType":"GDrive.GetFile"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.EvalQuestion(System.Collections.Generic.List{System.String})":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.EvalQuestion(System.Collections.Generic.List{System.String})","name":"EvalQuestion(List<String>)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.EvalQuestion(System.Collections.Generic.List{System.String})","isSpec":"True","name.vb":"EvalQuestion(List(Of String))","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.EvalQuestion(System.Collections.Generic.List<System.String>)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).EvalQuestion(System.Collections.Generic.List(Of System.String))","nameWithType":"Script<SqlLog>.EvalQuestion(List<String>)","nameWithType.vb":"Script(Of SqlLog).EvalQuestion(List(Of String))"},"AutoCheck.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)","name":"CheckIfEntryAdded(String, String, String, Int32)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfEntryAdded(System.String,System.String,System.String,System.Int32)","fullName":"AutoCheck.Checkers.Postgres.CheckIfEntryAdded(System.String, System.String, System.String, System.Int32)","nameWithType":"Postgres.CheckIfEntryAdded(String, String, String, Int32)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if a new item has been added to a table, looking for a greater ID (pkField &gt; lastPkValue).</p>\n"},"HtmlAgilityPack":{"uid":"HtmlAgilityPack","name":"HtmlAgilityPack","href":null,"commentId":"N:HtmlAgilityPack","fullName":"HtmlAgilityPack","nameWithType":"HtmlAgilityPack"},"AutoCheck.Connectors.Html.ValidateTable*":{"uid":"AutoCheck.Connectors.Html.ValidateTable*","name":"ValidateTable","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.ValidateTable","isSpec":"True","fullName":"AutoCheck.Connectors.Html.ValidateTable","nameWithType":"Html.ValidateTable"},"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableContainsData(String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableContainsData(String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableContainsData(String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableContainsData(String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if the given data performs an exact match with any row stored in the database.</p>\n"},"AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesAmount*":{"uid":"AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesAmount*","name":"CheckIfRegistriesMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.Csv.CheckIfRegistriesMatchesAmount","nameWithType":"Csv.CheckIfRegistriesMatchesAmount"},"AutoCheck.Connectors.Postgres.Database*":{"uid":"AutoCheck.Connectors.Postgres.Database*","name":"Database","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Database","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Database","nameWithType":"Postgres.Database"},"AutoCheck.Core.ScriptDB`1":{"uid":"AutoCheck.Core.ScriptDB`1","name":"ScriptDB<T>","href":null,"commentId":"T:AutoCheck.Core.ScriptDB`1","isSpec":"True","name.vb":"ScriptDB(Of T)","fullName":"AutoCheck.Core.ScriptDB<T>","fullName.vb":"AutoCheck.Core.ScriptDB(Of T)","nameWithType":"ScriptDB<T>","nameWithType.vb":"ScriptDB(Of T)","summary":"<p sourcefile=\"api/AutoCheck.Core.ScriptDB-1.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a database oriented custom script.\nThe script is the main container for a set of instructions, which will test the correctness of an assignement.</p>\n"},"AutoCheck.Connectors.Zip":{"uid":"AutoCheck.Connectors.Zip","name":"Zip","href":null,"commentId":"T:AutoCheck.Connectors.Zip","isSpec":"True","fullName":"AutoCheck.Connectors.Zip","nameWithType":"Zip","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Zip.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with ZIP files.</p>\n"},"AutoCheck.Connectors.Html.Raw*":{"uid":"AutoCheck.Connectors.Html.Raw*","name":"Raw","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.Raw","isSpec":"True","fullName":"AutoCheck.Connectors.Html.Raw","nameWithType":"Html.Raw"},"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)","name":"CheckIfCommandMatchesResult(String, Int32, Connector.Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.Int32,AutoCheck.Core.Connector.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String, System.Int32, AutoCheck.Core.Connector.Operator)","nameWithType":"LocalShell.CheckIfCommandMatchesResult(String, Int32, Connector.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks if the executed command produces the expected result.</p>\n"},"AutoCheck.Core.CopyDetector.Count*":{"uid":"AutoCheck.Core.CopyDetector.Count*","name":"Count","href":null,"commentId":"Overload:AutoCheck.Core.CopyDetector.Count","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.Count","nameWithType":"CopyDetector.Count"},"AutoCheck.Connectors.Postgres.GetRoleMembership*":{"uid":"AutoCheck.Connectors.Postgres.GetRoleMembership*","name":"GetRoleMembership","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetRoleMembership","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetRoleMembership","nameWithType":"Postgres.GetRoleMembership"},"AutoCheck.Connectors.Odoo.GetCompanyData*":{"uid":"AutoCheck.Connectors.Odoo.GetCompanyData*","name":"GetCompanyData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetCompanyData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetCompanyData","nameWithType":"Odoo.GetCompanyData"},"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.Username":{"uid":"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.Username","name":"Username","href":null,"commentId":"P:AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<AutoCheck.CopyDetectors.None>.Username","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of AutoCheck.CopyDetectors.None).Username","nameWithType":"ScriptGDrive<None>.Username","nameWithType.vb":"ScriptGDrive(Of None).Username"},"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String[])","name":"Select(Postgres.Source, Postgres.Filter, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String[])","name.vb":"Select(Postgres.Source, Postgres.Filter, String())","fullName":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.String())","nameWithType":"Postgres.Select(Postgres.Source, Postgres.Filter, String[])","nameWithType.vb":"Postgres.Select(Postgres.Source, Postgres.Filter, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects some data from the database.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.OpenQuestion(System.String,System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.OpenQuestion(System.String,System.String,System.Single)","name":"OpenQuestion(String, String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.OpenQuestion(System.String,System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.OpenQuestion(System.String, System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).OpenQuestion(System.String, System.String, System.Single)","nameWithType":"Script<SqlLog>.OpenQuestion(String, String, Single)","nameWithType.vb":"Script(Of SqlLog).OpenQuestion(String, String, Single)"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Run":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Run()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Run()","nameWithType":"ScriptDB<None>.Run()","nameWithType.vb":"ScriptDB(Of None).Run()"},"AutoCheck.Connectors.Postgres.Dispose":{"uid":"AutoCheck.Connectors.Postgres.Dispose","name":"Dispose()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Dispose()","nameWithType":"Postgres.Dispose()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Cleans and releases memory for unnatended objects.</p>\n"},"AutoCheck.Checkers.LocalShell.Connector":{"uid":"AutoCheck.Checkers.LocalShell.Connector","name":"Connector","href":null,"commentId":"P:AutoCheck.Checkers.LocalShell.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.Connector","nameWithType":"LocalShell.Connector","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">The main connector, can be used to perform direct operations over the data source.</p>\n"},"AutoCheck.CopyDetectors.PlainText.WordsAmountWeight*":{"uid":"AutoCheck.CopyDetectors.PlainText.WordsAmountWeight*","name":"WordsAmountWeight","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.WordsAmountWeight","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.WordsAmountWeight","nameWithType":"PlainText.WordsAmountWeight"},"AutoCheck.Connectors.RemoteShell.CountFiles*":{"uid":"AutoCheck.Connectors.RemoteShell.CountFiles*","name":"CountFiles","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.CountFiles","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.CountFiles","nameWithType":"RemoteShell.CountFiles"},"AutoCheck.Core.Output.WriteResponse*":{"uid":"AutoCheck.Core.Output.WriteResponse*","name":"WriteResponse","href":null,"commentId":"Overload:AutoCheck.Core.Output.WriteResponse","isSpec":"True","fullName":"AutoCheck.Core.Output.WriteResponse","nameWithType":"Output.WriteResponse"},"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData*","name":"CheckIfTableInsertsData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableInsertsData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData","nameWithType":"Postgres.CheckIfTableInsertsData"},"AutoCheck.Connectors.GDrive.CreateFile*":{"uid":"AutoCheck.Connectors.GDrive.CreateFile*","name":"CreateFile","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.CreateFile","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.CreateFile","nameWithType":"GDrive.CreateFile"},"AutoCheck.Connectors.Postgres.Revoke(System.String,AutoCheck.Connectors.Postgres.Destination,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Revoke(System.String,AutoCheck.Connectors.Postgres.Destination,System.String)","name":"Revoke(String, Postgres.Destination, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Revoke(System.String,AutoCheck.Connectors.Postgres.Destination,System.String)","fullName":"AutoCheck.Connectors.Postgres.Revoke(System.String, AutoCheck.Connectors.Postgres.Destination, System.String)","nameWithType":"Postgres.Revoke(String, Postgres.Destination, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Revokes an item (role, group or permission) from a destination (role, group or user).</p>\n"},"AutoCheck.Checkers.Postgres.CheckRoleMembership*":{"uid":"AutoCheck.Checkers.Postgres.CheckRoleMembership*","name":"CheckRoleMembership","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckRoleMembership","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckRoleMembership","nameWithType":"Postgres.CheckRoleMembership"},"AutoCheck.Connectors.Odoo.GetSaleData*":{"uid":"AutoCheck.Connectors.Odoo.GetSaleData*","name":"GetSaleData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetSaleData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetSaleData","nameWithType":"Odoo.GetSaleData"},"AutoCheck.Checkers.Html.Connector*":{"uid":"AutoCheck.Checkers.Html.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.Html.Connector","nameWithType":"Html.Connector"},"AutoCheck.Checkers.Odoo.CheckIfInvoiceMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfInvoiceMatchesData*","name":"CheckIfInvoiceMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfInvoiceMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfInvoiceMatchesData","nameWithType":"Odoo.CheckIfInvoiceMatchesData"},"AutoCheck.Checkers.Html.CheckIfNodesRelatedLabelsMatchesAmount*":{"uid":"AutoCheck.Checkers.Html.CheckIfNodesRelatedLabelsMatchesAmount*","name":"CheckIfNodesRelatedLabelsMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.CheckIfNodesRelatedLabelsMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.Html.CheckIfNodesRelatedLabelsMatchesAmount","nameWithType":"Html.CheckIfNodesRelatedLabelsMatchesAmount"},"AutoCheck.Connectors.Postgres.Delete*":{"uid":"AutoCheck.Connectors.Postgres.Delete*","name":"Delete","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Delete","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Delete","nameWithType":"Postgres.Delete"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CloseQuestion(System.String)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CloseQuestion(System.String)","name":"CloseQuestion(String)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CloseQuestion(System.String)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.CloseQuestion(System.String)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).CloseQuestion(System.String)","nameWithType":"Script<SqlLog>.CloseQuestion(String)","nameWithType.vb":"Script(Of SqlLog).CloseQuestion(String)"},"AutoCheck.Exceptions.RegexInvalidException.#ctor*":{"uid":"AutoCheck.Exceptions.RegexInvalidException.#ctor*","name":"RegexInvalidException","href":null,"commentId":"Overload:AutoCheck.Exceptions.RegexInvalidException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.RegexInvalidException.RegexInvalidException","nameWithType":"RegexInvalidException.RegexInvalidException"},"AutoCheck.Connectors.GDrive.Dispose*":{"uid":"AutoCheck.Connectors.GDrive.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.Dispose","nameWithType":"GDrive.Dispose"},"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String,System.String)","name":"UpdateData(Dictionary<String, Object>, String, String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String,System.String)","name.vb":"UpdateData(Dictionary(Of String, Object), String, String, String, String)","fullName":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String, System.String, System.String)","fullName.vb":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String, System.String, System.String)","nameWithType":"Postgres.UpdateData(Dictionary<String, Object>, String, String, String, String)","nameWithType.vb":"Postgres.UpdateData(Dictionary(Of String, Object), String, String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Update some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}","name":"ScriptFiles<None>","href":null,"commentId":"T:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}","isSpec":"True","name.vb":"ScriptFiles(Of None)","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.None>","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.None)","nameWithType":"ScriptFiles<None>","nameWithType.vb":"ScriptFiles(Of None)"},"AutoCheck.Core.ScriptFiles`1.Run":{"uid":"AutoCheck.Core.ScriptFiles`1.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles`1.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.Run()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).Run()","nameWithType":"ScriptFiles<T>.Run()","nameWithType.vb":"ScriptFiles(Of T).Run()"},"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableInsertsData(String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableInsertsData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableInsertsData(String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableInsertsData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableInsertsData(String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableInsertsData(String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if new data can be inserted into the table.</p>\n"},"AutoCheck.Checkers.Odoo.CompanyName*":{"uid":"AutoCheck.Checkers.Odoo.CompanyName*","name":"CompanyName","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CompanyName","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CompanyName","nameWithType":"Odoo.CompanyName"},"AutoCheck.Checkers.Postgres.Database":{"uid":"AutoCheck.Checkers.Postgres.Database","name":"Database","href":null,"commentId":"P:AutoCheck.Checkers.Postgres.Database","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Database","nameWithType":"Postgres.Database","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database name, which will be used to perform operations.</p>\n"},"AutoCheck.CopyDetectors.PlainText.GetDetails(System.String)":{"uid":"AutoCheck.CopyDetectors.PlainText.GetDetails(System.String)","name":"GetDetails(String)","href":null,"commentId":"M:AutoCheck.CopyDetectors.PlainText.GetDetails(System.String)","fullName":"AutoCheck.CopyDetectors.PlainText.GetDetails(System.String)","nameWithType":"PlainText.GetDetails(String)","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">Returns a printable details list, containing information about the comparissons (student, source and % of match).</p>\n"},"AutoCheck.Core.Output.Disabled*":{"uid":"AutoCheck.Core.Output.Disabled*","name":"Disabled","href":null,"commentId":"Overload:AutoCheck.Core.Output.Disabled","isSpec":"True","fullName":"AutoCheck.Core.Output.Disabled","nameWithType":"Output.Disabled"},"AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String,System.String,System.String)","name":"GetTablePrivileges(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String, System.String, System.String)","nameWithType":"Postgres.GetTablePrivileges(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the table privileges.</p>\n"},"ToolBox.Bridge":{"uid":"ToolBox.Bridge","name":"ToolBox.Bridge","href":null,"commentId":"N:ToolBox.Bridge","fullName":"ToolBox.Bridge","nameWithType":"ToolBox.Bridge"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.OpenQuestion(System.String,System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.OpenQuestion(System.String,System.String,System.Single)","name":"OpenQuestion(String, String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.OpenQuestion(System.String,System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.OpenQuestion(System.String, System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).OpenQuestion(System.String, System.String, System.Single)","nameWithType":"Script<Css>.OpenQuestion(String, String, Single)","nameWithType.vb":"Script(Of Css).OpenQuestion(String, String, Single)"},"System.Exception.GetType":{"uid":"System.Exception.GetType","name":"GetType()","href":null,"commentId":"M:System.Exception.GetType","fullName":"System.Exception.GetType()","nameWithType":"Exception.GetType()"},"AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)":{"uid":"AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)","name":"OpenQuestion(String, String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script`1.OpenQuestion(System.String,System.String,System.Single)","fullName":"AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.String, System.Single)","nameWithType":"Script<T>.OpenQuestion(String, String, Single)","nameWithType.vb":"Script(Of T).OpenQuestion(String, String, Single)"},"AutoCheck.Exceptions":{"uid":"AutoCheck.Exceptions","name":"AutoCheck.Exceptions","href":null,"commentId":"N:AutoCheck.Exceptions","isSpec":"True","fullName":"AutoCheck.Exceptions","nameWithType":"AutoCheck.Exceptions"},"AutoCheck.Core.Utils.RemoveDiacritics*":{"uid":"AutoCheck.Core.Utils.RemoveDiacritics*","name":"RemoveDiacritics","href":null,"commentId":"Overload:AutoCheck.Core.Utils.RemoveDiacritics","isSpec":"True","fullName":"AutoCheck.Core.Utils.RemoveDiacritics","nameWithType":"Utils.RemoveDiacritics"},"AutoCheck.Connectors.Postgres.#ctor*":{"uid":"AutoCheck.Connectors.Postgres.#ctor*","name":"Postgres","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Postgres","nameWithType":"Postgres.Postgres"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableMatchesData(String, String, String, Object, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableMatchesData(String, String, String, Object, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableMatchesData(String, String, String, Object, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableMatchesData(String, String, String, Object, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Compares if the given entry data matches with the current one stored in the database.</p>\n"},"System.ComponentModel.ListSortDirection":{"uid":"System.ComponentModel.ListSortDirection","name":"ListSortDirection","href":null,"commentId":"T:System.ComponentModel.ListSortDirection","fullName":"System.ComponentModel.ListSortDirection","nameWithType":"ListSortDirection"},"AutoCheck.CopyDetectors.PlainText":{"uid":"AutoCheck.CopyDetectors.PlainText","name":"PlainText","href":null,"commentId":"T:AutoCheck.CopyDetectors.PlainText","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText","nameWithType":"PlainText","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">Copy detector for plain text files.</p>\n"},"AutoCheck.Checkers.Css.Connector*":{"uid":"AutoCheck.Checkers.Css.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.Css.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.Css.Connector","nameWithType":"Css.Connector"},"System.Int32":{"uid":"System.Int32","name":"Int32","href":null,"commentId":"T:System.Int32","fullName":"System.Int32","nameWithType":"Int32"},"System.Object.Equals(System.Object)":{"uid":"System.Object.Equals(System.Object)","name":"Equals(Object)","href":null,"commentId":"M:System.Object.Equals(System.Object)","fullName":"System.Object.Equals(System.Object)","nameWithType":"Object.Equals(Object)"},"AutoCheck.Checkers.Css.Dispose*":{"uid":"AutoCheck.Checkers.Css.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.Css.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.Css.Dispose","nameWithType":"Css.Dispose"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})","name":"EvalQuestion(List<String>)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion(System.Collections.Generic.List{System.String})","isSpec":"True","name.vb":"EvalQuestion(List(Of String))","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.EvalQuestion(System.Collections.Generic.List<System.String>)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).EvalQuestion(System.Collections.Generic.List(Of System.String))","nameWithType":"Script<None>.EvalQuestion(List<String>)","nameWithType.vb":"Script(Of None).EvalQuestion(List(Of String))"},"AutoCheck.Exceptions.StyleNotAppliedException.#ctor*":{"uid":"AutoCheck.Exceptions.StyleNotAppliedException.#ctor*","name":"StyleNotAppliedException","href":null,"commentId":"Overload:AutoCheck.Exceptions.StyleNotAppliedException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.StyleNotAppliedException.StyleNotAppliedException","nameWithType":"StyleNotAppliedException.StyleNotAppliedException"},"AutoCheck.Core.Script{{T}}.IsQuestionOpen":{"uid":"AutoCheck.Core.Script{{T}}.IsQuestionOpen","name":"IsQuestionOpen","href":null,"commentId":"P:AutoCheck.Core.Script{`0}.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of T).IsQuestionOpen","nameWithType":"Script<T>.IsQuestionOpen","nameWithType.vb":"Script(Of T).IsQuestionOpen"},"AutoCheck.Core.Script`1.Run":{"uid":"AutoCheck.Core.Script`1.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.Script`1.Run","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Run()","fullName.vb":"AutoCheck.Core.Script(Of T).Run()","nameWithType":"Script<T>.Run()","nameWithType.vb":"Script(Of T).Run()"},"AutoCheck.Connectors.Html.ValidateHTML5AgainstW3C*":{"uid":"AutoCheck.Connectors.Html.ValidateHTML5AgainstW3C*","name":"ValidateHTML5AgainstW3C","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.ValidateHTML5AgainstW3C","isSpec":"True","fullName":"AutoCheck.Connectors.Html.ValidateHTML5AgainstW3C","nameWithType":"Html.ValidateHTML5AgainstW3C"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CloseQuestion(System.String)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CloseQuestion(System.String)","name":"CloseQuestion(String)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CloseQuestion(System.String)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.CloseQuestion(System.String)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).CloseQuestion(System.String)","nameWithType":"Script<Html>.CloseQuestion(String)","nameWithType.vb":"Script(Of Html).CloseQuestion(String)"},"AutoCheck.Connectors.Postgres.Grant*":{"uid":"AutoCheck.Connectors.Postgres.Grant*","name":"Grant","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Grant","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Grant","nameWithType":"Postgres.Grant"},"AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.String,System.ComponentModel.ListSortDirection)":{"uid":"AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.String,System.ComponentModel.ListSortDirection)","name":"GetID(String, String, String, String, ListSortDirection)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.String,System.ComponentModel.ListSortDirection)","fullName":"AutoCheck.Connectors.Postgres.GetID(System.String, System.String, System.String, System.String, System.ComponentModel.ListSortDirection)","nameWithType":"Postgres.GetID(String, String, String, String, ListSortDirection)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the first pkField found once performed the query.</p>\n"},"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment","name":"ASIX_M02UF3_PermissionsAssignment","href":null,"commentId":"T:AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment","nameWithType":"ASIX_M02UF3_PermissionsAssignment"},"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableContainsData(DataTable, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableContainsData(DataTable, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.Data.DataTable, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableContainsData(System.Data.DataTable, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableContainsData(DataTable, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableContainsData(DataTable, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if the given data performs an exact match with any row stored in the database.</p>\n"},"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Update(Postgres.Destination, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Update(Postgres.Destination, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Update(Postgres.Destination, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Update(Postgres.Destination, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Updates some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Checkers.LocalShell.#ctor*":{"uid":"AutoCheck.Checkers.LocalShell.#ctor*","name":"LocalShell","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.LocalShell","nameWithType":"LocalShell.LocalShell"},"AutoCheck.Checkers.RemoteShell.Dispose*":{"uid":"AutoCheck.Checkers.RemoteShell.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.RemoteShell.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.RemoteShell.Dispose","nameWithType":"RemoteShell.Dispose"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Score":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Score","name":"Score","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.Score","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).Score","nameWithType":"Script<Html>.Score","nameWithType.vb":"Script(Of Html).Score"},"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)","name":"CheckIfFilesMatchesAmount(String, Int32, Boolean, Connector.Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFilesMatchesAmount(System.String, System.Int32, System.Boolean, AutoCheck.Core.Connector.Operator)","nameWithType":"LocalShell.CheckIfFilesMatchesAmount(String, Int32, Boolean, Connector.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks the amount of expected files.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.SetUp":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.SetUp","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.SetUp()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).SetUp()","nameWithType":"Script<Html>.SetUp()","nameWithType.vb":"Script(Of Html).SetUp()"},"AutoCheck.Connectors.Postgres.GetRoleMembership(System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetRoleMembership(System.String)","name":"GetRoleMembership(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetRoleMembership(System.String)","fullName":"AutoCheck.Connectors.Postgres.GetRoleMembership(System.String)","nameWithType":"Postgres.GetRoleMembership(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Get a list of the groups and/or roles where the fiven role belongs.</p>\n"},"AutoCheck.Core.ScriptGDrive`1.SetUp":{"uid":"AutoCheck.Core.ScriptGDrive`1.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.ScriptGDrive`1.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.SetUp()","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).SetUp()","nameWithType":"ScriptGDrive<T>.SetUp()","nameWithType.vb":"ScriptGDrive(Of T).SetUp()"},"AutoCheck.Core.Script{{T}}.Run":{"uid":"AutoCheck.Core.Script{{T}}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.Run","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Run()","fullName.vb":"AutoCheck.Core.Script(Of T).Run()","nameWithType":"Script<T>.Run()","nameWithType.vb":"Script(Of T).Run()"},"AutoCheck.Connectors.Postgres.GetForeignKeys(AutoCheck.Connectors.Postgres.Source)":{"uid":"AutoCheck.Connectors.Postgres.GetForeignKeys(AutoCheck.Connectors.Postgres.Source)","name":"GetForeignKeys(Postgres.Source)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetForeignKeys(AutoCheck.Connectors.Postgres.Source)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetForeignKeys(AutoCheck.Connectors.Postgres.Source)","nameWithType":"Postgres.GetForeignKeys(Postgres.Source)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the information about all the foreign keys defined over a table.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.EvalQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.EvalQuestion","name":"EvalQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.EvalQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).EvalQuestion()","nameWithType":"Script<Html>.EvalQuestion()","nameWithType.vb":"Script(Of Html).EvalQuestion()"},"AutoCheck.Core.Script`1.Run*":{"uid":"AutoCheck.Core.Script`1.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.Run","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Run","fullName.vb":"AutoCheck.Core.Script(Of T).Run","nameWithType":"Script<T>.Run","nameWithType.vb":"Script(Of T).Run"},"AutoCheck.Checkers.LocalShell.CheckIfFileExists*":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFileExists*","name":"CheckIfFileExists","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.CheckIfFileExists","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFileExists","nameWithType":"LocalShell.CheckIfFileExists"},"System.Collections.Generic.Dictionary{System.String,System.Object}":{"uid":"System.Collections.Generic.Dictionary{System.String,System.Object}","name":"Dictionary<String, Object>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{System.String,System.Object}","isSpec":"True","name.vb":"Dictionary(Of String, Object)","fullName":"System.Collections.Generic.Dictionary<System.String, System.Object>","fullName.vb":"System.Collections.Generic.Dictionary(Of System.String, System.Object)","nameWithType":"Dictionary<String, Object>","nameWithType.vb":"Dictionary(Of String, Object)"},"AutoCheck.Connectors.RemoteShell.Shell*":{"uid":"AutoCheck.Connectors.RemoteShell.Shell*","name":"Shell","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.Shell","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.Shell","nameWithType":"RemoteShell.Shell"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.OpenQuestion(System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.OpenQuestion(System.String,System.Single)","name":"OpenQuestion(String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.OpenQuestion(System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.OpenQuestion(System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).OpenQuestion(System.String, System.Single)","nameWithType":"Script<Css>.OpenQuestion(String, Single)","nameWithType.vb":"Script(Of Css).OpenQuestion(String, Single)"},"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.#ctor*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.#ctor*","name":"ASIX_M02UF3_ViewsAssignment","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment.ASIX_M02UF3_ViewsAssignment","nameWithType":"ASIX_M02UF3_ViewsAssignment.ASIX_M02UF3_ViewsAssignment"},"AutoCheck.CopyDetectors.PlainText.LineCountWeight":{"uid":"AutoCheck.CopyDetectors.PlainText.LineCountWeight","name":"LineCountWeight","href":null,"commentId":"P:AutoCheck.CopyDetectors.PlainText.LineCountWeight","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.LineCountWeight","nameWithType":"PlainText.LineCountWeight","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">The weight that line counting will have when computing the global matching percentage.</p>\n"},"AutoCheck.Core.Script{{T}}.PrintScore":{"uid":"AutoCheck.Core.Script{{T}}.PrintScore","name":"PrintScore()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.PrintScore()","fullName.vb":"AutoCheck.Core.Script(Of T).PrintScore()","nameWithType":"Script<T>.PrintScore()","nameWithType.vb":"Script(Of T).PrintScore()"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.MaxScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.MaxScore","name":"MaxScore","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).MaxScore","nameWithType":"Script<None>.MaxScore","nameWithType.vb":"Script(Of None).MaxScore"},"AutoCheck.Exceptions.VariableInvalidException":{"uid":"AutoCheck.Exceptions.VariableInvalidException","name":"VariableInvalidException","href":null,"commentId":"T:AutoCheck.Exceptions.VariableInvalidException","isSpec":"True","fullName":"AutoCheck.Exceptions.VariableInvalidException","nameWithType":"VariableInvalidException"},"AutoCheck.Checkers.GDrive.Dispose*":{"uid":"AutoCheck.Checkers.GDrive.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.Dispose","nameWithType":"GDrive.Dispose"},"AutoCheck.Connectors.Postgres":{"uid":"AutoCheck.Connectors.Postgres","name":"Postgres","href":null,"commentId":"T:AutoCheck.Connectors.Postgres","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres","nameWithType":"Postgres","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with a PostgreSQL instance.</p>\n"},"AutoCheck.Checkers.GDrive.#ctor*":{"uid":"AutoCheck.Checkers.GDrive.#ctor*","name":"GDrive","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.GDrive","nameWithType":"GDrive.GDrive"},"System.Exception":{"uid":"System.Exception","name":"Exception","href":null,"commentId":"T:System.Exception","fullName":"System.Exception","nameWithType":"Exception"},"AutoCheck.Connectors.Odoo.GetUserName*":{"uid":"AutoCheck.Connectors.Odoo.GetUserName*","name":"GetUserName","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetUserName","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetUserName","nameWithType":"Odoo.GetUserName"},"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String)","name":"Select(Postgres.Source, Postgres.Filter, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String)","fullName":"AutoCheck.Connectors.Postgres.Select(AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.String)","nameWithType":"Postgres.Select(Postgres.Source, Postgres.Filter, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects some data from the database.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.EvalQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.EvalQuestion","name":"EvalQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.EvalQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).EvalQuestion()","nameWithType":"Script<SqlLog>.EvalQuestion()","nameWithType.vb":"Script(Of SqlLog).EvalQuestion()"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Host":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Host","name":"Host","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Host","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.Host","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).Host","nameWithType":"ScriptDB<SqlLog>.Host","nameWithType.vb":"ScriptDB(Of SqlLog).Host"},"AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String,System.String)","name":"GetTablePrivileges(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetTablePrivileges(System.String, System.String)","nameWithType":"Postgres.GetTablePrivileges(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the table privileges.</p>\n"},"AutoCheck.Core.ScriptDB`1.Clean*":{"uid":"AutoCheck.Core.ScriptDB`1.Clean*","name":"Clean","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.Clean","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Clean","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Clean","nameWithType":"ScriptDB<T>.Clean","nameWithType.vb":"ScriptDB(Of T).Clean"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion","name":"EvalQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.EvalQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).EvalQuestion()","nameWithType":"Script<None>.EvalQuestion()","nameWithType.vb":"Script(Of None).EvalQuestion()"},"AutoCheck.Core.Script{{T}}.EvalQuestion":{"uid":"AutoCheck.Core.Script{{T}}.EvalQuestion","name":"EvalQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.EvalQuestion()","fullName.vb":"AutoCheck.Core.Script(Of T).EvalQuestion()","nameWithType":"Script<T>.EvalQuestion()","nameWithType.vb":"Script(Of T).EvalQuestion()"},"AutoCheck.Checkers.Postgres.Host*":{"uid":"AutoCheck.Checkers.Postgres.Host*","name":"Host","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.Host","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Host","nameWithType":"Postgres.Host"},"AutoCheck.Checkers.Csv":{"uid":"AutoCheck.Checkers.Csv","name":"Csv","href":null,"commentId":"T:AutoCheck.Checkers.Csv","isSpec":"True","fullName":"AutoCheck.Checkers.Csv","nameWithType":"Csv","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Csv.yml\" sourcestartlinenumber=\"2\">Allows data validations over a WEB set of files.</p>\n"},"AutoCheck.Connectors.RemoteShell.RemoteOS*":{"uid":"AutoCheck.Connectors.RemoteShell.RemoteOS*","name":"RemoteOS","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.RemoteOS","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.RemoteOS","nameWithType":"RemoteShell.RemoteOS"},"AutoCheck.Core.Output.Enable*":{"uid":"AutoCheck.Core.Output.Enable*","name":"Enable","href":null,"commentId":"Overload:AutoCheck.Core.Output.Enable","isSpec":"True","fullName":"AutoCheck.Core.Output.Enable","nameWithType":"Output.Enable"},"AutoCheck.Core.Output.Write*":{"uid":"AutoCheck.Core.Output.Write*","name":"Write","href":null,"commentId":"Overload:AutoCheck.Core.Output.Write","isSpec":"True","fullName":"AutoCheck.Core.Output.Write","nameWithType":"Output.Write"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Username":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Username","name":"Username","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.Username","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).Username","nameWithType":"ScriptDB<SqlLog>.Username","nameWithType.vb":"ScriptDB(Of SqlLog).Username"},"AutoCheck.Connectors.Postgres.InsertData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.InsertData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"InsertData(String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.InsertData(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"InsertData(String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.InsertData(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.InsertData(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.InsertData(String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.InsertData(String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Inserts new data into a table.</p>\n"},"AutoCheck.Connectors.Postgres.Select(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Select(System.String,System.String,System.String)","name":"Select(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Select(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.Select(System.String, System.String, System.String)","nameWithType":"Postgres.Select(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects some data from the database.</p>\n"},"System.IDisposable.Dispose":{"uid":"System.IDisposable.Dispose","name":"Dispose()","href":null,"commentId":"M:System.IDisposable.Dispose","fullName":"System.IDisposable.Dispose()","nameWithType":"IDisposable.Dispose()"},"AutoCheck.Connectors.Postgres.Source.Table":{"uid":"AutoCheck.Connectors.Postgres.Source.Table","name":"Table","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Source.Table","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.Table","nameWithType":"Postgres.Source.Table","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Source.yml\" sourcestartlinenumber=\"2\">The source table</p>\n"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.DataBase":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.DataBase","name":"DataBase","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.DataBase","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.DataBase","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).DataBase","nameWithType":"ScriptDB<SqlLog>.DataBase","nameWithType.vb":"ScriptDB(Of SqlLog).DataBase"},"AutoCheck.Connectors.Postgres.CountRoles*":{"uid":"AutoCheck.Connectors.Postgres.CountRoles*","name":"CountRoles","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CountRoles","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountRoles","nameWithType":"Postgres.CountRoles"},"AutoCheck.Connectors.Moodle.Dispose*":{"uid":"AutoCheck.Connectors.Moodle.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.Moodle.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Moodle.Dispose","nameWithType":"Moodle.Dispose"},"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Operator)","name":"CheckIfFoldersMatchesAmount(String, Int32, Boolean, Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String, System.Int32, System.Boolean, AutoCheck.Core.Operator)","nameWithType":"LocalShell.CheckIfFoldersMatchesAmount(String, Int32, Boolean, Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks the amount of expected folders.</p>\n"},"AutoCheck.Connectors.RemoteShell.TestConnection*":{"uid":"AutoCheck.Connectors.RemoteShell.TestConnection*","name":"TestConnection","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.TestConnection","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.TestConnection","nameWithType":"RemoteShell.TestConnection"},"AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)","name":"CheckIfFileExists(String, String, Boolean)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String,System.String,System.Boolean)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFileExists(System.String, System.String, System.Boolean)","nameWithType":"LocalShell.CheckIfFileExists(String, String, Boolean)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks if a file exists within the given path.</p>\n"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.DefaultArguments":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).DefaultArguments()","nameWithType":"ScriptDB<SqlLog>.DefaultArguments()","nameWithType.vb":"ScriptDB(Of SqlLog).DefaultArguments()"},"System.ConsoleColor":{"uid":"System.ConsoleColor","name":"ConsoleColor","href":null,"commentId":"T:System.ConsoleColor","fullName":"System.ConsoleColor","nameWithType":"ConsoleColor"},"AutoCheck.Core.Script`1.SetUp*":{"uid":"AutoCheck.Core.Script`1.SetUp*","name":"SetUp","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.SetUp","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.SetUp","fullName.vb":"AutoCheck.Core.Script(Of T).SetUp","nameWithType":"Script<T>.SetUp","nameWithType.vb":"Script(Of T).SetUp"},"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment":{"uid":"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment","name":"DAM_M04UF1_Html5Assignment","href":null,"commentId":"T:AutoCheck.Scripts.DAM_M04UF1_Html5Assignment","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF1_Html5Assignment","nameWithType":"DAM_M04UF1_Html5Assignment"},"AutoCheck.Core.Script`1.OpenQuestion*":{"uid":"AutoCheck.Core.Script`1.OpenQuestion*","name":"OpenQuestion","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.OpenQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.OpenQuestion","fullName.vb":"AutoCheck.Core.Script(Of T).OpenQuestion","nameWithType":"Script<T>.OpenQuestion","nameWithType.vb":"Script(Of T).OpenQuestion"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Run":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.Run()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).Run()","nameWithType":"ScriptDB<SqlLog>.Run()","nameWithType.vb":"ScriptDB(Of SqlLog).Run()"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DefaultArguments":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).DefaultArguments()","nameWithType":"ScriptDB<None>.DefaultArguments()","nameWithType.vb":"ScriptDB(Of None).DefaultArguments()"},"AutoCheck.Connectors.Zip.Dispose*":{"uid":"AutoCheck.Connectors.Zip.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.Zip.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Zip.Dispose","nameWithType":"Zip.Dispose"},"AutoCheck.Connectors.CsvDocument.Validate*":{"uid":"AutoCheck.Connectors.CsvDocument.Validate*","name":"Validate","href":null,"commentId":"Overload:AutoCheck.Connectors.CsvDocument.Validate","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument.Validate","nameWithType":"CsvDocument.Validate"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)","name":"OpenQuestion(String, String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.OpenQuestion(System.String, System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).OpenQuestion(System.String, System.String, System.Single)","nameWithType":"Script<None>.OpenQuestion(String, String, Single)","nameWithType.vb":"Script(Of None).OpenQuestion(String, String, Single)"},"AutoCheck.Core.Script`1.EvalQuestion*":{"uid":"AutoCheck.Core.Script`1.EvalQuestion*","name":"EvalQuestion","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.EvalQuestion","fullName.vb":"AutoCheck.Core.Script(Of T).EvalQuestion","nameWithType":"Script<T>.EvalQuestion","nameWithType.vb":"Script(Of T).EvalQuestion"},"AutoCheck.Core.ScriptFiles{{T}}.Student":{"uid":"AutoCheck.Core.ScriptFiles{{T}}.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptFiles{`0}.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.Student","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).Student","nameWithType":"ScriptFiles<T>.Student","nameWithType.vb":"ScriptFiles(Of T).Student"},"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.Secret":{"uid":"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.Secret","name":"Secret","href":null,"commentId":"P:AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.Secret","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<AutoCheck.CopyDetectors.None>.Secret","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of AutoCheck.CopyDetectors.None).Secret","nameWithType":"ScriptGDrive<None>.Secret","nameWithType.vb":"ScriptGDrive(Of None).Secret"},"AutoCheck.Checkers.Postgres.Student*":{"uid":"AutoCheck.Checkers.Postgres.Student*","name":"Student","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.Student","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Student","nameWithType":"Postgres.Student"},"AutoCheck.Checkers":{"uid":"AutoCheck.Checkers","name":"AutoCheck.Checkers","href":null,"commentId":"N:AutoCheck.Checkers","isSpec":"True","fullName":"AutoCheck.Checkers","nameWithType":"AutoCheck.Checkers"},"AutoCheck.Connectors.Postgres.Revoke(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Revoke(System.String,System.String,System.String)","name":"Revoke(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Revoke(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.Revoke(System.String, System.String, System.String)","nameWithType":"Postgres.Revoke(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Revokes an item (role, group or permission) from a destination (role, group or user).</p>\n"},"AutoCheck.Connectors.Css":{"uid":"AutoCheck.Connectors.Css","name":"Css","href":null,"commentId":"T:AutoCheck.Connectors.Css","isSpec":"True","fullName":"AutoCheck.Connectors.Css","nameWithType":"Css","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Css.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with CSS files.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CpThresh":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CpThresh","name":"CpThresh","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).CpThresh","nameWithType":"Script<Html>.CpThresh","nameWithType.vb":"Script(Of Html).CpThresh"},"AutoCheck.Core.Script`1.Score*":{"uid":"AutoCheck.Core.Script`1.Score*","name":"Score","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Score","fullName.vb":"AutoCheck.Core.Script(Of T).Score","nameWithType":"Script<T>.Score","nameWithType.vb":"Script(Of T).Score"},"System.Collections.Generic.List{System.ValueTuple{System.String,System.String,System.Single}}":{"uid":"System.Collections.Generic.List{System.ValueTuple{System.String,System.String,System.Single}}","name":"List<ValueTuple<String, String, Single>>","href":null,"commentId":"T:System.Collections.Generic.List{System.ValueTuple{System.String,System.String,System.Single}}","isSpec":"True","name.vb":"List(Of ValueTuple(Of String, String, Single))","fullName":"System.Collections.Generic.List<System.ValueTuple<System.String, System.String, System.Single>>","fullName.vb":"System.Collections.Generic.List(Of System.ValueTuple(Of System.String, System.String, System.Single))","nameWithType":"List<ValueTuple<String, String, Single>>","nameWithType.vb":"List(Of ValueTuple(Of String, String, Single))"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData*","name":"CheckIfTableMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData","nameWithType":"Postgres.CheckIfTableMatchesData"},"AutoCheck.Connectors.Postgres.ImportSqlFile*":{"uid":"AutoCheck.Connectors.Postgres.ImportSqlFile*","name":"ImportSqlFile","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ImportSqlFile","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ImportSqlFile","nameWithType":"Postgres.ImportSqlFile"},"AutoCheck.Checkers.Css":{"uid":"AutoCheck.Checkers.Css","name":"Css","href":null,"commentId":"T:AutoCheck.Checkers.Css","isSpec":"True","fullName":"AutoCheck.Checkers.Css","nameWithType":"Css","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Css.yml\" sourcestartlinenumber=\"2\">Allows data validations over a WEB set of files.</p>\n"},"AutoCheck.Connectors.Postgres.ExecuteNonQuery*":{"uid":"AutoCheck.Connectors.Postgres.ExecuteNonQuery*","name":"ExecuteNonQuery","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ExecuteNonQuery","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExecuteNonQuery","nameWithType":"Postgres.ExecuteNonQuery"},"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.#ctor*":{"uid":"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.#ctor*","name":"DAM_M10UF1_OdooUsageAssignment","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.DAM_M10UF1_OdooUsageAssignment","nameWithType":"DAM_M10UF1_OdooUsageAssignment.DAM_M10UF1_OdooUsageAssignment"},"AutoCheck.Checkers.Odoo.CheckIfSaleMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfSaleMatchesData*","name":"CheckIfSaleMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfSaleMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfSaleMatchesData","nameWithType":"Odoo.CheckIfSaleMatchesData"},"AutoCheck.Connectors.Postgres.Source":{"uid":"AutoCheck.Connectors.Postgres.Source","name":"Postgres.Source","href":null,"commentId":"T:AutoCheck.Connectors.Postgres.Source","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source","nameWithType":"Postgres.Source","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Source.yml\" sourcestartlinenumber=\"2\">Allows the source selection for an SQL operation.</p>\n"},"AutoCheck.Exceptions.DocumentInvalidException.#ctor*":{"uid":"AutoCheck.Exceptions.DocumentInvalidException.#ctor*","name":"DocumentInvalidException","href":null,"commentId":"Overload:AutoCheck.Exceptions.DocumentInvalidException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.DocumentInvalidException.DocumentInvalidException","nameWithType":"DocumentInvalidException.DocumentInvalidException"},"AutoCheck.Connectors.Postgres.Grant(System.String,AutoCheck.Connectors.Postgres.Destination,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Grant(System.String,AutoCheck.Connectors.Postgres.Destination,System.String)","name":"Grant(String, Postgres.Destination, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Grant(System.String,AutoCheck.Connectors.Postgres.Destination,System.String)","fullName":"AutoCheck.Connectors.Postgres.Grant(System.String, AutoCheck.Connectors.Postgres.Destination, System.String)","nameWithType":"Postgres.Grant(String, Postgres.Destination, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Grants an item (role, group or permission) to a destination (role, group or user).</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}","name":"Script<None>","href":null,"commentId":"T:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}","isSpec":"True","name.vb":"Script(Of None)","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None)","nameWithType":"Script<None>","nameWithType.vb":"Script(Of None)"},"AutoCheck.CopyDetectors.PlainText.CopyDetected(System.String,System.Single)":{"uid":"AutoCheck.CopyDetectors.PlainText.CopyDetected(System.String,System.Single)","name":"CopyDetected(String, Single)","href":null,"commentId":"M:AutoCheck.CopyDetectors.PlainText.CopyDetected(System.String,System.Single)","fullName":"AutoCheck.CopyDetectors.PlainText.CopyDetected(System.String, System.Single)","nameWithType":"PlainText.CopyDetected(String, Single)","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">Checks if a potential copy has been detected.\nThe Compare() method should be called firts.</p>\n"},"AutoCheck.Checkers.RemoteShell.Connector*":{"uid":"AutoCheck.Checkers.RemoteShell.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.RemoteShell.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.RemoteShell.Connector","nameWithType":"RemoteShell.Connector"},"System.Uri":{"uid":"System.Uri","name":"Uri","href":null,"commentId":"T:System.Uri","fullName":"System.Uri","nameWithType":"Uri"},"AutoCheck.Connectors.Postgres.Source.ToString*":{"uid":"AutoCheck.Connectors.Postgres.Source.ToString*","name":"ToString","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Source.ToString","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.ToString","nameWithType":"Postgres.Source.ToString"},"AutoCheck.Connectors.Postgres.CountRoles":{"uid":"AutoCheck.Connectors.Postgres.CountRoles","name":"CountRoles()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountRoles","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountRoles()","nameWithType":"Postgres.CountRoles()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many roles are in the database.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.PrintScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.PrintScore","name":"PrintScore()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.PrintScore()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).PrintScore()","nameWithType":"Script<Html>.PrintScore()","nameWithType.vb":"Script(Of Html).PrintScore()"},"AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String,System.String)","name":"CountRegisters(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.CountRegisters(System.String, System.String, System.String)","nameWithType":"Postgres.CountRegisters(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many registers appears in a table using the primary key as a filter, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.SetUp":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.SetUp","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.SetUp()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).SetUp()","nameWithType":"Script<Css>.SetUp()","nameWithType.vb":"Script(Of Css).SetUp()"},"AutoCheck.Scripts.GENERIC_GoogleDriveImporter":{"uid":"AutoCheck.Scripts.GENERIC_GoogleDriveImporter","name":"GENERIC_GoogleDriveImporter","href":null,"commentId":"T:AutoCheck.Scripts.GENERIC_GoogleDriveImporter","isSpec":"True","fullName":"AutoCheck.Scripts.GENERIC_GoogleDriveImporter","nameWithType":"GENERIC_GoogleDriveImporter"},"AutoCheck.Connectors.LocalShell":{"uid":"AutoCheck.Connectors.LocalShell","name":"LocalShell","href":null,"commentId":"T:AutoCheck.Connectors.LocalShell","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell","nameWithType":"LocalShell","summary":"<p sourcefile=\"api/AutoCheck.Connectors.LocalShell.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with a local computer.</p>\n"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Password":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Password","name":"Password","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Password","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.Password","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).Password","nameWithType":"ScriptDB<SqlLog>.Password","nameWithType.vb":"ScriptDB(Of SqlLog).Password"},"AutoCheck.Connectors.Postgres.DBHost*":{"uid":"AutoCheck.Connectors.Postgres.DBHost*","name":"DBHost","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DBHost","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DBHost","nameWithType":"Postgres.DBHost"},"System.Exception.TargetSite":{"uid":"System.Exception.TargetSite","name":"TargetSite","href":null,"commentId":"P:System.Exception.TargetSite","fullName":"System.Exception.TargetSite","nameWithType":"Exception.TargetSite"},"AutoCheck.CopyDetectors.PlainText.Extension":{"uid":"AutoCheck.CopyDetectors.PlainText.Extension","name":"Extension","href":null,"commentId":"P:AutoCheck.CopyDetectors.PlainText.Extension","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Extension","nameWithType":"PlainText.Extension","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">File extension</p>\n"},"AutoCheck.Connectors.Html.ContentLength*":{"uid":"AutoCheck.Connectors.Html.ContentLength*","name":"ContentLength","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.ContentLength","isSpec":"True","fullName":"AutoCheck.Connectors.Html.ContentLength","nameWithType":"Html.ContentLength"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters*","name":"CheckIfTableMatchesAmountOfRegisters","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesAmountOfRegisters","nameWithType":"Postgres.CheckIfTableMatchesAmountOfRegisters"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.Student":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Html>.Student","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Html).Student","nameWithType":"ScriptFiles<Html>.Student","nameWithType.vb":"ScriptFiles(Of Html).Student"},"AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges*","name":"CheckIfSchemaMatchesPrivileges","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfSchemaMatchesPrivileges","nameWithType":"Postgres.CheckIfSchemaMatchesPrivileges"},"AutoCheck.Connectors.Postgres.Conn*":{"uid":"AutoCheck.Connectors.Postgres.Conn*","name":"Conn","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Conn","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Conn","nameWithType":"Postgres.Conn"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}","name":"Script<Css>","href":null,"commentId":"T:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}","isSpec":"True","name.vb":"Script(Of Css)","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css)","nameWithType":"Script<Css>","nameWithType.vb":"Script(Of Css)"},"AutoCheck.Connectors.Postgres.Filter.Value*":{"uid":"AutoCheck.Connectors.Postgres.Filter.Value*","name":"Value","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Filter.Value","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Filter.Value","nameWithType":"Postgres.Filter.Value"},"System.Object.GetType":{"uid":"System.Object.GetType","name":"GetType()","href":null,"commentId":"M:System.Object.GetType","fullName":"System.Object.GetType()","nameWithType":"Object.GetType()"},"AutoCheck.Connectors.Postgres.GetRoles*":{"uid":"AutoCheck.Connectors.Postgres.GetRoles*","name":"GetRoles","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetRoles","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetRoles","nameWithType":"Postgres.GetRoles"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.EvalQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.EvalQuestion","name":"EvalQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.EvalQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.EvalQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).EvalQuestion()","nameWithType":"Script<Css>.EvalQuestion()","nameWithType.vb":"Script(Of Css).EvalQuestion()"},"AutoCheck.CopyDetectors.Html":{"uid":"AutoCheck.CopyDetectors.Html","name":"Html","href":null,"commentId":"T:AutoCheck.CopyDetectors.Html","isSpec":"True","fullName":"AutoCheck.CopyDetectors.Html","nameWithType":"Html","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.Html.yml\" sourcestartlinenumber=\"2\">Copy detector for HTML files.</p>\n"},"AutoCheck.Connectors.Odoo.GetLastPurchaseID*":{"uid":"AutoCheck.Connectors.Odoo.GetLastPurchaseID*","name":"GetLastPurchaseID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetLastPurchaseID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetLastPurchaseID","nameWithType":"Odoo.GetLastPurchaseID"},"AutoCheck.Connectors.Csv":{"uid":"AutoCheck.Connectors.Csv","name":"Csv","href":null,"commentId":"T:AutoCheck.Connectors.Csv","isSpec":"True","fullName":"AutoCheck.Connectors.Csv","nameWithType":"Csv","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Csv.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with CSV files.</p>\n"},"AutoCheck.CopyDetectors.PlainText.Extension*":{"uid":"AutoCheck.CopyDetectors.PlainText.Extension*","name":"Extension","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.Extension","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Extension","nameWithType":"PlainText.Extension"},"AutoCheck.Connectors.Postgres.DropDataBase(System.String)":{"uid":"AutoCheck.Connectors.Postgres.DropDataBase(System.String)","name":"DropDataBase(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DropDataBase(System.String)","fullName":"AutoCheck.Connectors.Postgres.DropDataBase(System.String)","nameWithType":"Postgres.DropDataBase(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Drops the current database.</p>\n"},"AutoCheck.Connectors.Html.GroupSiblings*":{"uid":"AutoCheck.Connectors.Html.GroupSiblings*","name":"GroupSiblings","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.GroupSiblings","isSpec":"True","fullName":"AutoCheck.Connectors.Html.GroupSiblings","nameWithType":"Html.GroupSiblings"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)","name":"CheckIfTableMatchesPrivileges(String, String, String, String)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String,System.String,System.String,System.String)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesPrivileges(System.String, System.String, System.String, System.String)","nameWithType":"Postgres.CheckIfTableMatchesPrivileges(String, String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Compares a set of expected privileges with the current table's ones.</p>\n"},"AutoCheck.Connectors.Postgres.ExistsRole*":{"uid":"AutoCheck.Connectors.Postgres.ExistsRole*","name":"ExistsRole","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ExistsRole","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExistsRole","nameWithType":"Postgres.ExistsRole"},"AutoCheck.Checkers.Html.Dispose*":{"uid":"AutoCheck.Checkers.Html.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.Html.Dispose","nameWithType":"Html.Dispose"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.EvalQuestion(System.Collections.Generic.List{System.String})":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.EvalQuestion(System.Collections.Generic.List{System.String})","name":"EvalQuestion(List<String>)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.EvalQuestion(System.Collections.Generic.List{System.String})","isSpec":"True","name.vb":"EvalQuestion(List(Of String))","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.EvalQuestion(System.Collections.Generic.List<System.String>)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).EvalQuestion(System.Collections.Generic.List(Of System.String))","nameWithType":"Script<Css>.EvalQuestion(List<String>)","nameWithType.vb":"Script(Of Css).EvalQuestion(List(Of String))"},"AutoCheck.Connectors.Postgres.Insert``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Insert``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Insert<T>(String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Insert``1(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Insert(Of T)(String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Insert<T>(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Insert(Of T)(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Insert<T>(String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Insert(Of T)(String, String, Dictionary(Of String, Object))"},"AutoCheck.Core.Script`1.CancelQuestion*":{"uid":"AutoCheck.Core.Script`1.CancelQuestion*","name":"CancelQuestion","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CancelQuestion","fullName.vb":"AutoCheck.Core.Script(Of T).CancelQuestion","nameWithType":"Script<T>.CancelQuestion","nameWithType.vb":"Script(Of T).CancelQuestion"},"AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter)":{"uid":"AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter)","name":"CountRegisters(Postgres.Source, Postgres.Filter)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter)","nameWithType":"Postgres.CountRegisters(Postgres.Source, Postgres.Filter)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many registers appears in a table.</p>\n"},"AutoCheck.Connectors.Postgres.RevokeRole(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.RevokeRole(System.String,System.String)","name":"RevokeRole(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.RevokeRole(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.RevokeRole(System.String, System.String)","nameWithType":"Postgres.RevokeRole(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Revokes a role from a group or role or user.</p>\n"},"System.Exception.ToString":{"uid":"System.Exception.ToString","name":"ToString()","href":null,"commentId":"M:System.Exception.ToString","fullName":"System.Exception.ToString()","nameWithType":"Exception.ToString()"},"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String[])","name":"SelectData(String, String, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String[])","name.vb":"SelectData(String, String, String())","fullName":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String())","nameWithType":"Postgres.SelectData(String, String, String[])","nameWithType.vb":"Postgres.SelectData(String, String, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects data from a single table, the 'ExecuteNonQuery' method can be used for complex selects (union, join, etc.).</p>\n"},"AutoCheck.Connectors.Postgres.Source.Schema":{"uid":"AutoCheck.Connectors.Postgres.Source.Schema","name":"Schema","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Source.Schema","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Source.Schema","nameWithType":"Postgres.Source.Schema","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Source.yml\" sourcestartlinenumber=\"2\">The source schema.</p>\n"},"AutoCheck.Connectors.Postgres.ExecuteScalar*":{"uid":"AutoCheck.Connectors.Postgres.ExecuteScalar*","name":"ExecuteScalar","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ExecuteScalar","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExecuteScalar","nameWithType":"Postgres.ExecuteScalar"},"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Update(Postgres.Destination, Postgres.Source, Postgres.Filter, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Update(Postgres.Destination, Postgres.Source, Postgres.Filter, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination, AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Update(AutoCheck.Connectors.Postgres.Destination, AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Update(Postgres.Destination, Postgres.Source, Postgres.Filter, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Update(Postgres.Destination, Postgres.Source, Postgres.Filter, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Updates some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Connectors.LocalShell.Shell*":{"uid":"AutoCheck.Connectors.LocalShell.Shell*","name":"Shell","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.Shell","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.Shell","nameWithType":"LocalShell.Shell"},"AutoCheck.Checkers.Postgres.Name*":{"uid":"AutoCheck.Checkers.Postgres.Name*","name":"Name","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.Name","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Name","nameWithType":"Postgres.Name"},"AutoCheck.Checkers.Postgres.Dispose*":{"uid":"AutoCheck.Checkers.Postgres.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Dispose","nameWithType":"Postgres.Dispose"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.Run":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Html}.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Html>.Run()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Html).Run()","nameWithType":"ScriptFiles<Html>.Run()","nameWithType.vb":"ScriptFiles(Of Html).Run()"},"AutoCheck.Connectors.Postgres.ExistsDataBase*":{"uid":"AutoCheck.Connectors.Postgres.ExistsDataBase*","name":"ExistsDataBase","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.ExistsDataBase","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.ExistsDataBase","nameWithType":"Postgres.ExistsDataBase"},"AutoCheck.Core.Script`1.#ctor*":{"uid":"AutoCheck.Core.Script`1.#ctor*","name":"Script","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.#ctor","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Script","fullName.vb":"AutoCheck.Core.Script(Of T).Script","nameWithType":"Script<T>.Script","nameWithType.vb":"Script(Of T).Script"},"AutoCheck.Connectors.RemoteShell.CountFolders*":{"uid":"AutoCheck.Connectors.RemoteShell.CountFolders*","name":"CountFolders","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.CountFolders","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.CountFolders","nameWithType":"RemoteShell.CountFolders"},"AutoCheck.Connectors.GDrive.#ctor*":{"uid":"AutoCheck.Connectors.GDrive.#ctor*","name":"GDrive","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.GDrive","nameWithType":"GDrive.GDrive"},"AutoCheck.Connectors.Postgres.Password*":{"uid":"AutoCheck.Connectors.Postgres.Password*","name":"Password","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Password","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Password","nameWithType":"Postgres.Password"},"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator)","name":"CheckIfTableDeletesData(String, String, String, Object, Operator)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,AutoCheck.Core.Operator)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String, System.String, System.String, System.Object, AutoCheck.Core.Operator)","nameWithType":"Postgres.CheckIfTableDeletesData(String, String, String, Object, Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"System.Int32[]":{"uid":"System.Int32[]","name":"Int32[]","href":null,"name.vb":"Int32()","fullName":"System.Int32[]","fullName.vb":"System.Int32()","nameWithType":"Int32[]","nameWithType.vb":"Int32()"},"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData*","name":"CheckIfSelectContainsData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfSelectContainsData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfSelectContainsData","nameWithType":"Postgres.CheckIfSelectContainsData"},"AutoCheck.Connectors.LocalShell.CountFolders*":{"uid":"AutoCheck.Connectors.LocalShell.CountFolders*","name":"CountFolders","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.CountFolders","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.CountFolders","nameWithType":"LocalShell.CountFolders"},"AutoCheck.Core.ScriptDB`1.Host*":{"uid":"AutoCheck.Core.ScriptDB`1.Host*","name":"Host","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.Host","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Host","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Host","nameWithType":"ScriptDB<T>.Host","nameWithType.vb":"ScriptDB(Of T).Host"},"System.Object.Equals(System.Object,System.Object)":{"uid":"System.Object.Equals(System.Object,System.Object)","name":"Equals(Object, Object)","href":null,"commentId":"M:System.Object.Equals(System.Object,System.Object)","fullName":"System.Object.Equals(System.Object, System.Object)","nameWithType":"Object.Equals(Object, Object)"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.Single)":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.Single)","name":"OpenQuestion(String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.OpenQuestion(System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.OpenQuestion(System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).OpenQuestion(System.String, System.Single)","nameWithType":"Script<None>.OpenQuestion(String, Single)","nameWithType.vb":"Script(Of None).OpenQuestion(String, Single)"},"AutoCheck.Core.CopyDetector.CopyDetected*":{"uid":"AutoCheck.Core.CopyDetector.CopyDetected*","name":"CopyDetected","href":null,"commentId":"Overload:AutoCheck.Core.CopyDetector.CopyDetected","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.CopyDetected","nameWithType":"CopyDetector.CopyDetected"},"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.Run*":{"uid":"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment.Run","nameWithType":"DAM_M10UF1_OdooUsageAssignment.Run"},"AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)","name":"CheckIfViewMatchesDefinition(String, String, String)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String,System.String,System.String)","fullName":"AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition(System.String, System.String, System.String)","nameWithType":"Postgres.CheckIfViewMatchesDefinition(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Given a view, executes its select query and compares the result with the given definition.</p>\n"},"AutoCheck.Core.Script`1.CpThresh":{"uid":"AutoCheck.Core.Script`1.CpThresh","name":"CpThresh","href":null,"commentId":"P:AutoCheck.Core.Script`1.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of T).CpThresh","nameWithType":"Script<T>.CpThresh","nameWithType.vb":"Script(Of T).CpThresh"},"AutoCheck.Connectors.Postgres.CreateRole(System.String)":{"uid":"AutoCheck.Connectors.Postgres.CreateRole(System.String)","name":"CreateRole(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CreateRole(System.String)","fullName":"AutoCheck.Connectors.Postgres.CreateRole(System.String)","nameWithType":"Postgres.CreateRole(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Creates a new role.</p>\n"},"AutoCheck.Connectors.GDrive.DeleteFile*":{"uid":"AutoCheck.Connectors.GDrive.DeleteFile*","name":"DeleteFile","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.DeleteFile","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.DeleteFile","nameWithType":"GDrive.DeleteFile"},"AutoCheck.Core.Script`1.MaxScore":{"uid":"AutoCheck.Core.Script`1.MaxScore","name":"MaxScore","href":null,"commentId":"P:AutoCheck.Core.Script`1.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of T).MaxScore","nameWithType":"Script<T>.MaxScore","nameWithType.vb":"Script(Of T).MaxScore"},"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.SetUp*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.SetUp*","name":"SetUp","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.SetUp","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_PermissionsAssignment.SetUp","nameWithType":"ASIX_M02UF3_PermissionsAssignment.SetUp"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.SetUp":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.SetUp()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).SetUp()","nameWithType":"ScriptDB<None>.SetUp()","nameWithType.vb":"ScriptDB(Of None).SetUp()"},"AutoCheck.Checkers.Postgres.CheckForeignKey*":{"uid":"AutoCheck.Checkers.Postgres.CheckForeignKey*","name":"CheckForeignKey","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckForeignKey","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckForeignKey","nameWithType":"Postgres.CheckForeignKey"},"AutoCheck.Connectors.Postgres.Delete(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.Delete(System.String,System.String,System.String)","name":"Delete(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Delete(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.Delete(System.String, System.String, System.String)","nameWithType":"Postgres.Delete(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Delete some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.ScriptGDrive`1.Secret":{"uid":"AutoCheck.Core.ScriptGDrive`1.Secret","name":"Secret","href":null,"commentId":"P:AutoCheck.Core.ScriptGDrive`1.Secret","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.Secret","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).Secret","nameWithType":"ScriptGDrive<T>.Secret","nameWithType.vb":"ScriptGDrive(Of T).Secret"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}","name":"ScriptDB<None>","href":null,"commentId":"T:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}","isSpec":"True","name.vb":"ScriptDB(Of None)","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None)","nameWithType":"ScriptDB<None>","nameWithType.vb":"ScriptDB(Of None)"},"AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source)":{"uid":"AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source)","name":"CountRegisters(Postgres.Source)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountRegisters(AutoCheck.Connectors.Postgres.Source)","nameWithType":"Postgres.CountRegisters(Postgres.Source)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many registers appears in a table.</p>\n"},"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.#ctor*":{"uid":"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.#ctor*","name":"DAM_M04UF1_Css3Assignment","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment.DAM_M04UF1_Css3Assignment","nameWithType":"DAM_M04UF1_Css3Assignment.DAM_M04UF1_Css3Assignment"},"AutoCheck.CopyDetectors.PlainText.Compare*":{"uid":"AutoCheck.CopyDetectors.PlainText.Compare*","name":"Compare","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.Compare","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Compare","nameWithType":"PlainText.Compare"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DataBase":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DataBase","name":"DataBase","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.DataBase","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.DataBase","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).DataBase","nameWithType":"ScriptDB<None>.DataBase","nameWithType.vb":"ScriptDB(Of None).DataBase"},"AutoCheck.Connectors.Postgres.GetViewDefinition*":{"uid":"AutoCheck.Connectors.Postgres.GetViewDefinition*","name":"GetViewDefinition","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetViewDefinition","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetViewDefinition","nameWithType":"Postgres.GetViewDefinition"},"AutoCheck.Core.ScriptGDrive`1.GDriveFolder":{"uid":"AutoCheck.Core.ScriptGDrive`1.GDriveFolder","name":"GDriveFolder","href":null,"commentId":"P:AutoCheck.Core.ScriptGDrive`1.GDriveFolder","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.GDriveFolder","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).GDriveFolder","nameWithType":"ScriptGDrive<T>.GDriveFolder","nameWithType.vb":"ScriptGDrive(Of T).GDriveFolder"},"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.Run*":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_ViewsExtendedAssignment.Run","nameWithType":"ASIX_M02UF3_ViewsExtendedAssignment.Run"},"AutoCheck.Connectors.Postgres.DropUser*":{"uid":"AutoCheck.Connectors.Postgres.DropUser*","name":"DropUser","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DropUser","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DropUser","nameWithType":"Postgres.DropUser"},"AutoCheck.Core.ScriptDB`1.Password*":{"uid":"AutoCheck.Core.ScriptDB`1.Password*","name":"Password","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.Password","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Password","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Password","nameWithType":"ScriptDB<T>.Password","nameWithType.vb":"ScriptDB(Of T).Password"},"AutoCheck.Connectors.Html.Dispose*":{"uid":"AutoCheck.Connectors.Html.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Html.Dispose","nameWithType":"Html.Dispose"},"AutoCheck.Connectors.Postgres.Destination.#ctor*":{"uid":"AutoCheck.Connectors.Postgres.Destination.#ctor*","name":"Destination","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Destination.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Destination.Destination","nameWithType":"Postgres.Destination.Destination"},"AutoCheck.Checkers.Html.CheckIfSiblingsMatchesAmount*":{"uid":"AutoCheck.Checkers.Html.CheckIfSiblingsMatchesAmount*","name":"CheckIfSiblingsMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.CheckIfSiblingsMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.Html.CheckIfSiblingsMatchesAmount","nameWithType":"Html.CheckIfSiblingsMatchesAmount"},"System.Object":{"uid":"System.Object","name":"Object","href":null,"commentId":"T:System.Object","fullName":"System.Object","nameWithType":"Object"},"AutoCheck.Core.Script`1.Score":{"uid":"AutoCheck.Core.Script`1.Score","name":"Score","href":null,"commentId":"P:AutoCheck.Core.Script`1.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Score","fullName.vb":"AutoCheck.Core.Script(Of T).Score","nameWithType":"Script<T>.Score","nameWithType.vb":"Script(Of T).Score"},"ToolBox.Bridge.ShellConfigurator":{"uid":"ToolBox.Bridge.ShellConfigurator","name":"ShellConfigurator","href":null,"commentId":"T:ToolBox.Bridge.ShellConfigurator","fullName":"ToolBox.Bridge.ShellConfigurator","nameWithType":"ShellConfigurator"},"AutoCheck.Exceptions.ArgumentInvalidException.#ctor*":{"uid":"AutoCheck.Exceptions.ArgumentInvalidException.#ctor*","name":"ArgumentInvalidException","href":null,"commentId":"Overload:AutoCheck.Exceptions.ArgumentInvalidException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.ArgumentInvalidException.ArgumentInvalidException","nameWithType":"ArgumentInvalidException.ArgumentInvalidException"},"AutoCheck.Core.ScriptGDrive`1.DefaultArguments*":{"uid":"AutoCheck.Core.ScriptGDrive`1.DefaultArguments*","name":"DefaultArguments","href":null,"commentId":"Overload:AutoCheck.Core.ScriptGDrive`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.DefaultArguments","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).DefaultArguments","nameWithType":"ScriptGDrive<T>.DefaultArguments","nameWithType.vb":"ScriptGDrive(Of T).DefaultArguments"},"AutoCheck.Checkers.Odoo.#ctor*":{"uid":"AutoCheck.Checkers.Odoo.#ctor*","name":"Odoo","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.Odoo","nameWithType":"Odoo.Odoo"},"AutoCheck.Connectors.GDrive.CountFolders*":{"uid":"AutoCheck.Connectors.GDrive.CountFolders*","name":"CountFolders","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.CountFolders","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.CountFolders","nameWithType":"GDrive.CountFolders"},"AutoCheck.Connectors.Postgres.GetLastID(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetLastID(System.String,System.String,System.String)","name":"GetLastID(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetLastID(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetLastID(System.String, System.String, System.String)","nameWithType":"Postgres.GetLastID(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the higher value found once performed the query.</p>\n"},"AutoCheck.Core.ScriptFiles`1.Student":{"uid":"AutoCheck.Core.ScriptFiles`1.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptFiles`1.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.Student","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).Student","nameWithType":"ScriptFiles<T>.Student","nameWithType.vb":"ScriptFiles(Of T).Student"},"AutoCheck.Connectors.RemoteShell.Dispose*":{"uid":"AutoCheck.Connectors.RemoteShell.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.Dispose","nameWithType":"RemoteShell.Dispose"},"AutoCheck.Connectors.GDrive.CreateFolder*":{"uid":"AutoCheck.Connectors.GDrive.CreateFolder*","name":"CreateFolder","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.CreateFolder","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.CreateFolder","nameWithType":"GDrive.CreateFolder"},"AutoCheck.Core.ScriptGDrive`1.Secret*":{"uid":"AutoCheck.Core.ScriptGDrive`1.Secret*","name":"Secret","href":null,"commentId":"Overload:AutoCheck.Core.ScriptGDrive`1.Secret","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.Secret","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).Secret","nameWithType":"ScriptGDrive<T>.Secret","nameWithType.vb":"ScriptGDrive(Of T).Secret"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}.Student":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.None}.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.None>.Student","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.None).Student","nameWithType":"ScriptFiles<None>.Student","nameWithType.vb":"ScriptFiles(Of None).Student"},"AutoCheck.Checkers.RemoteShell":{"uid":"AutoCheck.Checkers.RemoteShell","name":"RemoteShell","href":null,"commentId":"T:AutoCheck.Checkers.RemoteShell","isSpec":"True","fullName":"AutoCheck.Checkers.RemoteShell","nameWithType":"RemoteShell","summary":"<p sourcefile=\"api/AutoCheck.Checkers.RemoteShell.yml\" sourcestartlinenumber=\"2\">Allows data validations over a local shell (running local commands).</p>\n"},"AutoCheck.Connectors.Postgres.GetLastID*":{"uid":"AutoCheck.Connectors.Postgres.GetLastID*","name":"GetLastID","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetLastID","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetLastID","nameWithType":"Postgres.GetLastID"},"AutoCheck.Connectors.Odoo.GetUserID*":{"uid":"AutoCheck.Connectors.Odoo.GetUserID*","name":"GetUserID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetUserID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetUserID","nameWithType":"Odoo.GetUserID"},"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.Run*":{"uid":"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.Run","nameWithType":"DAM_M04UF3_ErpPresentationAssignment.Run"},"AutoCheck.Core.Utils.AppFolder*":{"uid":"AutoCheck.Core.Utils.AppFolder*","name":"AppFolder","href":null,"commentId":"Overload:AutoCheck.Core.Utils.AppFolder","isSpec":"True","fullName":"AutoCheck.Core.Utils.AppFolder","nameWithType":"Utils.AppFolder"},"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment":{"uid":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment","name":"DAM_M10UF2_OdooCsvAssignment","href":null,"commentId":"T:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment","nameWithType":"DAM_M10UF2_OdooCsvAssignment"},"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,AutoCheck.Core.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,AutoCheck.Core.Operator)","name":"CheckIfCommandMatchesResult(String, String, Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,AutoCheck.Core.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String, System.String, AutoCheck.Core.Operator)","nameWithType":"LocalShell.CheckIfCommandMatchesResult(String, String, Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks if the executed command produces the expected result.</p>\n"},"AutoCheck.Checkers.Css.CheckIfPropertiesAppliedMatchesAmount*":{"uid":"AutoCheck.Checkers.Css.CheckIfPropertiesAppliedMatchesAmount*","name":"CheckIfPropertiesAppliedMatchesAmount","href":null,"commentId":"Overload:AutoCheck.Checkers.Css.CheckIfPropertiesAppliedMatchesAmount","isSpec":"True","fullName":"AutoCheck.Checkers.Css.CheckIfPropertiesAppliedMatchesAmount","nameWithType":"Css.CheckIfPropertiesAppliedMatchesAmount"},"AutoCheck.Core.OS":{"uid":"AutoCheck.Core.OS","name":"OS","href":null,"commentId":"T:AutoCheck.Core.OS","isSpec":"True","fullName":"AutoCheck.Core.OS","nameWithType":"OS"},"AutoCheck.CopyDetectors.PlainText.Count":{"uid":"AutoCheck.CopyDetectors.PlainText.Count","name":"Count","href":null,"commentId":"P:AutoCheck.CopyDetectors.PlainText.Count","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.Count","nameWithType":"PlainText.Count","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">The quantity of files loaded.</p>\n"},"AutoCheck.Core.Script`1.IsQuestionOpen*":{"uid":"AutoCheck.Core.Script`1.IsQuestionOpen*","name":"IsQuestionOpen","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of T).IsQuestionOpen","nameWithType":"Script<T>.IsQuestionOpen","nameWithType.vb":"Script(Of T).IsQuestionOpen"},"Renci.SshNet":{"uid":"Renci.SshNet","name":"Renci.SshNet","href":null,"commentId":"N:Renci.SshNet","fullName":"Renci.SshNet","nameWithType":"Renci.SshNet"},"AutoCheck.Checkers.LocalShell.CheckIfFolderExists*":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFolderExists*","name":"CheckIfFolderExists","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.CheckIfFolderExists","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFolderExists","nameWithType":"LocalShell.CheckIfFolderExists"},"System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}":{"uid":"System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}","name":"Dictionary<String, List<String>>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}","isSpec":"True","name.vb":"Dictionary(Of String, List(Of String))","fullName":"System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>","fullName.vb":"System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String))","nameWithType":"Dictionary<String, List<String>>","nameWithType.vb":"Dictionary(Of String, List(Of String))"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Batch":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Batch","name":"Batch()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.Batch()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).Batch()","nameWithType":"Script<Html>.Batch()","nameWithType.vb":"Script(Of Html).Batch()"},"AutoCheck.Checkers.LocalShell.Dispose*":{"uid":"AutoCheck.Checkers.LocalShell.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.Dispose","nameWithType":"LocalShell.Dispose"},"AutoCheck.Connectors.Postgres.GetViewDefinition(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetViewDefinition(System.String,System.String)","name":"GetViewDefinition(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetViewDefinition(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetViewDefinition(System.String, System.String)","nameWithType":"Postgres.GetViewDefinition(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Given a view, return its definition as a select query.</p>\n"},"AutoCheck.Connectors.Html.GetRelatedLabels*":{"uid":"AutoCheck.Connectors.Html.GetRelatedLabels*","name":"GetRelatedLabels","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.GetRelatedLabels","isSpec":"True","fullName":"AutoCheck.Connectors.Html.GetRelatedLabels","nameWithType":"Html.GetRelatedLabels"},"AutoCheck.Core.CopyDetector.CopyDetected(System.String,System.Single)":{"uid":"AutoCheck.Core.CopyDetector.CopyDetected(System.String,System.Single)","name":"CopyDetected(String, Single)","href":null,"commentId":"M:AutoCheck.Core.CopyDetector.CopyDetected(System.String,System.Single)","fullName":"AutoCheck.Core.CopyDetector.CopyDetected(System.String, System.Single)","nameWithType":"CopyDetector.CopyDetected(String, Single)"},"System.Exception.Data":{"uid":"System.Exception.Data","name":"Data","href":null,"commentId":"P:System.Exception.Data","fullName":"System.Exception.Data","nameWithType":"Exception.Data"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CancelQuestion":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CancelQuestion","name":"CancelQuestion()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CancelQuestion","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.CancelQuestion()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).CancelQuestion()","nameWithType":"Script<Css>.CancelQuestion()","nameWithType.vb":"Script(Of Css).CancelQuestion()"},"AutoCheck.Core.Script{{T}}.EvalQuestion(System.Collections.Generic.List{System.String})":{"uid":"AutoCheck.Core.Script{{T}}.EvalQuestion(System.Collections.Generic.List{System.String})","name":"EvalQuestion(List<String>)","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.EvalQuestion(System.Collections.Generic.List{System.String})","isSpec":"True","name.vb":"EvalQuestion(List(Of String))","fullName":"AutoCheck.Core.Script<T>.EvalQuestion(System.Collections.Generic.List<System.String>)","fullName.vb":"AutoCheck.Core.Script(Of T).EvalQuestion(System.Collections.Generic.List(Of System.String))","nameWithType":"Script<T>.EvalQuestion(List<String>)","nameWithType.vb":"Script(Of T).EvalQuestion(List(Of String))"},"AutoCheck.Connectors.Postgres.GetUsers*":{"uid":"AutoCheck.Connectors.Postgres.GetUsers*","name":"GetUsers","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetUsers","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetUsers","nameWithType":"Postgres.GetUsers"},"AutoCheck.Exceptions.ConnectionInvalidException":{"uid":"AutoCheck.Exceptions.ConnectionInvalidException","name":"ConnectionInvalidException","href":null,"commentId":"T:AutoCheck.Exceptions.ConnectionInvalidException","isSpec":"True","fullName":"AutoCheck.Exceptions.ConnectionInvalidException","nameWithType":"ConnectionInvalidException"},"AutoCheck.Connectors.Postgres.Insert(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Insert(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Insert(String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Insert(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Insert(String, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Insert(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Insert(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Insert(String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Insert(String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Inserts new data into a table.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.IsQuestionOpen":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.IsQuestionOpen","name":"IsQuestionOpen","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).IsQuestionOpen","nameWithType":"Script<None>.IsQuestionOpen","nameWithType.vb":"Script(Of None).IsQuestionOpen"},"AutoCheck.Connectors.Postgres.Operator":{"uid":"AutoCheck.Connectors.Postgres.Operator","name":"Postgres.Operator","href":null,"commentId":"T:AutoCheck.Connectors.Postgres.Operator","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Operator","nameWithType":"Postgres.Operator","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Operator.yml\" sourcestartlinenumber=\"2\">Available option for comparing items</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.IsQuestionOpen":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.IsQuestionOpen","name":"IsQuestionOpen","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).IsQuestionOpen","nameWithType":"Script<Html>.IsQuestionOpen","nameWithType.vb":"Script(Of Html).IsQuestionOpen"},"AutoCheck.Checkers.Postgres.Name":{"uid":"AutoCheck.Checkers.Postgres.Name","name":"Name","href":null,"commentId":"P:AutoCheck.Checkers.Postgres.Name","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Name","nameWithType":"Postgres.Name","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database username, which will be used to perform operations.</p>\n"},"AutoCheck.Checkers.Csv.Dispose*":{"uid":"AutoCheck.Checkers.Csv.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.Csv.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.Csv.Dispose","nameWithType":"Csv.Dispose"},"AutoCheck.Connectors.Css.Dispose*":{"uid":"AutoCheck.Connectors.Css.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Css.Dispose","nameWithType":"Css.Dispose"},"AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.String,AutoCheck.Connectors.Postgres.Operator,System.Object,System.ComponentModel.ListSortDirection)":{"uid":"AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.String,AutoCheck.Connectors.Postgres.Operator,System.Object,System.ComponentModel.ListSortDirection)","name":"GetID(String, String, String, String, Postgres.Operator, Object, ListSortDirection)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.String,AutoCheck.Connectors.Postgres.Operator,System.Object,System.ComponentModel.ListSortDirection)","fullName":"AutoCheck.Connectors.Postgres.GetID(System.String, System.String, System.String, System.String, AutoCheck.Connectors.Postgres.Operator, System.Object, System.ComponentModel.ListSortDirection)","nameWithType":"Postgres.GetID(String, String, String, String, Postgres.Operator, Object, ListSortDirection)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the first pkField found once performed the query.</p>\n"},"AutoCheck.Connectors.Postgres.Filter":{"uid":"AutoCheck.Connectors.Postgres.Filter","name":"Postgres.Filter","href":null,"commentId":"T:AutoCheck.Connectors.Postgres.Filter","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Filter","nameWithType":"Postgres.Filter","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Filter.yml\" sourcestartlinenumber=\"2\">Allows filtering the data source over an SQL operation.</p>\n"},"System.Collections.Generic.Dictionary{System.String,System.String}":{"uid":"System.Collections.Generic.Dictionary{System.String,System.String}","name":"Dictionary<String, String>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{System.String,System.String}","isSpec":"True","name.vb":"Dictionary(Of String, String)","fullName":"System.Collections.Generic.Dictionary<System.String, System.String>","fullName.vb":"System.Collections.Generic.Dictionary(Of System.String, System.String)","nameWithType":"Dictionary<String, String>","nameWithType.vb":"Dictionary(Of String, String)"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Path":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Path","name":"Path","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.Path","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).Path","nameWithType":"Script<Html>.Path","nameWithType.vb":"Script(Of Html).Path"},"AutoCheck.Checkers.Odoo.CheckIfPurchaseMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfPurchaseMatchesData*","name":"CheckIfPurchaseMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfPurchaseMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfPurchaseMatchesData","nameWithType":"Odoo.CheckIfPurchaseMatchesData"},"AutoCheck.Checkers.Postgres.#ctor*":{"uid":"AutoCheck.Checkers.Postgres.#ctor*","name":"Postgres","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Postgres","nameWithType":"Postgres.Postgres"},"AutoCheck.Connectors.CsvDocument.Count*":{"uid":"AutoCheck.Connectors.CsvDocument.Count*","name":"Count","href":null,"commentId":"Overload:AutoCheck.Connectors.CsvDocument.Count","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument.Count","nameWithType":"CsvDocument.Count"},"AutoCheck.Connectors.GDrive.ExistsFolder*":{"uid":"AutoCheck.Connectors.GDrive.ExistsFolder*","name":"ExistsFolder","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.ExistsFolder","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.ExistsFolder","nameWithType":"GDrive.ExistsFolder"},"AutoCheck.Connectors.Postgres.ExistsRole(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ExistsRole(System.String)","name":"ExistsRole(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExistsRole(System.String)","fullName":"AutoCheck.Connectors.Postgres.ExistsRole(System.String)","nameWithType":"Postgres.ExistsRole(String)"},"AutoCheck.Core.ScriptFiles`1.Run*":{"uid":"AutoCheck.Core.ScriptFiles`1.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Core.ScriptFiles`1.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.Run","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).Run","nameWithType":"ScriptFiles<T>.Run","nameWithType.vb":"ScriptFiles(Of T).Run"},"AutoCheck.Connectors.Zip.ExtractFile*":{"uid":"AutoCheck.Connectors.Zip.ExtractFile*","name":"ExtractFile","href":null,"commentId":"Overload:AutoCheck.Connectors.Zip.ExtractFile","isSpec":"True","fullName":"AutoCheck.Connectors.Zip.ExtractFile","nameWithType":"Zip.ExtractFile"},"AutoCheck.Connectors.Csv.CsvDoc*":{"uid":"AutoCheck.Connectors.Csv.CsvDoc*","name":"CsvDoc","href":null,"commentId":"Overload:AutoCheck.Connectors.Csv.CsvDoc","isSpec":"True","fullName":"AutoCheck.Connectors.Csv.CsvDoc","nameWithType":"Csv.CsvDoc"},"AutoCheck.Connectors.RemoteShell.Username*":{"uid":"AutoCheck.Connectors.RemoteShell.Username*","name":"Username","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.Username","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.Username","nameWithType":"RemoteShell.Username"},"AutoCheck.Core.CopyDetector.Load(System.String)":{"uid":"AutoCheck.Core.CopyDetector.Load(System.String)","name":"Load(String)","href":null,"commentId":"M:AutoCheck.Core.CopyDetector.Load(System.String)","fullName":"AutoCheck.Core.CopyDetector.Load(System.String)","nameWithType":"CopyDetector.Load(String)"},"AutoCheck.Connectors.Odoo.CompanyName*":{"uid":"AutoCheck.Connectors.Odoo.CompanyName*","name":"CompanyName","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.CompanyName","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.CompanyName","nameWithType":"Odoo.CompanyName"},"AutoCheck.Connectors.Odoo.GetCompanyID*":{"uid":"AutoCheck.Connectors.Odoo.GetCompanyID*","name":"GetCompanyID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetCompanyID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetCompanyID","nameWithType":"Odoo.GetCompanyID"},"AutoCheck.Core.ScriptDB`1.SetUp":{"uid":"AutoCheck.Core.ScriptDB`1.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB`1.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.SetUp()","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).SetUp()","nameWithType":"ScriptDB<T>.SetUp()","nameWithType.vb":"ScriptDB(Of T).SetUp()"},"AutoCheck.Connectors.Postgres.GetID*":{"uid":"AutoCheck.Connectors.Postgres.GetID*","name":"GetID","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetID","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetID","nameWithType":"Postgres.GetID"},"AutoCheck.Checkers.LocalShell.Connector*":{"uid":"AutoCheck.Checkers.LocalShell.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.LocalShell.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell.Connector","nameWithType":"LocalShell.Connector"},"AutoCheck.Exceptions.DownloadFailedException":{"uid":"AutoCheck.Exceptions.DownloadFailedException","name":"DownloadFailedException","href":null,"commentId":"T:AutoCheck.Exceptions.DownloadFailedException","isSpec":"True","fullName":"AutoCheck.Exceptions.DownloadFailedException","nameWithType":"DownloadFailedException"},"AutoCheck.Connectors.LocalShell.CountFiles*":{"uid":"AutoCheck.Connectors.LocalShell.CountFiles*","name":"CountFiles","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.CountFiles","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.CountFiles","nameWithType":"LocalShell.CountFiles"},"AutoCheck.Connectors.Html.CountSiblings*":{"uid":"AutoCheck.Connectors.Html.CountSiblings*","name":"CountSiblings","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.CountSiblings","isSpec":"True","fullName":"AutoCheck.Connectors.Html.CountSiblings","nameWithType":"Html.CountSiblings"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Password":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Password","name":"Password","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Password","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Password","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Password","nameWithType":"ScriptDB<None>.Password","nameWithType.vb":"ScriptDB(Of None).Password"},"AutoCheck.Core.Script`1.MaxScore*":{"uid":"AutoCheck.Core.Script`1.MaxScore*","name":"MaxScore","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of T).MaxScore","nameWithType":"Script<T>.MaxScore","nameWithType.vb":"Script(Of T).MaxScore"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.Run":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Css>.Run()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Css).Run()","nameWithType":"ScriptFiles<Css>.Run()","nameWithType.vb":"ScriptFiles(Of Css).Run()"},"AutoCheck.Core.Script{{T}}.SetUp":{"uid":"AutoCheck.Core.Script{{T}}.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.SetUp","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.SetUp()","fullName.vb":"AutoCheck.Core.Script(Of T).SetUp()","nameWithType":"Script<T>.SetUp()","nameWithType.vb":"Script(Of T).SetUp()"},"AutoCheck.Checkers.Odoo.CheckIfStockMovementMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfStockMovementMatchesData*","name":"CheckIfStockMovementMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfStockMovementMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfStockMovementMatchesData","nameWithType":"Odoo.CheckIfStockMovementMatchesData"},"AutoCheck.Checkers.LocalShell":{"uid":"AutoCheck.Checkers.LocalShell","name":"LocalShell","href":null,"commentId":"T:AutoCheck.Checkers.LocalShell","isSpec":"True","fullName":"AutoCheck.Checkers.LocalShell","nameWithType":"LocalShell","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Allows data validations over a local shell (running local commands).</p>\n"},"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment":{"uid":"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment","name":"DAM_M10UF1_OdooUsageAssignment","href":null,"commentId":"T:AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF1_OdooUsageAssignment","nameWithType":"DAM_M10UF1_OdooUsageAssignment"},"AutoCheck.Connectors.RemoteShell.RunCommand*":{"uid":"AutoCheck.Connectors.RemoteShell.RunCommand*","name":"RunCommand","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.RunCommand","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.RunCommand","nameWithType":"RemoteShell.RunCommand"},"AutoCheck.Checkers.Postgres.Student":{"uid":"AutoCheck.Checkers.Postgres.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Checkers.Postgres.Student","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.Student","nameWithType":"Postgres.Student","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">The student name wich is the original database creator.</p>\n"},"AutoCheck.CopyDetectors.PlainText.CopyDetected*":{"uid":"AutoCheck.CopyDetectors.PlainText.CopyDetected*","name":"CopyDetected","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.PlainText.CopyDetected","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.CopyDetected","nameWithType":"PlainText.CopyDetected"},"AutoCheck.Core.ScriptGDrive`1.Username":{"uid":"AutoCheck.Core.ScriptGDrive`1.Username","name":"Username","href":null,"commentId":"P:AutoCheck.Core.ScriptGDrive`1.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.Username","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).Username","nameWithType":"ScriptGDrive<T>.Username","nameWithType.vb":"ScriptGDrive(Of T).Username"},"AutoCheck.Core.Script`1.PrintScore":{"uid":"AutoCheck.Core.Script`1.PrintScore","name":"PrintScore()","href":null,"commentId":"M:AutoCheck.Core.Script`1.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.PrintScore()","fullName.vb":"AutoCheck.Core.Script(Of T).PrintScore()","nameWithType":"Script<T>.PrintScore()","nameWithType.vb":"Script(Of T).PrintScore()"},"System.Data":{"uid":"System.Data","name":"System.Data","href":null,"commentId":"N:System.Data","fullName":"System.Data","nameWithType":"System.Data"},"AutoCheck.Connectors.Css.Raw*":{"uid":"AutoCheck.Connectors.Css.Raw*","name":"Raw","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.Raw","isSpec":"True","fullName":"AutoCheck.Connectors.Css.Raw","nameWithType":"Css.Raw"},"AutoCheck.Connectors.Postgres.CreateRole*":{"uid":"AutoCheck.Connectors.Postgres.CreateRole*","name":"CreateRole","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CreateRole","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CreateRole","nameWithType":"Postgres.CreateRole"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.IsQuestionOpen":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.IsQuestionOpen","name":"IsQuestionOpen","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).IsQuestionOpen","nameWithType":"Script<Css>.IsQuestionOpen","nameWithType.vb":"Script(Of Css).IsQuestionOpen"},"AutoCheck.Connectors.LocalShell.Dispose":{"uid":"AutoCheck.Connectors.LocalShell.Dispose","name":"Dispose()","href":null,"commentId":"M:AutoCheck.Connectors.LocalShell.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.Dispose()","nameWithType":"LocalShell.Dispose()"},"AutoCheck.Connectors.Css.CheckIfCssPropertyHasBeenApplied*":{"uid":"AutoCheck.Connectors.Css.CheckIfCssPropertyHasBeenApplied*","name":"CheckIfCssPropertyHasBeenApplied","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.CheckIfCssPropertyHasBeenApplied","isSpec":"True","fullName":"AutoCheck.Connectors.Css.CheckIfCssPropertyHasBeenApplied","nameWithType":"Css.CheckIfCssPropertyHasBeenApplied"},"AutoCheck.Connectors.Postgres.CountUsers*":{"uid":"AutoCheck.Connectors.Postgres.CountUsers*","name":"CountUsers","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CountUsers","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CountUsers","nameWithType":"Postgres.CountUsers"},"AutoCheck.Connectors":{"uid":"AutoCheck.Connectors","name":"AutoCheck.Connectors","href":null,"commentId":"N:AutoCheck.Connectors","isSpec":"True","fullName":"AutoCheck.Connectors","nameWithType":"AutoCheck.Connectors"},"AutoCheck.Core.Utils.ExtractFile*":{"uid":"AutoCheck.Core.Utils.ExtractFile*","name":"ExtractFile","href":null,"commentId":"Overload:AutoCheck.Core.Utils.ExtractFile","isSpec":"True","fullName":"AutoCheck.Core.Utils.ExtractFile","nameWithType":"Utils.ExtractFile"},"AutoCheck.Core.ScriptFiles`1.DefaultArguments*":{"uid":"AutoCheck.Core.ScriptFiles`1.DefaultArguments*","name":"DefaultArguments","href":null,"commentId":"Overload:AutoCheck.Core.ScriptFiles`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.DefaultArguments","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).DefaultArguments","nameWithType":"ScriptFiles<T>.DefaultArguments","nameWithType.vb":"ScriptFiles(Of T).DefaultArguments"},"HtmlAgilityPack.HtmlDocument":{"uid":"HtmlAgilityPack.HtmlDocument","name":"HtmlDocument","href":null,"commentId":"T:HtmlAgilityPack.HtmlDocument","fullName":"HtmlAgilityPack.HtmlDocument","nameWithType":"HtmlDocument"},"AutoCheck.Core.Utils.FolderNameToDataBase*":{"uid":"AutoCheck.Core.Utils.FolderNameToDataBase*","name":"FolderNameToDataBase","href":null,"commentId":"Overload:AutoCheck.Core.Utils.FolderNameToDataBase","isSpec":"True","fullName":"AutoCheck.Core.Utils.FolderNameToDataBase","nameWithType":"Utils.FolderNameToDataBase"},"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)":{"uid":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)","name":"UpdateData(Dictionary<String, Object>, String, String, String, Object, Postgres.Operator)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)","name.vb":"UpdateData(Dictionary(Of String, Object), String, String, String, Object, Postgres.Operator)","fullName":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator)","fullName.vb":"AutoCheck.Connectors.Postgres.UpdateData(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator)","nameWithType":"Postgres.UpdateData(Dictionary<String, Object>, String, String, String, Object, Postgres.Operator)","nameWithType.vb":"Postgres.UpdateData(Dictionary(Of String, Object), String, String, String, Object, Postgres.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Update some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Connectors.Odoo":{"uid":"AutoCheck.Connectors.Odoo","name":"Odoo","href":null,"commentId":"T:AutoCheck.Connectors.Odoo","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo","nameWithType":"Odoo","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Odoo.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with an Odoo instance.</p>\n"},"AutoCheck.Connectors.Postgres.TestConnection":{"uid":"AutoCheck.Connectors.Postgres.TestConnection","name":"TestConnection()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.TestConnection","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.TestConnection()","nameWithType":"Postgres.TestConnection()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Test the connection to the database, so an exception will be thrown if any problem occurs.</p>\n"},"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination)":{"uid":"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination)","name":"Delete(Postgres.Destination)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination)","nameWithType":"Postgres.Delete(Postgres.Destination)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Deletes some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.CopyDetectors.PlainText.WordCountWeight":{"uid":"AutoCheck.CopyDetectors.PlainText.WordCountWeight","name":"WordCountWeight","href":null,"commentId":"P:AutoCheck.CopyDetectors.PlainText.WordCountWeight","isSpec":"True","fullName":"AutoCheck.CopyDetectors.PlainText.WordCountWeight","nameWithType":"PlainText.WordCountWeight","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.PlainText.yml\" sourcestartlinenumber=\"2\">The weight that word counting will have when computing the global matching percentage.</p>\n"},"AutoCheck.Connectors.Postgres.CreateUser*":{"uid":"AutoCheck.Connectors.Postgres.CreateUser*","name":"CreateUser","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CreateUser","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CreateUser","nameWithType":"Postgres.CreateUser"},"AutoCheck.Core.ScriptV2.Vars*":{"uid":"AutoCheck.Core.ScriptV2.Vars*","name":"Vars","href":null,"commentId":"Overload:AutoCheck.Core.ScriptV2.Vars","isSpec":"True","fullName":"AutoCheck.Core.ScriptV2.Vars","nameWithType":"ScriptV2.Vars"},"AutoCheck.Connectors.RemoteShell.#ctor*":{"uid":"AutoCheck.Connectors.RemoteShell.#ctor*","name":"RemoteShell","href":null,"commentId":"Overload:AutoCheck.Connectors.RemoteShell.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.RemoteShell.RemoteShell","nameWithType":"RemoteShell.RemoteShell"},"AutoCheck.Connectors.Odoo.GetPurchaseCode*":{"uid":"AutoCheck.Connectors.Odoo.GetPurchaseCode*","name":"GetPurchaseCode","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetPurchaseCode","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetPurchaseCode","nameWithType":"Odoo.GetPurchaseCode"},"AutoCheck.Core.ScriptGDrive`1.DefaultArguments":{"uid":"AutoCheck.Core.ScriptGDrive`1.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptGDrive`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<T>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T).DefaultArguments()","nameWithType":"ScriptGDrive<T>.DefaultArguments()","nameWithType.vb":"ScriptGDrive(Of T).DefaultArguments()"},"AutoCheck.Checkers.Html.#ctor*":{"uid":"AutoCheck.Checkers.Html.#ctor*","name":"Html","href":null,"commentId":"Overload:AutoCheck.Checkers.Html.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.Html.Html","nameWithType":"Html.Html"},"AutoCheck.Connectors.Css.ValidateCSS3AgainstW3C*":{"uid":"AutoCheck.Connectors.Css.ValidateCSS3AgainstW3C*","name":"ValidateCSS3AgainstW3C","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.ValidateCSS3AgainstW3C","isSpec":"True","fullName":"AutoCheck.Connectors.Css.ValidateCSS3AgainstW3C","nameWithType":"Css.ValidateCSS3AgainstW3C"},"AutoCheck.Core.Output.ToHTML*":{"uid":"AutoCheck.Core.Output.ToHTML*","name":"ToHTML","href":null,"commentId":"Overload:AutoCheck.Core.Output.ToHTML","isSpec":"True","fullName":"AutoCheck.Core.Output.ToHTML","nameWithType":"Output.ToHTML"},"AutoCheck.Connectors.Postgres.ExecuteQuery(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ExecuteQuery(System.String)","name":"ExecuteQuery(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExecuteQuery(System.String)","fullName":"AutoCheck.Connectors.Postgres.ExecuteQuery(System.String)","nameWithType":"Postgres.ExecuteQuery(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Runs a query that produces an output as a set of data.</p>\n"},"AutoCheck.Connectors.Postgres.CompareSelects(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.CompareSelects(System.String,System.String)","name":"CompareSelects(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CompareSelects(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.CompareSelects(System.String, System.String)","nameWithType":"Postgres.CompareSelects(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Compares two select queries, executing them and comparing the exact amount of rows and its data (doesn't compare the column names).</p>\n"},"AutoCheck.Core.CopyDetector.Count":{"uid":"AutoCheck.Core.CopyDetector.Count","name":"Count","href":null,"commentId":"P:AutoCheck.Core.CopyDetector.Count","isSpec":"True","fullName":"AutoCheck.Core.CopyDetector.Count","nameWithType":"CopyDetector.Count"},"System.Boolean":{"uid":"System.Boolean","name":"Boolean","href":null,"commentId":"T:System.Boolean","fullName":"System.Boolean","nameWithType":"Boolean"},"AutoCheck.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)":{"uid":"AutoCheck.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)","name":"CheckForeignKey(String, String, String, String, String, String)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckForeignKey(System.String,System.String,System.String,System.String,System.String,System.String)","fullName":"AutoCheck.Checkers.Postgres.CheckForeignKey(System.String, System.String, System.String, System.String, System.String, System.String)","nameWithType":"Postgres.CheckForeignKey(String, String, String, String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if a table's columns has been stablished as foreign key to another table's column.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Path":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Path","name":"Path","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.Path","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).Path","nameWithType":"Script<None>.Path","nameWithType.vb":"Script(Of None).Path"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}","name":"ScriptDB<SqlLog>","href":null,"commentId":"T:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}","isSpec":"True","name.vb":"ScriptDB(Of SqlLog)","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog)","nameWithType":"ScriptDB<SqlLog>","nameWithType.vb":"ScriptDB(Of SqlLog)"},"AutoCheck.Connectors.Postgres.CreateDataBase(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.CreateDataBase(System.String,System.String)","name":"CreateDataBase(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CreateDataBase(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.CreateDataBase(System.String, System.String)","nameWithType":"Postgres.CreateDataBase(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Creates a new database using a SQL Dump file.</p>\n"},"AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String)","name":"CountRegisters(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CountRegisters(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.CountRegisters(System.String, System.String)","nameWithType":"Postgres.CountRegisters(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Counts how many registers appears in a table.</p>\n"},"AutoCheck.Connectors.Postgres.GetForeignKeys*":{"uid":"AutoCheck.Connectors.Postgres.GetForeignKeys*","name":"GetForeignKeys","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetForeignKeys","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetForeignKeys","nameWithType":"Postgres.GetForeignKeys"},"System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}":{"uid":"System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}","name":"List<HtmlNode>","href":null,"commentId":"T:System.Collections.Generic.List{HtmlAgilityPack.HtmlNode}","isSpec":"True","name.vb":"List(Of HtmlNode)","fullName":"System.Collections.Generic.List<HtmlAgilityPack.HtmlNode>","fullName.vb":"System.Collections.Generic.List(Of HtmlAgilityPack.HtmlNode)","nameWithType":"List<HtmlNode>","nameWithType.vb":"List(Of HtmlNode)"},"AutoCheck.Connectors.Postgres.ExistsUser(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ExistsUser(System.String)","name":"ExistsUser(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExistsUser(System.String)","fullName":"AutoCheck.Connectors.Postgres.ExistsUser(System.String)","nameWithType":"Postgres.ExistsUser(String)"},"System.Data.DataTable":{"uid":"System.Data.DataTable","name":"DataTable","href":null,"commentId":"T:System.Data.DataTable","fullName":"System.Data.DataTable","nameWithType":"DataTable"},"AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)":{"uid":"AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)","name":"OpenQuestion(String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script`1.OpenQuestion(System.String,System.Single)","fullName":"AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.Single)","nameWithType":"Script<T>.OpenQuestion(String, Single)","nameWithType.vb":"Script(Of T).OpenQuestion(String, Single)"},"AutoCheck.Connectors.Postgres.ExecuteScalar(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ExecuteScalar(System.String)","name":"ExecuteScalar(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExecuteScalar(System.String)","fullName":"AutoCheck.Connectors.Postgres.ExecuteScalar(System.String)","nameWithType":"Postgres.ExecuteScalar(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Runs a query that produces an output as a single data.</p>\n"},"AutoCheck.Core.Script`1.Batch":{"uid":"AutoCheck.Core.Script`1.Batch","name":"Batch()","href":null,"commentId":"M:AutoCheck.Core.Script`1.Batch","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Batch()","fullName.vb":"AutoCheck.Core.Script(Of T).Batch()","nameWithType":"Script<T>.Batch()","nameWithType.vb":"Script(Of T).Batch()"},"AutoCheck.Connectors.Postgres.ImportSqlFile(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ImportSqlFile(System.String)","name":"ImportSqlFile(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ImportSqlFile(System.String)","fullName":"AutoCheck.Connectors.Postgres.ImportSqlFile(System.String)","nameWithType":"Postgres.ImportSqlFile(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Imports an SQL into the current database.</p>\n"},"AutoCheck.Core.Script`1.Path":{"uid":"AutoCheck.Core.Script`1.Path","name":"Path","href":null,"commentId":"P:AutoCheck.Core.Script`1.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Path","fullName.vb":"AutoCheck.Core.Script(Of T).Path","nameWithType":"Script<T>.Path","nameWithType.vb":"Script(Of T).Path"},"AutoCheck.Connectors.LocalShell.GetFolder*":{"uid":"AutoCheck.Connectors.LocalShell.GetFolder*","name":"GetFolder","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.GetFolder","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.GetFolder","nameWithType":"LocalShell.GetFolder"},"AutoCheck.Core.Checker.Dispose":{"uid":"AutoCheck.Core.Checker.Dispose","name":"Dispose()","href":null,"commentId":"M:AutoCheck.Core.Checker.Dispose","isSpec":"True","fullName":"AutoCheck.Core.Checker.Dispose()","nameWithType":"Checker.Dispose()"},"AutoCheck.Connectors.GDrive.DeleteFolder*":{"uid":"AutoCheck.Connectors.GDrive.DeleteFolder*","name":"DeleteFolder","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.DeleteFolder","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.DeleteFolder","nameWithType":"GDrive.DeleteFolder"},"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableUpdatesData(String, String, String, Object, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableUpdatesData(String, String, String, Object, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableUpdatesData(String, String, String, Object, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableUpdatesData(String, String, String, Object, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be updated into the table, the filter operator '=' will be used.</p>\n"},"AutoCheck.Core.Connector.Dispose*":{"uid":"AutoCheck.Core.Connector.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Core.Connector.Dispose","isSpec":"True","fullName":"AutoCheck.Core.Connector.Dispose","nameWithType":"Connector.Dispose"},"AutoCheck.Connectors.Postgres.Update(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Connectors.Postgres.Update(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"Update(String, String, String, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Update(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"Update(String, String, String, Dictionary(Of String, Object))","fullName":"AutoCheck.Connectors.Postgres.Update(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Connectors.Postgres.Update(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.Update(String, String, String, Dictionary<String, Object>)","nameWithType.vb":"Postgres.Update(String, String, String, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Updates some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"System.String[]":{"uid":"System.String[]","name":"String[]","href":null,"name.vb":"String()","fullName":"System.String[]","fullName.vb":"System.String()","nameWithType":"String[]","nameWithType.vb":"String()"},"AutoCheck.Connectors.Odoo.GetLastSaleID*":{"uid":"AutoCheck.Connectors.Odoo.GetLastSaleID*","name":"GetLastSaleID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetLastSaleID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetLastSaleID","nameWithType":"Odoo.GetLastSaleID"},"AutoCheck.Connectors.Postgres.CreateUser(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.CreateUser(System.String,System.String)","name":"CreateUser(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CreateUser(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.CreateUser(System.String, System.String)","nameWithType":"Postgres.CreateUser(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Creates a new user.</p>\n"},"AutoCheck.Core.Script`1.Clean":{"uid":"AutoCheck.Core.Script`1.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.Script`1.Clean","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Clean()","fullName.vb":"AutoCheck.Core.Script(Of T).Clean()","nameWithType":"Script<T>.Clean()","nameWithType.vb":"Script(Of T).Clean()"},"AutoCheck.Core.Utils":{"uid":"AutoCheck.Core.Utils","name":"Utils","href":null,"commentId":"T:AutoCheck.Core.Utils","isSpec":"True","fullName":"AutoCheck.Core.Utils","nameWithType":"Utils"},"AutoCheck.Connectors.Postgres.CreateDataBase*":{"uid":"AutoCheck.Connectors.Postgres.CreateDataBase*","name":"CreateDataBase","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CreateDataBase","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CreateDataBase","nameWithType":"Postgres.CreateDataBase"},"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}":{"uid":"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}","name":"ScriptGDrive<None>","href":null,"commentId":"T:AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}","isSpec":"True","name.vb":"ScriptGDrive(Of None)","fullName":"AutoCheck.Core.ScriptGDrive<AutoCheck.CopyDetectors.None>","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of AutoCheck.CopyDetectors.None)","nameWithType":"ScriptGDrive<None>","nameWithType.vb":"ScriptGDrive(Of None)"},"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.#ctor*":{"uid":"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.#ctor*","name":"DAM_M04UF3_ErpPresentationAssignment","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF3_ErpPresentationAssignment.DAM_M04UF3_ErpPresentationAssignment","nameWithType":"DAM_M04UF3_ErpPresentationAssignment.DAM_M04UF3_ErpPresentationAssignment"},"AutoCheck.Core.ScriptFiles`1":{"uid":"AutoCheck.Core.ScriptFiles`1","name":"ScriptFiles<T>","href":null,"commentId":"T:AutoCheck.Core.ScriptFiles`1","isSpec":"True","name.vb":"ScriptFiles(Of T)","fullName":"AutoCheck.Core.ScriptFiles<T>","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T)","nameWithType":"ScriptFiles<T>","nameWithType.vb":"ScriptFiles(Of T)","summary":"<p sourcefile=\"api/AutoCheck.Core.ScriptFiles-1.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a file-system oriented custom script.\nThe script is the main container for a set of instructions, which will test the correctness of an assignement.</p>\n"},"AutoCheck.Connectors.Postgres.GetField``1(System.String,System.String,System.String,System.ComponentModel.ListSortDirection)":{"uid":"AutoCheck.Connectors.Postgres.GetField``1(System.String,System.String,System.String,System.ComponentModel.ListSortDirection)","name":"GetField<T>(String, String, String, ListSortDirection)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetField``1(System.String,System.String,System.String,System.ComponentModel.ListSortDirection)","name.vb":"GetField(Of T)(String, String, String, ListSortDirection)","fullName":"AutoCheck.Connectors.Postgres.GetField<T>(System.String, System.String, System.String, System.ComponentModel.ListSortDirection)","fullName.vb":"AutoCheck.Connectors.Postgres.GetField(Of T)(System.String, System.String, System.String, System.ComponentModel.ListSortDirection)","nameWithType":"Postgres.GetField<T>(String, String, String, ListSortDirection)","nameWithType.vb":"Postgres.GetField(Of T)(String, String, String, ListSortDirection)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the requested field's value for the first found item.</p>\n"},"System.Exception.SerializeObjectState":{"uid":"System.Exception.SerializeObjectState","name":"SerializeObjectState","href":null,"commentId":"E:System.Exception.SerializeObjectState","fullName":"System.Exception.SerializeObjectState","nameWithType":"Exception.SerializeObjectState"},"AutoCheck.Connectors.LocalShell.GetFolder(System.String,System.String,System.Boolean)":{"uid":"AutoCheck.Connectors.LocalShell.GetFolder(System.String,System.String,System.Boolean)","name":"GetFolder(String, String, Boolean)","href":null,"commentId":"M:AutoCheck.Connectors.LocalShell.GetFolder(System.String,System.String,System.Boolean)","fullName":"AutoCheck.Connectors.LocalShell.GetFolder(System.String, System.String, System.Boolean)","nameWithType":"LocalShell.GetFolder(String, String, Boolean)"},"AutoCheck.Connectors.Postgres.Password":{"uid":"AutoCheck.Connectors.Postgres.Password","name":"Password","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Password","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Password","nameWithType":"Postgres.Password","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"3\">The PostgreSQL database password, which will be used to perform operations.</p>\n"},"AutoCheck.Core.Output.BreakLine*":{"uid":"AutoCheck.Core.Output.BreakLine*","name":"BreakLine","href":null,"commentId":"Overload:AutoCheck.Core.Output.BreakLine","isSpec":"True","fullName":"AutoCheck.Core.Output.BreakLine","nameWithType":"Output.BreakLine"},"AutoCheck.Scripts":{"uid":"AutoCheck.Scripts","name":"AutoCheck.Scripts","href":null,"commentId":"N:AutoCheck.Scripts","isSpec":"True","fullName":"AutoCheck.Scripts","nameWithType":"AutoCheck.Scripts"},"AutoCheck.Core.ScriptDB`1.Student*":{"uid":"AutoCheck.Core.ScriptDB`1.Student*","name":"Student","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Student","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Student","nameWithType":"ScriptDB<T>.Student","nameWithType.vb":"ScriptDB(Of T).Student"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.SetUp":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.SetUp()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).SetUp()","nameWithType":"ScriptDB<SqlLog>.SetUp()","nameWithType.vb":"ScriptDB(Of SqlLog).SetUp()"},"AutoCheck.Connectors.GDrive":{"uid":"AutoCheck.Connectors.GDrive","name":"GDrive","href":null,"commentId":"T:AutoCheck.Connectors.GDrive","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive","nameWithType":"GDrive","summary":"<p sourcefile=\"api/AutoCheck.Connectors.GDrive.yml\" sourcestartlinenumber=\"2\">Allows in/out operations and/or data validations with a GDrive instance.</p>\n"},"AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor*":{"uid":"AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor*","name":"GENERIC_GoogleDriveImporter","href":null,"commentId":"Overload:AutoCheck.Scripts.GENERIC_GoogleDriveImporter.#ctor","isSpec":"True","fullName":"AutoCheck.Scripts.GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter","nameWithType":"GENERIC_GoogleDriveImporter.GENERIC_GoogleDriveImporter"},"AutoCheck.CopyDetectors.None.Count*":{"uid":"AutoCheck.CopyDetectors.None.Count*","name":"Count","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.None.Count","isSpec":"True","fullName":"AutoCheck.CopyDetectors.None.Count","nameWithType":"None.Count"},"AutoCheck.Connectors.Postgres.CreateDataBase":{"uid":"AutoCheck.Connectors.Postgres.CreateDataBase","name":"CreateDataBase()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.CreateDataBase","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CreateDataBase()","nameWithType":"Postgres.CreateDataBase()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Creates a new and empty database.</p>\n"},"System.ValueTuple{System.Int32,System.String}":{"uid":"System.ValueTuple{System.Int32,System.String}","name":"ValueTuple<Int32, String>","href":null,"commentId":"T:System.ValueTuple{System.Int32,System.String}","name.vb":"ValueTuple(Of Int32, String)","fullName":"System.ValueTuple<System.Int32, System.String>","fullName.vb":"System.ValueTuple(Of System.Int32, System.String)","nameWithType":"ValueTuple<Int32, String>","nameWithType.vb":"ValueTuple(Of Int32, String)"},"AutoCheck.Checkers.Odoo.CheckIfCompanyMatchesData*":{"uid":"AutoCheck.Checkers.Odoo.CheckIfCompanyMatchesData*","name":"CheckIfCompanyMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CheckIfCompanyMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CheckIfCompanyMatchesData","nameWithType":"Odoo.CheckIfCompanyMatchesData"},"System.Collections.Generic.Dictionary{System.String,System.String[]}":{"uid":"System.Collections.Generic.Dictionary{System.String,System.String[]}","name":"Dictionary<String, String[]>","href":null,"commentId":"T:System.Collections.Generic.Dictionary{System.String,System.String[]}","isSpec":"True","name.vb":"Dictionary(Of String, String())","fullName":"System.Collections.Generic.Dictionary<System.String, System.String[]>","fullName.vb":"System.Collections.Generic.Dictionary(Of System.String, System.String())","nameWithType":"Dictionary<String, String[]>","nameWithType.vb":"Dictionary(Of String, String())"},"AutoCheck.CopyDetectors.None.CopyDetected*":{"uid":"AutoCheck.CopyDetectors.None.CopyDetected*","name":"CopyDetected","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.None.CopyDetected","isSpec":"True","fullName":"AutoCheck.CopyDetectors.None.CopyDetected","nameWithType":"None.CopyDetected"},"System.Runtime.Serialization":{"uid":"System.Runtime.Serialization","name":"System.Runtime.Serialization","href":null,"commentId":"N:System.Runtime.Serialization","fullName":"System.Runtime.Serialization","nameWithType":"System.Runtime.Serialization"},"AutoCheck.Connectors.Moodle.#ctor*":{"uid":"AutoCheck.Connectors.Moodle.#ctor*","name":"Moodle","href":null,"commentId":"Overload:AutoCheck.Connectors.Moodle.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.Moodle.Moodle","nameWithType":"Moodle.Moodle"},"System.Object.GetHashCode":{"uid":"System.Object.GetHashCode","name":"GetHashCode()","href":null,"commentId":"M:System.Object.GetHashCode","fullName":"System.Object.GetHashCode()","nameWithType":"Object.GetHashCode()"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.IsQuestionOpen":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.IsQuestionOpen","name":"IsQuestionOpen","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.IsQuestionOpen","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.IsQuestionOpen","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).IsQuestionOpen","nameWithType":"Script<SqlLog>.IsQuestionOpen","nameWithType.vb":"Script(Of SqlLog).IsQuestionOpen"},"AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.ComponentModel.ListSortDirection)":{"uid":"AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.ComponentModel.ListSortDirection)","name":"GetID(String, String, String, ListSortDirection)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetID(System.String,System.String,System.String,System.ComponentModel.ListSortDirection)","fullName":"AutoCheck.Connectors.Postgres.GetID(System.String, System.String, System.String, System.ComponentModel.ListSortDirection)","nameWithType":"Postgres.GetID(String, String, String, ListSortDirection)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the first pkField found once performed the query.</p>\n"},"AutoCheck.Connectors.Postgres.BinPath*":{"uid":"AutoCheck.Connectors.Postgres.BinPath*","name":"BinPath","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.BinPath","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.BinPath","nameWithType":"Postgres.BinPath"},"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData*","name":"CheckIfTableUpdatesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData","nameWithType":"Postgres.CheckIfTableUpdatesData"},"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Filter)":{"uid":"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Filter)","name":"Delete(Postgres.Destination, Postgres.Filter)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination,AutoCheck.Connectors.Postgres.Filter)","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Delete(AutoCheck.Connectors.Postgres.Destination, AutoCheck.Connectors.Postgres.Filter)","nameWithType":"Postgres.Delete(Postgres.Destination, Postgres.Filter)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Deletes some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"Google.Apis.Drive.v3.Data.File":{"uid":"Google.Apis.Drive.v3.Data.File","name":"File","href":null,"commentId":"T:Google.Apis.Drive.v3.Data.File","fullName":"Google.Apis.Drive.v3.Data.File","nameWithType":"File"},"AutoCheck.Core.ScriptFiles{{T}}.Run":{"uid":"AutoCheck.Core.ScriptFiles{{T}}.Run","name":"Run()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{`0}.Run","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.Run()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).Run()","nameWithType":"ScriptFiles<T>.Run()","nameWithType.vb":"ScriptFiles(Of T).Run()"},"AutoCheck.Connectors.Postgres.Conn":{"uid":"AutoCheck.Connectors.Postgres.Conn","name":"Conn","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.Conn","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Conn","nameWithType":"Postgres.Conn","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The connection used for communication between PostgreSQL and the current application.</p>\n"},"AutoCheck.Connectors.Postgres.DBUser*":{"uid":"AutoCheck.Connectors.Postgres.DBUser*","name":"DBUser","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.DBUser","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.DBUser","nameWithType":"Postgres.DBUser"},"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.String,AutoCheck.Core.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.String,AutoCheck.Core.Operator)","name":"CheckIfCommandMatchesResult(String, String, String, Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.String,AutoCheck.Core.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String, System.String, System.String, AutoCheck.Core.Operator)","nameWithType":"LocalShell.CheckIfCommandMatchesResult(String, String, String, Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks if the executed command produces the expected result.</p>\n"},"AutoCheck.Connectors.LocalShell.RunCommand(System.String,System.String)":{"uid":"AutoCheck.Connectors.LocalShell.RunCommand(System.String,System.String)","name":"RunCommand(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.LocalShell.RunCommand(System.String,System.String)","fullName":"AutoCheck.Connectors.LocalShell.RunCommand(System.String, System.String)","nameWithType":"LocalShell.RunCommand(String, String)"},"AutoCheck.Connectors.Html.CheckTableConsistence*":{"uid":"AutoCheck.Connectors.Html.CheckTableConsistence*","name":"CheckTableConsistence","href":null,"commentId":"Overload:AutoCheck.Connectors.Html.CheckTableConsistence","isSpec":"True","fullName":"AutoCheck.Connectors.Html.CheckTableConsistence","nameWithType":"Html.CheckTableConsistence"},"System.Collections.Generic.List{System.String}":{"uid":"System.Collections.Generic.List{System.String}","name":"List<String>","href":null,"commentId":"T:System.Collections.Generic.List{System.String}","isSpec":"True","name.vb":"List(Of String)","fullName":"System.Collections.Generic.List<System.String>","fullName.vb":"System.Collections.Generic.List(Of System.String)","nameWithType":"List<String>","nameWithType.vb":"List(Of String)"},"AutoCheck.Core.Script{{T}}.MaxScore":{"uid":"AutoCheck.Core.Script{{T}}.MaxScore","name":"MaxScore","href":null,"commentId":"P:AutoCheck.Core.Script{`0}.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of T).MaxScore","nameWithType":"Script<T>.MaxScore","nameWithType.vb":"Script(Of T).MaxScore"},"AutoCheck.Core.Script{{T}}.Path":{"uid":"AutoCheck.Core.Script{{T}}.Path","name":"Path","href":null,"commentId":"P:AutoCheck.Core.Script{`0}.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.Path","fullName.vb":"AutoCheck.Core.Script(Of T).Path","nameWithType":"Script<T>.Path","nameWithType.vb":"Script(Of T).Path"},"AutoCheck.Core.Script{{T}}.DefaultArguments":{"uid":"AutoCheck.Core.Script{{T}}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.DefaultArguments()","fullName.vb":"AutoCheck.Core.Script(Of T).DefaultArguments()","nameWithType":"Script<T>.DefaultArguments()","nameWithType.vb":"Script(Of T).DefaultArguments()"},"AutoCheck.Core.Connector":{"uid":"AutoCheck.Core.Connector","name":"Connector","href":null,"commentId":"T:AutoCheck.Core.Connector","isSpec":"True","fullName":"AutoCheck.Core.Connector","nameWithType":"Connector","summary":"<p sourcefile=\"api/AutoCheck.Core.Connector.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a custom connectors.\nThis class is an abstraction layer between a checker (to a lesser extent, a script) in order to perform in/out operations and/or data validations.</p>\n"},"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.GDriveFolder":{"uid":"AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.GDriveFolder","name":"GDriveFolder","href":null,"commentId":"P:AutoCheck.Core.ScriptGDrive{AutoCheck.CopyDetectors.None}.GDriveFolder","isSpec":"True","fullName":"AutoCheck.Core.ScriptGDrive<AutoCheck.CopyDetectors.None>.GDriveFolder","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of AutoCheck.CopyDetectors.None).GDriveFolder","nameWithType":"ScriptGDrive<None>.GDriveFolder","nameWithType.vb":"ScriptGDrive(Of None).GDriveFolder"},"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableUpdatesData(String, String, String, Object, Postgres.Operator, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableUpdatesData(String, String, String, Object, Postgres.Operator, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableUpdatesData(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableUpdatesData(String, String, String, Object, Postgres.Operator, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableUpdatesData(String, String, String, Object, Postgres.Operator, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be updated into the table.</p>\n"},"AutoCheck.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])":{"uid":"AutoCheck.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])","name":"CheckRoleMembership(String, String[])","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckRoleMembership(System.String,System.String[])","name.vb":"CheckRoleMembership(String, String())","fullName":"AutoCheck.Checkers.Postgres.CheckRoleMembership(System.String, System.String[])","fullName.vb":"AutoCheck.Checkers.Postgres.CheckRoleMembership(System.String, System.String())","nameWithType":"Postgres.CheckRoleMembership(String, String[])","nameWithType.vb":"Postgres.CheckRoleMembership(String, String())","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if the given role is part of all the given groups.</p>\n"},"AutoCheck.Connectors.Postgres.GetUsers":{"uid":"AutoCheck.Connectors.Postgres.GetUsers","name":"GetUsers()","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetUsers","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetUsers()","nameWithType":"Postgres.GetUsers()","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Requests for all the users created.</p>\n"},"AutoCheck.Connectors.LocalShell.#ctor*":{"uid":"AutoCheck.Connectors.LocalShell.#ctor*","name":"LocalShell","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.#ctor","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.LocalShell","nameWithType":"LocalShell.LocalShell"},"AutoCheck.CopyDetectors.SqlLog":{"uid":"AutoCheck.CopyDetectors.SqlLog","name":"SqlLog","href":null,"commentId":"T:AutoCheck.CopyDetectors.SqlLog","isSpec":"True","fullName":"AutoCheck.CopyDetectors.SqlLog","nameWithType":"SqlLog","summary":"<p sourcefile=\"api/AutoCheck.CopyDetectors.SqlLog.yml\" sourcestartlinenumber=\"2\">Copy detector for SQL log files.</p>\n"},"AutoCheck.Connectors.Postgres.Select*":{"uid":"AutoCheck.Connectors.Postgres.Select*","name":"Select","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Select","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Select","nameWithType":"Postgres.Select"},"ExCSS":{"uid":"ExCSS","name":"ExCSS","href":null,"commentId":"N:ExCSS","fullName":"ExCSS","nameWithType":"ExCSS"},"AutoCheck.Connectors.Postgres.CompareSelects*":{"uid":"AutoCheck.Connectors.Postgres.CompareSelects*","name":"CompareSelects","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.CompareSelects","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.CompareSelects","nameWithType":"Postgres.CompareSelects"},"AutoCheck.Checkers.Postgres.CheckIfEntryRemoved*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfEntryRemoved*","name":"CheckIfEntryRemoved","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfEntryRemoved","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfEntryRemoved","nameWithType":"Postgres.CheckIfEntryRemoved"},"AutoCheck.Connectors.Css.CssDoc*":{"uid":"AutoCheck.Connectors.Css.CssDoc*","name":"CssDoc","href":null,"commentId":"Overload:AutoCheck.Connectors.Css.CssDoc","isSpec":"True","fullName":"AutoCheck.Connectors.Css.CssDoc","nameWithType":"Css.CssDoc"},"System.Object.ReferenceEquals(System.Object,System.Object)":{"uid":"System.Object.ReferenceEquals(System.Object,System.Object)","name":"ReferenceEquals(Object, Object)","href":null,"commentId":"M:System.Object.ReferenceEquals(System.Object,System.Object)","fullName":"System.Object.ReferenceEquals(System.Object, System.Object)","nameWithType":"Object.ReferenceEquals(Object, Object)"},"AutoCheck.Exceptions.ConnectionInvalidException.#ctor*":{"uid":"AutoCheck.Exceptions.ConnectionInvalidException.#ctor*","name":"ConnectionInvalidException","href":null,"commentId":"Overload:AutoCheck.Exceptions.ConnectionInvalidException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.ConnectionInvalidException.ConnectionInvalidException","nameWithType":"ConnectionInvalidException.ConnectionInvalidException"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Score":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Score","name":"Score","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.Score","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).Score","nameWithType":"Script<SqlLog>.Score","nameWithType.vb":"Script(Of SqlLog).Score"},"System.Collections.Generic.List`1":{"uid":"System.Collections.Generic.List`1","name":"List<T>","href":null,"commentId":"T:System.Collections.Generic.List`1","name.vb":"List(Of T)","fullName":"System.Collections.Generic.List<T>","fullName.vb":"System.Collections.Generic.List(Of T)","nameWithType":"List<T>","nameWithType.vb":"List(Of T)"},"System.Object.ToString":{"uid":"System.Object.ToString","name":"ToString()","href":null,"commentId":"M:System.Object.ToString","fullName":"System.Object.ToString()","nameWithType":"Object.ToString()"},"System.Runtime.Serialization.ISerializable":{"uid":"System.Runtime.Serialization.ISerializable","name":"ISerializable","href":null,"commentId":"T:System.Runtime.Serialization.ISerializable","fullName":"System.Runtime.Serialization.ISerializable","nameWithType":"ISerializable"},"AutoCheck.Core.Script{{T}}.OpenQuestion(System.String,System.Single)":{"uid":"AutoCheck.Core.Script{{T}}.OpenQuestion(System.String,System.Single)","name":"OpenQuestion(String, Single)","href":null,"commentId":"M:AutoCheck.Core.Script{`0}.OpenQuestion(System.String,System.Single)","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.OpenQuestion(System.String, System.Single)","fullName.vb":"AutoCheck.Core.Script(Of T).OpenQuestion(System.String, System.Single)","nameWithType":"Script<T>.OpenQuestion(String, Single)","nameWithType.vb":"Script(Of T).OpenQuestion(String, Single)"},"AutoCheck.CopyDetectors.Html.#ctor*":{"uid":"AutoCheck.CopyDetectors.Html.#ctor*","name":"Html","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.Html.#ctor","isSpec":"True","fullName":"AutoCheck.CopyDetectors.Html.Html","nameWithType":"Html.Html"},"AutoCheck.Connectors.Odoo.GetProviderID*":{"uid":"AutoCheck.Connectors.Odoo.GetProviderID*","name":"GetProviderID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetProviderID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetProviderID","nameWithType":"Odoo.GetProviderID"},"AutoCheck.Core.ScriptDB`1.DataBase":{"uid":"AutoCheck.Core.ScriptDB`1.DataBase","name":"DataBase","href":null,"commentId":"P:AutoCheck.Core.ScriptDB`1.DataBase","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.DataBase","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).DataBase","nameWithType":"ScriptDB<T>.DataBase","nameWithType.vb":"ScriptDB(Of T).DataBase"},"AutoCheck.Core.Output.UnIndent*":{"uid":"AutoCheck.Core.Output.UnIndent*","name":"UnIndent","href":null,"commentId":"Overload:AutoCheck.Core.Output.UnIndent","isSpec":"True","fullName":"AutoCheck.Core.Output.UnIndent","nameWithType":"Output.UnIndent"},"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData*","name":"CheckIfTableDeletesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableDeletesData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData","nameWithType":"Postgres.CheckIfTableDeletesData"},"AutoCheck.Connectors.Postgres.GetForeignKeys(System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetForeignKeys(System.String,System.String)","name":"GetForeignKeys(String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetForeignKeys(System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetForeignKeys(System.String, System.String)","nameWithType":"Postgres.GetForeignKeys(String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the information about all the foreign keys defined over a table.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CpThresh":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CpThresh","name":"CpThresh","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).CpThresh","nameWithType":"Script<SqlLog>.CpThresh","nameWithType.vb":"Script(Of SqlLog).CpThresh"},"AutoCheck.Core.ScriptV2.#ctor*":{"uid":"AutoCheck.Core.ScriptV2.#ctor*","name":"ScriptV2","href":null,"commentId":"Overload:AutoCheck.Core.ScriptV2.#ctor","isSpec":"True","fullName":"AutoCheck.Core.ScriptV2.ScriptV2","nameWithType":"ScriptV2.ScriptV2"},"AutoCheck.Core.Connector.Operator":{"uid":"AutoCheck.Core.Connector.Operator","name":"Connector.Operator","href":null,"commentId":"T:AutoCheck.Core.Connector.Operator","isSpec":"True","fullName":"AutoCheck.Core.Connector.Operator","nameWithType":"Connector.Operator","summary":"<p sourcefile=\"api/AutoCheck.Core.Connector.Operator.yml\" sourcestartlinenumber=\"2\">Available option for comparing items</p>\n"},"AutoCheck.Connectors.Postgres.GetSchemaPrivileges*":{"uid":"AutoCheck.Connectors.Postgres.GetSchemaPrivileges*","name":"GetSchemaPrivileges","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.GetSchemaPrivileges","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.GetSchemaPrivileges","nameWithType":"Postgres.GetSchemaPrivileges"},"AutoCheck.Core.ScriptFiles`1.Student*":{"uid":"AutoCheck.Core.ScriptFiles`1.Student*","name":"Student","href":null,"commentId":"Overload:AutoCheck.Core.ScriptFiles`1.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.Student","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).Student","nameWithType":"ScriptFiles<T>.Student","nameWithType.vb":"ScriptFiles(Of T).Student"},"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})","name":"CheckIfTableMatchesData(DataTable, Dictionary<String, Object>)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.String,System.Object})","name.vb":"CheckIfTableMatchesData(DataTable, Dictionary(Of String, Object))","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable, System.Collections.Generic.Dictionary<System.String, System.Object>)","fullName.vb":"AutoCheck.Checkers.Postgres.CheckIfTableMatchesData(System.Data.DataTable, System.Collections.Generic.Dictionary(Of System.String, System.Object))","nameWithType":"Postgres.CheckIfTableMatchesData(DataTable, Dictionary<String, Object>)","nameWithType.vb":"Postgres.CheckIfTableMatchesData(DataTable, Dictionary(Of String, Object))","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Compares if the given entry data matches with the current one stored in the database.</p>\n"},"AutoCheck.Connectors.Odoo.GetInvoiceData*":{"uid":"AutoCheck.Connectors.Odoo.GetInvoiceData*","name":"GetInvoiceData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetInvoiceData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetInvoiceData","nameWithType":"Odoo.GetInvoiceData"},"AutoCheck.Connectors.Postgres.ExecuteNonQuery(System.String)":{"uid":"AutoCheck.Connectors.Postgres.ExecuteNonQuery(System.String)","name":"ExecuteNonQuery(String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.ExecuteNonQuery(System.String)","fullName":"AutoCheck.Connectors.Postgres.ExecuteNonQuery(System.String)","nameWithType":"Postgres.ExecuteNonQuery(String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Runs a query that produces no output.</p>\n"},"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment":{"uid":"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment","name":"ASIX_M02UF3_ViewsAssignment","href":null,"commentId":"T:AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment","isSpec":"True","fullName":"AutoCheck.Scripts.ASIX_M02UF3_ViewsAssignment","nameWithType":"ASIX_M02UF3_ViewsAssignment"},"AutoCheck.Core.ScriptDB`1.Password":{"uid":"AutoCheck.Core.ScriptDB`1.Password","name":"Password","href":null,"commentId":"P:AutoCheck.Core.ScriptDB`1.Password","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Password","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Password","nameWithType":"ScriptDB<T>.Password","nameWithType.vb":"ScriptDB(Of T).Password"},"AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String)":{"uid":"AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String)","name":"DeleteData(String, String, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.DeleteData(System.String,System.String,System.String)","fullName":"AutoCheck.Connectors.Postgres.DeleteData(System.String, System.String, System.String)","nameWithType":"Postgres.DeleteData(String, String, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Delete some data from a table, the 'ExecuteNonQuery' method can be used for complex filters (and, or, etc.).</p>\n"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.Student":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Css>.Student","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Css).Student","nameWithType":"ScriptFiles<Css>.Student","nameWithType.vb":"ScriptFiles(Of Css).Student"},"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.String[])","name":"SelectData(String, String, String, Object, Postgres.Operator, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.SelectData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator,System.String[])","name.vb":"SelectData(String, String, String, Object, Postgres.Operator, String())","fullName":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.SelectData(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator, System.String())","nameWithType":"Postgres.SelectData(String, String, String, Object, Postgres.Operator, String[])","nameWithType.vb":"Postgres.SelectData(String, String, String, Object, Postgres.Operator, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects data from a single table, the 'ExecuteNonQuery' method can be used for complex selects (union, join, etc.).</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Path":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Path","name":"Path","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Path","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.Path","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).Path","nameWithType":"Script<Css>.Path","nameWithType.vb":"Script(Of Css).Path"},"AutoCheck.Core.Checker.CompareItems(System.String,System.Int32,AutoCheck.Core.Operator,System.Int32)":{"uid":"AutoCheck.Core.Checker.CompareItems(System.String,System.Int32,AutoCheck.Core.Operator,System.Int32)","name":"CompareItems(String, Int32, Operator, Int32)","href":null,"commentId":"M:AutoCheck.Core.Checker.CompareItems(System.String,System.Int32,AutoCheck.Core.Operator,System.Int32)","fullName":"AutoCheck.Core.Checker.CompareItems(System.String, System.Int32, AutoCheck.Core.Operator, System.Int32)","nameWithType":"Checker.CompareItems(String, Int32, Operator, Int32)"},"T":{"uid":"T","name":"T","href":null,"isSpec":"True","fullName":"T","nameWithType":"T"},"AutoCheck.Core.Script`1.DefaultArguments*":{"uid":"AutoCheck.Core.Script`1.DefaultArguments*","name":"DefaultArguments","href":null,"commentId":"Overload:AutoCheck.Core.Script`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.DefaultArguments","fullName.vb":"AutoCheck.Core.Script(Of T).DefaultArguments","nameWithType":"Script<T>.DefaultArguments","nameWithType.vb":"Script(Of T).DefaultArguments"},"AutoCheck.Core.ScriptDB`1.DefaultArguments*":{"uid":"AutoCheck.Core.ScriptDB`1.DefaultArguments*","name":"DefaultArguments","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.DefaultArguments","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).DefaultArguments","nameWithType":"ScriptDB<T>.DefaultArguments","nameWithType.vb":"ScriptDB(Of T).DefaultArguments"},"AutoCheck.Connectors.Postgres.Student*":{"uid":"AutoCheck.Connectors.Postgres.Student*","name":"Student","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Student","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Student","nameWithType":"Postgres.Student"},"AutoCheck.CopyDetectors.None.GetDetails*":{"uid":"AutoCheck.CopyDetectors.None.GetDetails*","name":"GetDetails","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.None.GetDetails","isSpec":"True","fullName":"AutoCheck.CopyDetectors.None.GetDetails","nameWithType":"None.GetDetails"},"AutoCheck.Core.Checker.CompareItems(System.String,System.Int32[],AutoCheck.Core.Operator,System.Int32[])":{"uid":"AutoCheck.Core.Checker.CompareItems(System.String,System.Int32[],AutoCheck.Core.Operator,System.Int32[])","name":"CompareItems(String, Int32[], Operator, Int32[])","href":null,"commentId":"M:AutoCheck.Core.Checker.CompareItems(System.String,System.Int32[],AutoCheck.Core.Operator,System.Int32[])","name.vb":"CompareItems(String, Int32(), Operator, Int32())","fullName":"AutoCheck.Core.Checker.CompareItems(System.String, System.Int32[], AutoCheck.Core.Operator, System.Int32[])","fullName.vb":"AutoCheck.Core.Checker.CompareItems(System.String, System.Int32(), AutoCheck.Core.Operator, System.Int32())","nameWithType":"Checker.CompareItems(String, Int32[], Operator, Int32[])","nameWithType.vb":"Checker.CompareItems(String, Int32(), Operator, Int32())"},"AutoCheck.CopyDetectors.None.Compare*":{"uid":"AutoCheck.CopyDetectors.None.Compare*","name":"Compare","href":null,"commentId":"Overload:AutoCheck.CopyDetectors.None.Compare","isSpec":"True","fullName":"AutoCheck.CopyDetectors.None.Compare","nameWithType":"None.Compare"},"AutoCheck.Connectors.Odoo.GetLastPosSaleID*":{"uid":"AutoCheck.Connectors.Odoo.GetLastPosSaleID*","name":"GetLastPosSaleID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetLastPosSaleID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetLastPosSaleID","nameWithType":"Odoo.GetLastPosSaleID"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CpThresh":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CpThresh","name":"CpThresh","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).CpThresh","nameWithType":"Script<Css>.CpThresh","nameWithType.vb":"Script(Of Css).CpThresh"},"AutoCheck.Checkers.Odoo.CompanyID*":{"uid":"AutoCheck.Checkers.Odoo.CompanyID*","name":"CompanyID","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.CompanyID","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.CompanyID","nameWithType":"Odoo.CompanyID"},"AutoCheck.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)","name":"CheckIfEntryRemoved(String, String, String, Int32)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfEntryRemoved(System.String,System.String,System.String,System.Int32)","fullName":"AutoCheck.Checkers.Postgres.CheckIfEntryRemoved(System.String, System.String, System.String, System.Int32)","nameWithType":"Postgres.CheckIfEntryRemoved(String, String, String, Int32)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if an item has been removed from a table, looking for its  ID (pkField = lastPkValue).</p>\n"},"AutoCheck.Core.ScriptDB`1.SetUp*":{"uid":"AutoCheck.Core.ScriptDB`1.SetUp*","name":"SetUp","href":null,"commentId":"Overload:AutoCheck.Core.ScriptDB`1.SetUp","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.SetUp","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).SetUp","nameWithType":"ScriptDB<T>.SetUp","nameWithType.vb":"ScriptDB(Of T).SetUp"},"AutoCheck.Connectors.Postgres.SelectData*":{"uid":"AutoCheck.Connectors.Postgres.SelectData*","name":"SelectData","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.SelectData","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.SelectData","nameWithType":"Postgres.SelectData"},"AutoCheck.Core.ScriptGDrive`1":{"uid":"AutoCheck.Core.ScriptGDrive`1","name":"ScriptGDrive<T>","href":null,"commentId":"T:AutoCheck.Core.ScriptGDrive`1","isSpec":"True","name.vb":"ScriptGDrive(Of T)","fullName":"AutoCheck.Core.ScriptGDrive<T>","fullName.vb":"AutoCheck.Core.ScriptGDrive(Of T)","nameWithType":"ScriptGDrive<T>","nameWithType.vb":"ScriptGDrive(Of T)","summary":"<p sourcefile=\"api/AutoCheck.Core.ScriptGDrive-1.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a database oriented custom script.\nThe script is the main container for a set of instructions, which will test the correctness of an assignement.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition*","name":"CheckIfViewMatchesDefinition","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfViewMatchesDefinition","nameWithType":"Postgres.CheckIfViewMatchesDefinition"},"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)","name":"CheckIfFoldersMatchesAmount(String, Int32, Boolean, Connector.Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String,System.Int32,System.Boolean,AutoCheck.Core.Connector.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFoldersMatchesAmount(System.String, System.Int32, System.Boolean, AutoCheck.Core.Connector.Operator)","nameWithType":"LocalShell.CheckIfFoldersMatchesAmount(String, Int32, Boolean, Connector.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks the amount of expected folders.</p>\n"},"AutoCheck.Connectors.CsvDocument.GetLine*":{"uid":"AutoCheck.Connectors.CsvDocument.GetLine*","name":"GetLine","href":null,"commentId":"Overload:AutoCheck.Connectors.CsvDocument.GetLine","isSpec":"True","fullName":"AutoCheck.Connectors.CsvDocument.GetLine","nameWithType":"CsvDocument.GetLine"},"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run*":{"uid":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run*","name":"Run","href":null,"commentId":"Overload:AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M10UF2_OdooCsvAssignment.Run","nameWithType":"DAM_M10UF2_OdooCsvAssignment.Run"},"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData*","name":"CheckIfSelectMatchesData","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfSelectMatchesData","nameWithType":"Postgres.CheckIfSelectMatchesData"},"AutoCheck.Core.Connector.CurrentOS":{"uid":"AutoCheck.Core.Connector.CurrentOS","name":"CurrentOS","href":null,"commentId":"P:AutoCheck.Core.Connector.CurrentOS","isSpec":"True","fullName":"AutoCheck.Core.Connector.CurrentOS","nameWithType":"Connector.CurrentOS","summary":"<p sourcefile=\"api/AutoCheck.Core.Connector.yml\" sourcestartlinenumber=\"2\">Returns the current OS host type (Windows; Mac; GNU/Linux)</p>\n"},"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)","name":"CheckIfCommandMatchesResult(String, String, Int32, Connector.Operator)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String,System.String,System.Int32,AutoCheck.Core.Connector.Operator)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfCommandMatchesResult(System.String, System.String, System.Int32, AutoCheck.Core.Connector.Operator)","nameWithType":"LocalShell.CheckIfCommandMatchesResult(String, String, Int32, Connector.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks if the executed command produces the expected result.</p>\n"},"AutoCheck.Connectors.LocalShell.CountFolders(System.String,System.Boolean)":{"uid":"AutoCheck.Connectors.LocalShell.CountFolders(System.String,System.Boolean)","name":"CountFolders(String, Boolean)","href":null,"commentId":"M:AutoCheck.Connectors.LocalShell.CountFolders(System.String,System.Boolean)","fullName":"AutoCheck.Connectors.LocalShell.CountFolders(System.String, System.Boolean)","nameWithType":"LocalShell.CountFolders(String, Boolean)"},"AutoCheck.Connectors.Postgres.BinPath":{"uid":"AutoCheck.Connectors.Postgres.BinPath","name":"BinPath","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.BinPath","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.BinPath","nameWithType":"Postgres.BinPath","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The path to the bin folder [only needed for windows systems].</p>\n"},"HtmlAgilityPack.HtmlNode":{"uid":"HtmlAgilityPack.HtmlNode","name":"HtmlNode","href":null,"commentId":"T:HtmlAgilityPack.HtmlNode","fullName":"HtmlAgilityPack.HtmlNode","nameWithType":"HtmlNode"},"AutoCheck.Core":{"uid":"AutoCheck.Core","name":"AutoCheck.Core","href":null,"commentId":"N:AutoCheck.Core","isSpec":"True","fullName":"AutoCheck.Core","nameWithType":"AutoCheck.Core"},"System.Char":{"uid":"System.Char","name":"Char","href":null,"commentId":"T:System.Char","fullName":"System.Char","nameWithType":"Char"},"AutoCheck.Core.Output.Instance*":{"uid":"AutoCheck.Core.Output.Instance*","name":"Instance","href":null,"commentId":"Overload:AutoCheck.Core.Output.Instance","isSpec":"True","fullName":"AutoCheck.Core.Output.Instance","nameWithType":"Output.Instance"},"AutoCheck.Connectors.Postgres.GetField``1(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String,System.ComponentModel.ListSortDirection)":{"uid":"AutoCheck.Connectors.Postgres.GetField``1(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String,System.ComponentModel.ListSortDirection)","name":"GetField<T>(Postgres.Source, Postgres.Filter, String, ListSortDirection)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetField``1(AutoCheck.Connectors.Postgres.Source,AutoCheck.Connectors.Postgres.Filter,System.String,System.ComponentModel.ListSortDirection)","name.vb":"GetField(Of T)(Postgres.Source, Postgres.Filter, String, ListSortDirection)","fullName":"AutoCheck.Connectors.Postgres.GetField<T>(AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.String, System.ComponentModel.ListSortDirection)","fullName.vb":"AutoCheck.Connectors.Postgres.GetField(Of T)(AutoCheck.Connectors.Postgres.Source, AutoCheck.Connectors.Postgres.Filter, System.String, System.ComponentModel.ListSortDirection)","nameWithType":"Postgres.GetField<T>(Postgres.Source, Postgres.Filter, String, ListSortDirection)","nameWithType.vb":"Postgres.GetField(Of T)(Postgres.Source, Postgres.Filter, String, ListSortDirection)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the requested field's value for the first found item.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.MaxScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.MaxScore","name":"MaxScore","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.MaxScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.MaxScore","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).MaxScore","nameWithType":"Script<SqlLog>.MaxScore","nameWithType.vb":"Script(Of SqlLog).MaxScore"},"AutoCheck.Core.Checker":{"uid":"AutoCheck.Core.Checker","name":"Checker","href":null,"commentId":"T:AutoCheck.Core.Checker","isSpec":"True","fullName":"AutoCheck.Core.Checker","nameWithType":"Checker","summary":"<p sourcefile=\"api/AutoCheck.Core.Checker.yml\" sourcestartlinenumber=\"2\">This class must be inherited in order to develop a custom checker.\nThe checker is in charge of testing items using a connector, and the result will be always a list of errors.</p>\n"},"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)","name":"CheckIfTableDeletesData(String, String, String, Object, Postgres.Operator)","href":null,"commentId":"M:AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String,System.String,System.String,System.Object,AutoCheck.Connectors.Postgres.Operator)","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableDeletesData(System.String, System.String, System.String, System.Object, AutoCheck.Connectors.Postgres.Operator)","nameWithType":"Postgres.CheckIfTableDeletesData(String, String, String, Object, Postgres.Operator)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.Postgres.yml\" sourcestartlinenumber=\"2\">Checks if old data can be removed from the table.</p>\n"},"AutoCheck.Core.ScriptDB`1.Student":{"uid":"AutoCheck.Core.ScriptDB`1.Student","name":"Student","href":null,"commentId":"P:AutoCheck.Core.ScriptDB`1.Student","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<T>.Student","fullName.vb":"AutoCheck.Core.ScriptDB(Of T).Student","nameWithType":"ScriptDB<T>.Student","nameWithType.vb":"ScriptDB(Of T).Student"},"AutoCheck.Connectors.Postgres.User":{"uid":"AutoCheck.Connectors.Postgres.User","name":"User","href":null,"commentId":"P:AutoCheck.Connectors.Postgres.User","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.User","nameWithType":"Postgres.User","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">The PostgreSQL database username, which will be used to perform operations.</p>\n"},"AutoCheck.Connectors.GDrive.Download*":{"uid":"AutoCheck.Connectors.GDrive.Download*","name":"Download","href":null,"commentId":"Overload:AutoCheck.Connectors.GDrive.Download","isSpec":"True","fullName":"AutoCheck.Connectors.GDrive.Download","nameWithType":"GDrive.Download"},"AutoCheck.Connectors.Odoo.GetSaleID*":{"uid":"AutoCheck.Connectors.Odoo.GetSaleID*","name":"GetSaleID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetSaleID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetSaleID","nameWithType":"Odoo.GetSaleID"},"AutoCheck.Connectors.Postgres.Revoke*":{"uid":"AutoCheck.Connectors.Postgres.Revoke*","name":"Revoke","href":null,"commentId":"Overload:AutoCheck.Connectors.Postgres.Revoke","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Revoke","nameWithType":"Postgres.Revoke"},"AutoCheck.Connectors.Odoo.GetStockMovementData*":{"uid":"AutoCheck.Connectors.Odoo.GetStockMovementData*","name":"GetStockMovementData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetStockMovementData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetStockMovementData","nameWithType":"Odoo.GetStockMovementData"},"Google.Apis.Drive.v3.Data":{"uid":"Google.Apis.Drive.v3.Data","name":"Google.Apis.Drive.v3.Data","href":null,"commentId":"N:Google.Apis.Drive.v3.Data","fullName":"Google.Apis.Drive.v3.Data","nameWithType":"Google.Apis.Drive.v3.Data"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.EvalQuestion(System.Collections.Generic.List{System.String})":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.EvalQuestion(System.Collections.Generic.List{System.String})","name":"EvalQuestion(List<String>)","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Html}.EvalQuestion(System.Collections.Generic.List{System.String})","isSpec":"True","name.vb":"EvalQuestion(List(Of String))","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Html>.EvalQuestion(System.Collections.Generic.List<System.String>)","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Html).EvalQuestion(System.Collections.Generic.List(Of System.String))","nameWithType":"Script<Html>.EvalQuestion(List<String>)","nameWithType.vb":"Script(Of Html).EvalQuestion(List(Of String))"},"AutoCheck.Checkers.GDrive.CheckIfFolderExists*":{"uid":"AutoCheck.Checkers.GDrive.CheckIfFolderExists*","name":"CheckIfFolderExists","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.CheckIfFolderExists","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.CheckIfFolderExists","nameWithType":"GDrive.CheckIfFolderExists"},"AutoCheck.Connectors.LocalShell.RunCommand*":{"uid":"AutoCheck.Connectors.LocalShell.RunCommand*","name":"RunCommand","href":null,"commentId":"Overload:AutoCheck.Connectors.LocalShell.RunCommand","isSpec":"True","fullName":"AutoCheck.Connectors.LocalShell.RunCommand","nameWithType":"LocalShell.RunCommand"},"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.DefaultArguments":{"uid":"AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{AutoCheck.CopyDetectors.Css}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<AutoCheck.CopyDetectors.Css>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of AutoCheck.CopyDetectors.Css).DefaultArguments()","nameWithType":"ScriptFiles<Css>.DefaultArguments()","nameWithType.vb":"ScriptFiles(Of Css).DefaultArguments()"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Clean":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Clean","name":"Clean()","href":null,"commentId":"M:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.SqlLog}.Clean","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.SqlLog>.Clean()","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.SqlLog).Clean()","nameWithType":"ScriptDB<SqlLog>.Clean()","nameWithType.vb":"ScriptDB(Of SqlLog).Clean()"},"AutoCheck.Connectors.Postgres.Select(System.String,System.String,System.String[])":{"uid":"AutoCheck.Connectors.Postgres.Select(System.String,System.String,System.String[])","name":"Select(String, String, String[])","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.Select(System.String,System.String,System.String[])","name.vb":"Select(String, String, String())","fullName":"AutoCheck.Connectors.Postgres.Select(System.String, System.String, System.String[])","fullName.vb":"AutoCheck.Connectors.Postgres.Select(System.String, System.String, System.String())","nameWithType":"Postgres.Select(String, String, String[])","nameWithType.vb":"Postgres.Select(String, String, String())","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Selects some data from the database.</p>\n"},"AutoCheck.Connectors.Postgres.Destination":{"uid":"AutoCheck.Connectors.Postgres.Destination","name":"Postgres.Destination","href":null,"commentId":"T:AutoCheck.Connectors.Postgres.Destination","isSpec":"True","fullName":"AutoCheck.Connectors.Postgres.Destination","nameWithType":"Postgres.Destination","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.Destination.yml\" sourcestartlinenumber=\"2\">Allows the destination selection for an SQL operation.</p>\n"},"AutoCheck.Connectors.Postgres.GetTablePrivileges(AutoCheck.Connectors.Postgres.Source,System.String)":{"uid":"AutoCheck.Connectors.Postgres.GetTablePrivileges(AutoCheck.Connectors.Postgres.Source,System.String)","name":"GetTablePrivileges(Postgres.Source, String)","href":null,"commentId":"M:AutoCheck.Connectors.Postgres.GetTablePrivileges(AutoCheck.Connectors.Postgres.Source,System.String)","fullName":"AutoCheck.Connectors.Postgres.GetTablePrivileges(AutoCheck.Connectors.Postgres.Source, System.String)","nameWithType":"Postgres.GetTablePrivileges(Postgres.Source, String)","summary":"<p sourcefile=\"api/AutoCheck.Connectors.Postgres.yml\" sourcestartlinenumber=\"2\">Returns the table privileges.</p>\n"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CpThresh":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CpThresh","name":"CpThresh","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.None}.CpThresh","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.None>.CpThresh","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.None).CpThresh","nameWithType":"Script<None>.CpThresh","nameWithType.vb":"Script(Of None).CpThresh"},"AutoCheck.Checkers.GDrive.CheckIfFileExists*":{"uid":"AutoCheck.Checkers.GDrive.CheckIfFileExists*","name":"CheckIfFileExists","href":null,"commentId":"Overload:AutoCheck.Checkers.GDrive.CheckIfFileExists","isSpec":"True","fullName":"AutoCheck.Checkers.GDrive.CheckIfFileExists","nameWithType":"GDrive.CheckIfFileExists"},"AutoCheck.Exceptions.DownloadFailedException.#ctor*":{"uid":"AutoCheck.Exceptions.DownloadFailedException.#ctor*","name":"DownloadFailedException","href":null,"commentId":"Overload:AutoCheck.Exceptions.DownloadFailedException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.DownloadFailedException.DownloadFailedException","nameWithType":"DownloadFailedException.DownloadFailedException"},"AutoCheck.Checkers.Odoo.Dispose*":{"uid":"AutoCheck.Checkers.Odoo.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.Dispose","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.Dispose","nameWithType":"Odoo.Dispose"},"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Username":{"uid":"AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Username","name":"Username","href":null,"commentId":"P:AutoCheck.Core.ScriptDB{AutoCheck.CopyDetectors.None}.Username","isSpec":"True","fullName":"AutoCheck.Core.ScriptDB<AutoCheck.CopyDetectors.None>.Username","fullName.vb":"AutoCheck.Core.ScriptDB(Of AutoCheck.CopyDetectors.None).Username","nameWithType":"ScriptDB<None>.Username","nameWithType.vb":"ScriptDB(Of None).Username"},"AutoCheck.Connectors.Odoo.GetProductTemplateData*":{"uid":"AutoCheck.Connectors.Odoo.GetProductTemplateData*","name":"GetProductTemplateData","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetProductTemplateData","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetProductTemplateData","nameWithType":"Odoo.GetProductTemplateData"},"AutoCheck.Connectors.Odoo.GetPosSaleID*":{"uid":"AutoCheck.Connectors.Odoo.GetPosSaleID*","name":"GetPosSaleID","href":null,"commentId":"Overload:AutoCheck.Connectors.Odoo.GetPosSaleID","isSpec":"True","fullName":"AutoCheck.Connectors.Odoo.GetPosSaleID","nameWithType":"Odoo.GetPosSaleID"},"AutoCheck.Exceptions.StyleNotFoundException.#ctor*":{"uid":"AutoCheck.Exceptions.StyleNotFoundException.#ctor*","name":"StyleNotFoundException","href":null,"commentId":"Overload:AutoCheck.Exceptions.StyleNotFoundException.#ctor","isSpec":"True","fullName":"AutoCheck.Exceptions.StyleNotFoundException.StyleNotFoundException","nameWithType":"StyleNotFoundException.StyleNotFoundException"},"AutoCheck.Connectors.Csv.Dispose*":{"uid":"AutoCheck.Connectors.Csv.Dispose*","name":"Dispose","href":null,"commentId":"Overload:AutoCheck.Connectors.Csv.Dispose","isSpec":"True","fullName":"AutoCheck.Connectors.Csv.Dispose","nameWithType":"Csv.Dispose"},"System.Exception.InnerException":{"uid":"System.Exception.InnerException","name":"InnerException","href":null,"commentId":"P:System.Exception.InnerException","fullName":"System.Exception.InnerException","nameWithType":"Exception.InnerException"},"AutoCheck.Checkers.Odoo.Connector*":{"uid":"AutoCheck.Checkers.Odoo.Connector*","name":"Connector","href":null,"commentId":"Overload:AutoCheck.Checkers.Odoo.Connector","isSpec":"True","fullName":"AutoCheck.Checkers.Odoo.Connector","nameWithType":"Odoo.Connector"},"AutoCheck.Core.Script`1.SetUp":{"uid":"AutoCheck.Core.Script`1.SetUp","name":"SetUp()","href":null,"commentId":"M:AutoCheck.Core.Script`1.SetUp","isSpec":"True","fullName":"AutoCheck.Core.Script<T>.SetUp()","fullName.vb":"AutoCheck.Core.Script(Of T).SetUp()","nameWithType":"Script<T>.SetUp()","nameWithType.vb":"Script(Of T).SetUp()"},"AutoCheck.Core.Script`1.CloseQuestion(System.String)":{"uid":"AutoCheck.Core.Script`1.CloseQuestion(System.String)","name":"CloseQuestion(String)","href":null,"commentId":"M:AutoCheck.Core.Script`1.CloseQuestion(System.String)","fullName":"AutoCheck.Core.Script<T>.CloseQuestion(System.String)","fullName.vb":"AutoCheck.Core.Script(Of T).CloseQuestion(System.String)","nameWithType":"Script<T>.CloseQuestion(String)","nameWithType.vb":"Script(Of T).CloseQuestion(String)"},"AutoCheck.Checkers.RemoteShell.#ctor*":{"uid":"AutoCheck.Checkers.RemoteShell.#ctor*","name":"RemoteShell","href":null,"commentId":"Overload:AutoCheck.Checkers.RemoteShell.#ctor","isSpec":"True","fullName":"AutoCheck.Checkers.RemoteShell.RemoteShell","nameWithType":"RemoteShell.RemoteShell"},"AutoCheck.Core.ScriptFiles{{T}}.DefaultArguments":{"uid":"AutoCheck.Core.ScriptFiles{{T}}.DefaultArguments","name":"DefaultArguments()","href":null,"commentId":"M:AutoCheck.Core.ScriptFiles{`0}.DefaultArguments","isSpec":"True","fullName":"AutoCheck.Core.ScriptFiles<T>.DefaultArguments()","fullName.vb":"AutoCheck.Core.ScriptFiles(Of T).DefaultArguments()","nameWithType":"ScriptFiles<T>.DefaultArguments()","nameWithType.vb":"ScriptFiles(Of T).DefaultArguments()"},"AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges*":{"uid":"AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges*","name":"CheckIfTableContainsPrivileges","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.CheckIfTableContainsPrivileges","nameWithType":"Postgres.CheckIfTableContainsPrivileges"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Score":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Score","name":"Score","href":null,"commentId":"P:AutoCheck.Core.Script{AutoCheck.CopyDetectors.Css}.Score","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.Css>.Score","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.Css).Score","nameWithType":"Script<Css>.Score","nameWithType.vb":"Script(Of Css).Score"},"AutoCheck.Checkers.Postgres.User*":{"uid":"AutoCheck.Checkers.Postgres.User*","name":"User","href":null,"commentId":"Overload:AutoCheck.Checkers.Postgres.User","isSpec":"True","fullName":"AutoCheck.Checkers.Postgres.User","nameWithType":"Postgres.User"},"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.PrintScore":{"uid":"AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.PrintScore","name":"PrintScore()","href":null,"commentId":"M:AutoCheck.Core.Script{AutoCheck.CopyDetectors.SqlLog}.PrintScore","isSpec":"True","fullName":"AutoCheck.Core.Script<AutoCheck.CopyDetectors.SqlLog>.PrintScore()","fullName.vb":"AutoCheck.Core.Script(Of AutoCheck.CopyDetectors.SqlLog).PrintScore()","nameWithType":"Script<SqlLog>.PrintScore()","nameWithType.vb":"Script(Of SqlLog).PrintScore()"},"AutoCheck.Core.Output.ToString*":{"uid":"AutoCheck.Core.Output.ToString*","name":"ToString","href":null,"commentId":"Overload:AutoCheck.Core.Output.ToString","isSpec":"True","fullName":"AutoCheck.Core.Output.ToString","nameWithType":"Output.ToString"},"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment":{"uid":"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment","name":"DAM_M04UF1_Css3Assignment","href":null,"commentId":"T:AutoCheck.Scripts.DAM_M04UF1_Css3Assignment","isSpec":"True","fullName":"AutoCheck.Scripts.DAM_M04UF1_Css3Assignment","nameWithType":"DAM_M04UF1_Css3Assignment"},"AutoCheck.Core.Output.WriteLine*":{"uid":"AutoCheck.Core.Output.WriteLine*","name":"WriteLine","href":null,"commentId":"Overload:AutoCheck.Core.Output.WriteLine","isSpec":"True","fullName":"AutoCheck.Core.Output.WriteLine","nameWithType":"Output.WriteLine"},"AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)":{"uid":"AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)","name":"CheckIfFolderExists(String, String, Boolean)","href":null,"commentId":"M:AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String,System.String,System.Boolean)","fullName":"AutoCheck.Checkers.LocalShell.CheckIfFolderExists(System.String, System.String, System.Boolean)","nameWithType":"LocalShell.CheckIfFolderExists(String, String, Boolean)","summary":"<p sourcefile=\"api/AutoCheck.Checkers.LocalShell.yml\" sourcestartlinenumber=\"2\">Checks if a folder exists within the given path.</p>\n"}}