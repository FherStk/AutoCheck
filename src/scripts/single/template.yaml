#SINGLE: Used to run a script over a single target

name: "USER FRIENDLY NAME"  #DEFAULT = "This file name": This script name will be displayed to the user (if needed).
folder: "PATH"              #DEFAULT = "Current app execution folder": Where the local data is stored in order to unzip, restore a db...
inherits: "NONE"            #DEFAULT = "NONE": Any script can inherit from any other and overwrite whatever it needs.

vars:   #OPTIONAL: Custom vars can be defined here and refered later as $VARNAME, allowing regex and string formatters.
  #Predefined vars that can be used when needed: 
  #   $SCRIPT_NAME:     The current script name. 
  #   $CURRENT_FOLDER:  The current script execution folder (will be the same as "folder" for single-typed scripts; can change during the execution for batch-typed scripts). 
  #   $CURRENT_FILE:    The current file name used to extract, restore a database, etc.
  #   $RESULT:          Last run command result.
  #   $NOW:             The current datetime.  

  #Custom example vars:
  #   var1: "VALUE1"
  #   var1: "This is a sample text including {$VAR1} and also {$VAR2}"
  #   var3: "{#regex$VARNAME}"
  #   var4: !!bool False
  #   varN: #Any previous combinations
  student_name: "{#regex$CURRENT_FOLDER}"

pre:    #OPTIONAL: Defined blocks will be executed (in order) before the body.
  - extract:            #OPTIONAL: Extract a compressed file from "folder" (only zip is supported).
      file: "*"         #DEFAULT = "*.zip": Os file naming convetions allowed (name.ext; *.ext; *); regex can be used also.
      remove: True      #DEFAULT = "False": Remove the original file when extracted.
      recursive: True   #DEFAULT = "False": Repeat through folders.

  - restore_db:         #OPTIONAL: Restores a database using an sql dump file from folder (only PostgreSQL is supported).
      file: "*"         #DEFAULT = "*.sql": Os file naming convetions allowed (name.ext; *.ext; *); regex can be used also.
      remove: True      #DEFAULT = "False": Remove the original file when restored.
      recursive: True   #DEFAULT = "False": Repeat through folders.
      db_host: "DBHOST" #DEFAULT = "localhost": Host name or IP address.
      db_user: "DBUSER" #DEFAULT = "postgres": Postgre's username.
      db_pass: "DBPASS" #DEFAULT = "postgres": Postgre's password.
      db_name: "DBNAME" #DEFAULT = "$SCRIPT_NAME": Database name
      override: True    #DEFAULT = "False": Overrides the DB if exists.      

  - upload_gdrive:      #OPTIONAL: Uploads a file from "folder" to Google Drive.
      source: "*"       #DEFAULT = "*": Os file or folder naming convetions allowed (name, name.ext; *.ext; *); regex can be used also.
      remove: True      #DEFAULT = "False": Remove local files and folders when restored.
      recursive: True   #DEFAULT = "False": Repeat through folders    
      link: False       #DEFAULT = "False": A link to the source file will be extracted from within file's content
      copy: True        #DEFAULT = "True": The source file will be copied directly to gdrive (when possible) instead of downloaded and re-uploaded        
      username: "USER"  #MANDATORY: Username used to login into the own's Google Drive account.
      secret: "SECRET"  #DEFAULT = "config\\gdrive_secret.json": The "client_secret.json" file that will be used to login into the own's Google Drive account (it can be generated through the Google API Console services).
      remote_path: "\\" #DEFAULT = "\\AutoCheck\\scripts\\{$SCRIPT_NAME}\\": Where to upload the files; the remote folders will be created if needed and files, if no filename has been specified, will be auto-named using the original names when possible.
  
post:   #OPTIONAL: Defined blocks will be executed (in order) after the body; same blocks as "pre" are allowed.

body:   #MANDATORY: Script body
  - connector:  #OPTIONAL: Defines a connector to use, it can be defined wherever inside the body (usually inside a question's content).
      type: "TYPE"         #DEFAULT = "LOCAL_SHELL": Connector to use.
      name: "NAME"         #DEFAULT = "TYPE": Name that will be used by a "run" to launch a connector's command.
      arguments: "ARGUMENT LIST"  #OPTIONAL: As terminal app will do (--arg1 val1 --arg2 val2 ... --argN valN); can be requested within the script as $CONNECTOR_NAME.ARGUMENT_NAME.
      #arguments:                            Also typed arguments list are allowed:
        #arg1: "Val1"           
        #arg2: !!bool True
        #arg3: !!int 27
        #...
        #argN: "ValN"
  
  - run:  #OPTIONAL: Runs a command, it can be used wherever inside the body (usually inside a question's content).
      connector: "CONNECTOR_NAME" #OPTIONAL: Which connector will be used to run the command. If no connector has been defined within this "run", the nearest within the scope will be looked for (and envelopping scopes recursively) and, if no connector is found, a "LOCALSHELL" one will be used.
      command: "COMMAND"          #MANDATORY: The command to run, the result will be stored as $RESULT.
      arguments: "ARGUMENT LIST"  #OPTIONAL: Same as "connector" ones (also typed arguments list are allowed).
      expected: "EXPECTED"        #OPTIONAL: Expected value which can be "True" or "75.7" or even a SQL-like comparisson including variables and regular expression, for example: ">75" or "LIKE %{#regex$CURRENT_FOLDER}%"). Warning: no AND/OR combinations still supported.
      success: "OK"               #DEFAULT = "OK": Success caption.
      error: "ERROR"              #DEFAULT = "ERROR\n{$RESULT}": Error caption.

  - question: #OPTIONAL: Question to test; can be repeated.
      score: 1                    #DEFAULT = "1": Question socre, ignored if subquestions are used (question within question).
      caption: "CAPTION"          #MANDATORY: Question caption.
      #NOTE: a "connector", "run" or "question" can be defined here. 

      content: #OPTIONAL: What to test within the question, all must be ok to compute the score; cannot be mandatory due subquestion behaviour; can be repeated.            
        #NOTE: a "connector" or "run" can be defined here       