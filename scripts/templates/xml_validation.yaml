# Copyright Â© 2020 Fernando Porrino Serrano
# Third party software licenses can be found at /docs/credits/credits.md

# This file is part of AutoCheck.

# AutoCheck is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# AutoCheck is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with AutoCheck.  If not, see <https://www.gnu.org/licenses/>.

name: "DAM - M04 (UF1): XML Validation Assignment (Namespaces + DTD + XSD)"

body: 
    - vars:
        nodes_all_qty: 0
        attrs_all_qty: 0 
        file1.xml: NULL           
        file1.dtd: NULL     
        file2.xml: NULL 
        file2.xsd: NULL 
        file3.xml: NULL 
   
    - question: 
        description: "Starting validation over ~file1.xml"
        content:             
            - run:
                caption:  "Looking for ~file1.xml... "
                command:  "GetFile"
                arguments: "--path {$CURRENT_FOLDER} --file file1.xml"
                store: "$FILE1.XML"
                expected: "%file1.xml" 
                onerror: "SKIP"

            - connector:  
                caption:  "Loading ~file1.xml... "          
                type: "Xml"        
                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE1.XML}"
                onexception: "SKIP"

            - connector:            
                type: "Math"        
           
            - run:
                caption:  "Checking amount of nodes... "
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //*"
                store: "$NODES_ALL_QTY"
                expected: ">=15"
                onerror: "SKIP"

            - run:
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //* --type NUMERIC"                  
                store: "NODES_NUM_QTY"

            - run:
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //* --type BOOLEAN"                  
                store: "NODES_BOOL_QTY"

            - run:
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //* --type STRING"                  
                store: "NODES_STR_QTY"

            - run:
                caption:  "Checking node types... "
                connector: "Math"
                command:  "Evaluate"
                arguments: "--expression {$NODES_NUM_QTY}+{$NODES_BOOL_QTY}+{$NODES_STR_QTY}"
                expected: ">1"
                onerror: "SKIP"

            - run:
                caption:  "Checking amount of attributes... "
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //*/@*"
                store: "$ATTRS_ALL_QTY"
                expected: ">=5"
                onerror: "SKIP"

            - run:
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //*/@* --type NUMERIC"                  
                store: "ATTRS_NUM_QTY"

            - run:
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //*/@* --type BOOLEAN"                  
                store: "ATTRS_BOOL_QTY"

            - run:
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //*/@* --type STRING"                  
                store: "ATTRS_STR_QTY"

            - run:
                caption:  "Checking attribute types... "
                connector: "Math"
                command:  "Evaluate"
                arguments: "--expression {$ATTRS_NUM_QTY}+{$ATTRS_BOOL_QTY}+{$ATTRS_STR_QTY}"
                expected: ">1"
                onerror: "SKIP"

            - run:
                caption:  "Checking repeated nodes... "
                connector: "Xml"
                command:  "CountNodes"
                arguments: "--xpath //*[name()=following-sibling::*/name()]"
                expected: ">=1"
                onerror: "SKIP"
                        
            - question:                     
                description: "Starting validation over ~file1.dtd"        
                content:
                    - run:
                        caption:  "Looking for ~file1.dtd... "
                        command:  "GetFile"
                        arguments: "--path {$CURRENT_FOLDER} --file file1.dtd"
                        store: "$FILE1.DTD"
                        expected: "%file1.dtd"
                        onerror: "SKIP" 
                    
                    - connector:            
                            type: "PlainText"        
                            arguments: "--folder {$CURRENT_FOLDER} --file {$FILE1.DTD}" 
                            
                    - run:
                        caption:  "Looking for comments... "                       
                        connector: "PlainText"
                        command:  "Count"
                        arguments: "--regex <!--[\\s\\S\n]*?-->"
                        expected: ">1"
                        onerror: "SKIP" 
                        
                    - question:     
                        score: !!float 2                
                        description: "Content validation"        
                        content:                                   
                            - connector:
                                #Note: this will throw an exception if cannot load the file with its DTD
                                caption:  "Checking document's content... "                        
                                type: "Xml"   
                                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE1.XML} --validation DTD"                    
                        
                    - question:  
                        score: !!float 2                         
                        description: "Comments validation"        
                        content:      
                            - run:
                                caption:  "Checking document's comments... "
                                connector: "PlainText"
                                command:  "Count"
                                arguments: "--regex <!--[\\s\\S\n]*?-->"
                                expected: ">1"

    - question: 
        description: "Starting validation over ~file2.xml"
        content:      
            - run:
                caption:  "Looking for ~file1.xml... "
                command:  "GetFile"
                arguments: "--path {$CURRENT_FOLDER} --file file1.xml"
                store: "$FILE1.XML"
                expected: "%file1.xml" 
                onerror: "SKIP"

            - connector:    
                caption:  "Loading ~file1.xml... "          
                type: "Xml"   
                name: "XmlDTD"     
                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE1.XML}"     
                onexception: "SKIP"   

            - run:
                caption:  "Looking for ~file2.xml... "
                command:  "GetFile"
                arguments: "--path {$CURRENT_FOLDER} --file file2.xml"
                store: "$FILE2.XML"
                expected: "%file2.xml" 
                onerror: "SKIP"

            - connector:  
                caption:  "Loading ~file2.xml... "          
                type: "Xml"        
                name: "XmlXSD"        
                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE2.XML}"
                onexception: "SKIP"           
                                 
            - run:
                caption:  "Checking that file1.xml and file2.xml are using the same hierarchy... "
                connector: "XmlXSD"
                command:  "Equals"
                arguments: 
                    xmlConn: !!Connector "XmlDTD"
                expected: True
                onerror: "SKIP"
                        
            - question:                     
                description: "Starting validation over ~file2.xsd"        
                content:
                    - run:
                        caption:  "Looking for ~file2.xsd... "
                        command:  "GetFile"
                        arguments: "--path {$CURRENT_FOLDER} --file file2.xsd"
                        store: "$FILE2.XSD"
                        expected: "%file2.xsd"
                        onerror: "SKIP" 
                    
                    - connector:   
                        caption:  "Loading ~file2.xsd... "    
                        type: "PlainText"        
                        arguments: "--folder {$CURRENT_FOLDER} --file {$FILE2.XSD}" 
                        onexception: "SKIP" 
                            
                    - run:
                        caption:  "Looking for comments... "                       
                        connector: "PlainText"
                        command:  "Count"
                        arguments: "--regex <!--[\\s\\S\n]*?-->"
                        expected: ">1"
                        onerror: "SKIP" 
                        
                    - question:     
                        score: !!float 2                
                        description: "Content validation"        
                        content:                                   
                            - connector:
                                #Note: this will throw an exception if cannot load the file with its XSD
                                caption:  "Checking document's content... "                        
                                type: "Xml"   
                                name: "XmlXSD"   
                                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE2.XML} --validation Schema"                    
                        
                    - question:  
                        score: !!float 2                         
                        description: "Comments validation"        
                        content:      
                            - run:
                                caption:  "Checking document's comments... "
                                connector: "PlainText"
                                command:  "Count"
                                arguments: "--regex <!--[\\s\\S\n]*?-->"
                                expected: ">1"
                             
    - question: 
        description: "Starting validation over ~file3.xml"
        content:      
            - run:
                caption:  "Looking for ~file3.xml... "
                command:  "GetFile"
                arguments: "--path {$CURRENT_FOLDER} --file {$FILE3.XML}"
                store: "$FILE3.XML"
                expected: "%file3.xml" 
                onerror: "SKIP"

            - connector:  
                caption:  "Loading ~file3.xml... "          
                type: "Xml"        
                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE3.XML}"
                onexception: "SKIP"           
                                                                     
            - connector:            
                type: "PlainText"        
                arguments: "--folder {$CURRENT_FOLDER} --file {$FILE3.XML}" 
                            
            - run:
                caption:  "Looking for comments... "                       
                connector: "PlainText"
                command:  "Count"
                arguments: "--regex <!--[\\s\\S\n]*?-->"
                expected: ">1"
                onerror: "SKIP" 
                        
            - question:     
                score: !!float 1                
                description: "Content validation"        
                content:                                                       
                    - run:
                        caption:  "Checking for a default namespace... "                
                        connector: "Xml"
                        command:  "CountNodes"
                        arguments: "--xpath ./*/namespace::*[name()='']"
                        expected: "=1"

                    - run:
                        caption:  "Checking for a custom namespaces... "                
                        connector: "Xml"
                        command:  "CountNodes"
                        arguments: "--xpath ./*/namespace::*[name()!='']"
                        expected: ">1"

                    - run:
                        caption:  "Checking for a root node with using the default namespace... "                
                        connector: "Xml"
                        command:  "CountNodes"
                        arguments: "--xpath //*[namespace-uri()=//*/namespace::*[name()='']]"
                        expected: "=1"

                    - run:
                        caption:  "Checking for the amount of nodes using the first namespace... "                
                        connector: "Xml"
                        command:  "CountNodes"
                        arguments: "--xpath //*[namespace-uri()=//*/namespace::*[name()!=''][1]]"
                        expected: "={$NODES_ALL_QTY}"

                    - run:
                        caption:  "Checking for the amount of nodes using the second namespace... "                
                        connector: "Xml"
                        command:  "CountNodes"
                        arguments: "--xpath //*[namespace-uri()=//*/namespace::*[name()!=''][2]]"
                        expected: "={$NODES_ALL_QTY}"
                
            - question:  
                score: !!float 1                        
                description: "Comments validation"        
                content:      
                    - run:
                        caption:  "Checking document's comments... "
                        connector: "PlainText"
                        command:  "Count"
                        arguments: "--regex <!--[\\s\\S\n]*?-->"
                        expected: ">1"