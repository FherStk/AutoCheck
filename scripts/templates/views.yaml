# Copyright Â© 2021 Fernando Porrino Serrano
# Third party software licenses can be found at /docs/credits/credits.md

# This file is part of AutoCheck.

# AutoCheck is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# AutoCheck is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with AutoCheck.  If not, see <https://www.gnu.org/licenses/>.

name: "ASIX - M02 (UF3): Views Assignment"
version: "1.1.0.0"

body:
    - vars:
        id_fabrica: 0
        id_empleat: 0

    - connector:            
        type: "Postgres"        
        arguments: "--host {$CURRENT_HOST} --database {$CURRENT_DATABASE} --username postgres --password postgres"  
      
    - question:     
        description: "View creation"
        score: 2
        content:        
            - run:
                caption: "Checking view creation..."
                connector: "Postgres"
                command:  "ExistsTable"      
                arguments: "--schema gerencia --table responsables"
                expected: True 
        
            - run:
                caption: "Checking view definition..."
                connector: "Postgres"
                command:  "CompareSelectWithView"      
                arguments: 
                    schema: "gerencia"
                    table: "responsables"
                    query: "SELECT e.id AS id_responsable,
                                e.nom AS nom_responsable,
                                e.cognoms AS cognoms_responsable,
                                f.id AS id_fabrica,
                                f.nom AS nom_fabrica
                            FROM rrhh.empleats e
                            LEFT JOIN produccio.fabriques f ON e.id = f.id_responsable"
                expected: True

    - question: 
        description: "Insert rule"
        content:        
            - run:       
                caption: "Inserting new data into the view..."
                connector: "Postgres"
                command:  "ExecuteNonQuery"      
                arguments: --query "INSERT INTO gerencia.responsables (nom_fabrica, nom_responsable, cognoms_responsable) VALUES ('NEW FACTORY NAME 1', 'NEW EMPLOYEE NAME 1', 'NEW EMPLOYEE SURNAME 1')"
        
            - run:            
                caption: "Looking for the last 'fabrica'..."
                connector: "Postgres"
                command:  "ExecuteScalar"      
                arguments: "--query SELECT MAX(id) FROM produccio.fabriques"
                store: "$ID_FABRICA"   

            - run:            
                caption: "Looking for the last 'empleat'..."
                connector: "Postgres"
                command:  "ExecuteScalar"      
                arguments: "--query SELECT MAX(id) FROM rrhh.empleats"  
                store: "$ID_EMPLEAT"                 
        
            - question: 
                description: "Insert rule (empleats)"
                content:  
                    - run:
                        caption: "Checking content from gerencia.responsables..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id_responsable) FROM gerencia.responsables WHERE id_responsable={$ID_EMPLEAT} AND nom_responsable='NEW EMPLOYEE NAME 1' AND cognoms_responsable='NEW EMPLOYEE SURNAME 1'"
                        expected: 1

                    - run:
                        caption: "Checking content from rrhh.empleats..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id) FROM rrhh.empleats WHERE id={$ID_EMPLEAT} AND nom_responsable='NEW EMPLOYEE NAME 1' AND cognoms_responsable='NEW EMPLOYEE SURNAME 1' AND id_cap=1 AND id_departament=1"
                        expected: 1

            - question: 
                description: "Insert rule (fabriques)"
                content:  
                    - run:
                        caption: "Checking content from gerencia.responsables..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id_fabrica) FROM gerencia.responsables WHERE id_fabrica={$ID_FABRICA} AND nom_fabrica='NEW FACTORY NAME 1'"
                        expected: 1

                    - run:
                        caption: "Checking content from rrhh.empleats..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id) FROM produccio.fabriques WHERE id={$ID_FABRICA} AND nom_fabrica='NEW FACTORY NAME 1' AND id_responsable={$ID_EMPLEAT}"
                        expected: 1
        
    - question: 
        description: "Update rule"
        content:        
            - run:       
                #Do not assume that INSERT on view is working, so adding directly to the table is needed
                caption: "Inserting new data into 'empleats'..."
                connector: "Postgres"
                command:  "ExecuteNonQuery"      
                arguments: --query "INSERT INTO rrhh.empleats (id, nom, cognoms, id_cap, id_departament) VALUES ((SELECT MAX(id)+1 FROM rrhh.empleats), 'NEW EMPLOYEE NAME 1', 'NEW EMPLOYEE SURNAME 1', 1, 1)"            
            
            - run:            
                caption: "Looking for the last 'empleat'..."
                connector: "Postgres"
                command:  "ExecuteScalar"      
                arguments: "--query SELECT MAX(id) FROM rrhh.empleats"  
                store: "$ID_EMPLEAT"   

            - run:       
                #Do not assume that INSERT on view is working, so adding directly to the table is needed
                caption: "Inserting new data into 'fabriques'..."
                connector: "Postgres"
                command:  "ExecuteNonQuery"      
                arguments: --query "INSERT INTO produccio.fabriques (id, nom, pais, direccio, telefon, id_responsable) VALUES ((SELECT MAX(id)+1 FROM produccio.fabriques), 'NEW FACTORY NAME 2', 'NEW FACTORY COUNTRY 2', 'NEW FACTORY ADDRESS 2', 'NEW FACT. PHONE 2', {$ID_EMPLEAT})"                          

            - run:            
                caption: "Looking for the last 'fabrica'..."
                connector: "Postgres"
                command:  "ExecuteScalar"      
                arguments: "--query SELECT MAX(id) FROM produccio.fabriques"
                store: "$ID_FABRICA"               

            - question: 
                description: "Update rule (empleats)"    
                content:
                    - run:       
                        caption: "Updating data from the view..."
                        connector: "Postgres"
                        command:  "ExecuteNonQuery"      
                        arguments: --query "UPDATE gerencia.responsables SET nom_responsable='UPDATED EMPLOYEE NAME 2', cognoms_responsable='UPDATED EMPLOYEE SURNAME 2' FROM gerencia.responsables WHERE id_responsable={$ID_EMPLEAT}"                          
                        
                    - run:
                        caption: "Checking content from gerencia.responsables..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id_responsable) FROM gerencia.responsables WHERE id_responsable={$ID_EMPLEAT} AND nom_responsable='UPDATED EMPLOYEE NAME 2' AND cognoms_responsable='UPDATED EMPLOYEE SURNAME 2'"                  
                        expected: 1

                    - run:
                        caption: "Checking content from rrhh.empleats..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id) FROM rrhh.empleats WHERE id={$ID_EMPLEAT} AND nom_responsable='UPDATED EMPLOYEE NAME 2' AND cognoms_responsable='UPDATED EMPLOYEE SURNAME 2' AND id_cap=1 AND id_departament=1"                  
                        expected: 1

            - question: 
                description: "Update rule (fabriques)"    
                content:
                    - run:       
                        caption: "Updating data from the view..."
                        connector: "Postgres"
                        command:  "ExecuteNonQuery"      
                        arguments: --query "UPDATE gerencia.responsables SET nom_fabrica='UPDATED FACTORY NAME 2' FROM gerencia.responsables WHERE id_fabrica={$ID_FABRICA}"                                                  

                    - run:
                        caption: "Checking content from gerencia.responsables..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id_fabrica) FROM gerencia.responsables WHERE id_fabrica={$ID_FABRICA} AND nom_fabrica='UPDATED FACTORY NAME 2'"
                        expected: 1

                    - run:
                        caption: "Checking content from produccio.fabriques..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id) FROM produccio.fabriques WHERE id={$ID_FABRICA} AND nom_fabrica='UPDATED FACTORY NAME 2' AND id_responsable={$ID_EMPLEAT}"
                        expected: 1

    - question: 
        description: "Delete rule"
        content:        
            - run:       
                #Do not assume that INSERT on view is working, so adding directly to the table is needed
                caption: "Inserting new data into 'empleats'..."
                connector: "Postgres"
                command:  "ExecuteNonQuery"      
                arguments: --query "INSERT INTO rrhh.empleats (id, nom, cognoms, id_cap, id_departament) VALUES ((SELECT MAX(id)+1 FROM rrhh.empleats), 'NEW EMPLOYEE NAME 1', 'NEW EMPLOYEE SURNAME 1', 1, 1)"            
            
            - run:            
                caption: "Looking for the last 'empleat'..."
                connector: "Postgres"
                command:  "ExecuteScalar"      
                arguments: "--query SELECT MAX(id) FROM rrhh.empleats"  
                store: "$ID_EMPLEAT"   

            - run:       
                #Do not assume that INSERT on view is working, so adding directly to the table is needed
                caption: "Inserting new data into 'fabriques'..."
                connector: "Postgres"
                command:  "ExecuteNonQuery"      
                arguments: --query "INSERT INTO produccio.fabriques (id, nom, pais, direccio, telefon, id_responsable) VALUES ((SELECT MAX(id)+1 FROM produccio.fabriques), 'NEW FACTORY NAME 2', 'NEW FACTORY COUNTRY 2', 'NEW FACTORY ADDRESS 2', 'NEW FACT. PHONE 2', {$ID_EMPLEAT})"                          

            - run:            
                caption: "Looking for the last 'fabrica'..."
                connector: "Postgres"
                command:  "ExecuteScalar"      
                arguments: "--query SELECT MAX(id) FROM produccio.fabriques"
                store: "$ID_FABRICA"               

            - question: 
                description: "Delete rule (empleats)"    
                content:
                    - run:       
                        caption: "Deleting data from the view..."
                        connector: "Postgres"
                        command:  "ExecuteNonQuery"      
                        arguments: --query "DELETE gerencia.responsables WHERE id_responsable={$ID_EMPLEAT}"
                        
                    - run:
                        caption: "Checking content from gerencia.responsables..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id_responsable) FROM gerencia.responsables WHERE id_responsable={$ID_EMPLEAT}"
                        expected: 0

                    - run:
                        caption: "Checking content from rrhh.empleats..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id) FROM rrhh.empleats WHERE id={$ID_EMPLEAT}"
                        expected: 0

                    - run:
                        caption: "Checking content from produccio.fabriques..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"
                        arguments: "--query SELECT COUNT(id) FROM produccio.fabriques WHERE id_responsable={$ID_EMPLEAT}"
                        expected: 0

            - question: 
                description: "Delete rule (fabriques)"    
                content:
                    - run:       
                        caption: "Updating data from the view..."
                        connector: "Postgres"
                        command:  "ExecuteNonQuery"      
                        arguments: --query "DELETE gerencia.responsables WHERE id_fabrica={$ID_FABRICA}"                                                  

                    - run:
                        caption: "Checking content from gerencia.responsables..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id_fabrica) FROM gerencia.responsables WHERE id_fabrica={$ID_FABRICA}"
                        expected: 0

                    - run:
                        caption: "Checking content from produccio.fabriques..."
                        connector: "Postgres"
                        command:  "ExecuteScalar"      
                        arguments: "--query SELECT COUNT(id) FROM produccio.fabriques WHERE id={$ID_FABRICA}"
                        expected: 0

    - question: 
        description: "Permissions"
        content:        
            - run:       
                #Do not assume that INSERT on view is working, so adding directly to the table is needed
                caption: "Looking for permissions into the view 'responsables'..."
                connector: "Postgres"
                command:  "GetTablePrivileges"      
                arguments: "--schema gerencia --table responsables --role it"
                expected: "r"

            - run:            
                caption: "Looking for permissions into the schema 'gerencia'..."
                connector: "Postgres"
                command:  "GetSchemaPrivileges"      
                arguments: "--schema gerencia --role it"
                expected: "U"