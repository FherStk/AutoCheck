# Copyright © 2022 Fernando Porrino Serrano
# Third party software licenses can be found at /docs/credits/credits.md

# This file is part of AutoCheck.

# AutoCheck is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# AutoCheck is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with AutoCheck.  If not, see <https://www.gnu.org/licenses/>.

name: "DAM - M03 (UF1): Mineseeker"
version: "1.0.0.3"

#TODO: sacar las preguntas de dentro de la primera y hacer un ABORT si no compila.
#     arreglar fallo en codigo fuente al poner minas en casillas ocupadas

body:
      - vars:
            filepath: NULL   

      - connector:  
            type: "TextStream"
        
      - question: 
            description: "Checking main java file"        
            score: 0.5                  
            content:                            
                  - run:
                        caption:  "Looking for ~.java... "
                        command:  "GetFile"
                        arguments: "--path {$CURRENT_FOLDER_PATH} --file *.java"
                        store: "$FILEPATH"
                        expected: "%.java" 
                        onerror: "ABORT"   

                  - run:
                        connector: "TextStream"
                        command: "FileName"
                        arguments: "--path {$FILEPATH}"
                        store: "FILENAME"

                  - connector:  
                        caption:  "Loading the file ~{$FILENAME}... "
                        type: "PlainText"        
                        arguments: "--filePath {$FILEPATH}"
                        onexception: "ABORT"                         
                              
                  - run:
                        caption:  "Compiling the file ~{$FILENAME}... "
                        command:  "javac {$FILEPATH}"            
                        expected: "" 
                        onexception: "ABORT"

      - question:                     
            description: "Main menu"
            content:                            
            - run:
                  caption:  "Checking the main menu... "            
                  command:  "echo 3 | java {$FILEPATH}"            
                  expected: "%Escull una opció:\n   1. Emplenar el taulell\n   2. Mostrar el taulell\n   3. Sortir%" 

      - question:                     
            description: "Input data"
            content:      
                  - run:
                        caption:  "Checking the input data giving no data... "            
                        command:  "echo 1 | java {$FILEPATH}"
                        expected: "Exception%" 

                  - run:
                        caption:  "Checking the input data giving rows... "            
                        command:  "echo 1 5 | java {$FILEPATH}"
                        expected: "Exception%" 

                  - run:
                        caption:  "Checking the input data giving rows and columns... "            
                        command:  "echo 1 5 4 | java {$FILEPATH}"
                        expected: "Exception%"

                  - run:
                        caption:  "Checking the input data giving rows, columns and mines... "            
                        command:  "echo 1 5 4 1 3 | java {$FILEPATH}"
                        expected: "%De quantes files vols el taulell?\nDe quantes columnes vols el taulell?\nQuantes mines vols al taulell?%" 
      - question:                     
            description: "Data verification"
            score: 0.5
            content:      
                  - run:
                        caption:  "Checking that more mines that cells is not allowed... "            
                        command:  "echo 1 1 1 2 3 | java {$FILEPATH}"
                        expected: "%NO ES PODEN POSAR MÉS MINES QUE CASELLES%" 

      - connector:  
            type: "PlainText"        
            arguments: "--filePath {$FILEPATH}"

      - question:                     
            description: "Board internal creation"
            content:                         
                  - run:
                        caption:  "Checking the internal board creation... "          
                        connector: "PlainText"
                        command:  "Count"
                        arguments: --regex "\w*\[\]\[\]"
                        expected: ">0"    

                  - run:
                        caption:  "Checking the internal board sizing... "          
                        connector: "PlainText"
                        command:  "Count"
                        arguments: --regex "=\s*new\s*\w*\[\w*\]\[\w*\]\s*;"
                        expected: ">0"               

      - question:                     
            description: "Board internal filling"
            content:              
                  - run:
                        caption:  "Checking the internal board filling... "          
                        connector: "PlainText"
                        command:  "Count"
                        arguments: --regex "(?:for\s*\(int\s*\w*\s*=\s*\d;\s*\w\s*<\s*\w*;\s*(?:\w*\+\+|\+\+\w*)\)\s*{(?:\n|\\n|\\r\\n)*\s*){2}(?:.|\n)\s*\w*\[\w*\]\[\w*\]\s*=" 
                        expected: ">0"  

                  - run:
                        caption:  "Checking the empty cell filling... "          
                        connector: "PlainText"
                        command:  "Count"
                        arguments: 
                              regex: \w*\s*\[\w*\]\[\w*\]\s*=\s*(?:"\[\s\]"|'\s'|"\s"|0)\s*
                        expected: ">0"  

      - question:                     
            description: "Mines internal filling"
            content:                            
                  - run:
                        caption:  "Checking that random location is being used... "          
                        connector: "PlainText"
                        command:  "Count"
                        arguments: --regex "for\s*\((?:\w*|\s*|=|;|<|>|\+|\-|\\|\*)*\)\s*{(?:.|\n)*(?:\s*\w*\s*\w*\s*=\s*ThreadLocalRandom\.current\(\)\.nextInt\(\d,\s*\w*\))(?:.|\n)*(?:\s*\w*\s*\w*\s*=\s*ThreadLocalRandom\.current\(\)\.nextInt\(\d,\s*\w*\))"
                        expected: ">0"   

                  - run:
                        caption:  "Checking the mine cell filling... "          
                        connector: "PlainText"
                        command:  "Count"
                        arguments: 
                              regex: \w*\s*\[\w*\]\[\w*\]\s*=\s*(?:"\[O\]"|'O'|"O"|1)\s*
                        expected: ">0"  

      - question:                     
            description: "Return to the menu after filling the board"
            score: 0.5
            content:                            
                  - run:
                        caption:  "Checking the return to the main menu... "            
                        command:  "echo 1 5 4 1 3 | java {$FILEPATH}"            
                        expected: "%Escull una opció:\n   1. Emplenar el taulell\n   2. Mostrar el taulell\n   3. Sortir%"       
            
      - question:                     
            description: "Displaying board's empty cells"
            content:                            
                  - run:                    
                        command:  "echo 1 1 1 0 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 1x1 board with no mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "(?:\[\s\]\s*(?:\n|\\n)){1}"
                        expected: "1" 

                  - run:                    
                        command:  "echo 1 5 3 0 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 5x3 board with no mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "((?:\[\s\]\s){2}\[\s\]\s*(?:\n|\\n)){5}"
                        expected: "1" 

                  - run:                    
                        command:  "echo 1 3 5 0 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 3x5 board with no mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "((?:\[\s\]\s){4}\[\s\]\s*(?:\n|\\n)){3}"
                        expected: "1" 

                  - run:                    
                        command:  "echo 1 5 5 0 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 5x5 board with no mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "((?:\[\s\]\s){4}\[\s]\s*(?:\n|\\n)){5}"
                        expected: "1" 

      - question:                     
            description: "Displaying board's mine cells"
            content:                            
                  - run:                    
                        command:  "echo 1 1 1 1 2 3 | java {$FILEPATH}"            
                  
                  - run:
                        caption:  "Checking the display for a 1x1 board full of mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "(?:\[O\]\s*(?:\n|\\n)){1}"
                        expected: "1"                   

                  - run:                    
                        command:  "echo 1 5 3 15 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 5x3 board full of mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "((?:\[O\]\s){2}\[O\]\s*(?:\n|\\n)){5}"
                        expected: "1" 

                  - run:                    
                        command:  "echo 1 3 5 15 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 3x5 board full of mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "((?:\[O\]\s){4}\[O\]\s*(?:\n|\\n)){3}"
                        expected: "1" 

                  - run:                    
                        command:  "echo 1 5 5 25 2 3 | java {$FILEPATH}"            

                  - run:
                        caption:  "Checking the display for a 5x5 board full of mines... "            
                        connector: "TextStream"         
                        command:  "Count"            
                        arguments: --content {$RESULT} --regex "((?:\[O\]\s){4}\[O\]\s*(?:\n|\\n)){5}"
                        expected: "1" 

      - question:                     
            description: "Displaying empty board message"
            content:  
                  - run:
                        caption:  "Checking the empty message... "   
                        command:  "echo 2 3 | java {$FILEPATH}"            
                        expected: "%NO S’HA CREAT CAP TAULELL%" 

      - question:                     
            description: "Return to the menu after displaying the board"
            score: 0.5
            content:  
                  - run:
                        caption:  "Checking the empty message... "   
                        command:  "echo 2 3 | java {$FILEPATH}"            
                        expected: "%Escull una opció:\n   1. Emplenar el taulell\n   2. Mostrar el taulell\n   3. Sortir%" 
